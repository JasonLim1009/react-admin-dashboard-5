{"version":3,"file":"static/js/3507.93df5ff5.chunk.js","mappings":"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","sources":["app/tables/InventoryLocation.js","app/tables/InventorySupplier.js","app/SpareParts/InventoryFrom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\n\r\nconst InventoryLocation = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n  const get_inventorymaster_location = (site_ID) => {\r\n    APIServices.get_inventorymaster_location(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n        get_inventorymaster_location(site_ID);\r\n      }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n    const handleRowClick = (data) => {\r\n     \r\n            console.log(data.col56)\r\n        };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryLocation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\nconst InventorySupplier = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [Supplier, setSupplier] = useState([]);\r\n  const [selected_Supplier, setSelected_Supplier] = useState([]);\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const [SupplierPartNo, setSupplierPartNo] = useState(\"\");\r\n\r\n  const [Manufacturer, setManufacturer] = useState([]);\r\n  const [selected_Manufacturer, setSelected_Manufacturer] = useState([]);\r\n\r\n  const [LastItemCost, setLastItemCost] = useState(\"0\");\r\n\r\n  const [RetailItemCost, setRetailItemCost] = useState(\"0\");\r\n\r\n  const [MinimumOrderQty, setMinimumOrderQty] = useState(\"0\");\r\n\r\n  const [MultiplierQuantity, setMultiplierQuantity] = useState(\"0\");\r\n\r\n  const [Discount, setDiscount] = useState(\"0\");\r\n\r\n  const [LastReceiveDate, setLastReceiveDate] = useState(new Date());\r\n  \r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n  const get_inventorymaster_supplier = (site_ID) => {\r\n    APIServices.get_inventorymaster_supplier(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_inventorymaster_supplier(site_ID);\r\n  }, []);\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n    const handleRowClick = (data) => {\r\n    \r\n        console.log(data.col56)\r\n    };\r\n\r\n\r\n    const get_inventory_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n\r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n\r\n       \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n\r\n\r\n               console.log('get_dropdown', responseJson.data)\r\n\r\n\r\n                let Supplier = responseJson.data.data.supplier.map(item => ({\r\n                    label: item.sup_mst_supplier_cd +\" : \"+ item.sup_mst_desc,\r\n                    value: item.sup_mst_supplier_cd            \r\n                    }));\r\n                    setSupplier(Supplier);\r\n\r\n                let TaxCode = responseJson.data.data.ITM_Tax_Code.map(item => ({\r\n                    label: item.tax_mst_tax_cd +\" : \"+ item.tax_mst_desc,\r\n                    value: item.tax_mst_tax_cd            \r\n                    }));\r\n                    setTaxCode(TaxCode);\r\n\r\n                let Manufacturer = responseJson.data.data.ITM_Manufacturer.map(item => ({\r\n                    label: item.mfg_mst_mfg_cd +\" : \"+ item.mfg_mst_company,\r\n                    value: item.mfg_mst_mfg_cd            \r\n                    }));\r\n                    setManufacturer(Manufacturer);\r\n\r\n\r\n\r\n                    //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                    Swal.close();\r\n                \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.close();\r\n           \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_sitecode...',\r\n              text: e,          \r\n            })\r\n          });\r\n    }\r\n\r\n\r\n    const get_dropdown_ParentFlag = (site_ID, selected_asset) => {  \r\n\r\n\r\n        console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n        \r\n        APIServices.get_dropdown_ParentFlag(site_ID, selected_asset).then((responseJson)=>{\r\n\r\n\r\n           console.log(responseJson.data.status);\r\n\r\n            if (responseJson.data.status === 'SUCCESS') {  \r\n\r\n                    Swal.close();\r\n                    setButton_save(\"Submit\")\r\n                    get_inventorymaster_select(site_ID, selected_asset);\r\n              \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {           \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_Inventory_select...',\r\n              text: e,          \r\n            })\r\n          });\r\n\r\n    }\r\n  \r\n\r\n    const get_inventorymaster_select = () => {\r\n\r\n      \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n\r\n        APIServices.get_inventorymaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n\r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n\r\n// **************************************** check read data ******************************************\r\n                console.log('SELECT ITM: '+ JSON.stringify(responseJson.data.data))\r\n               \r\n               for (var index in responseJson.data.data) {\r\n               \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n\r\n\r\n                setSelected_Supplier( {label:responseJson.data.data[index].itm_sup_supplier} )\r\n                setSelected_TaxCode( {label:responseJson.data.data[index].itm_sup_tax_cd} )\r\n                setSupplierPartNo( responseJson.data.data[index].itm_sup_supplier_partno )\r\n                setManufacturer( responseJson.data.data[index].itm_sup_partmfg )\r\n                setLastItemCost( responseJson.data.data[index].itm_sup_last_itemcost )\r\n                setRetailItemCost( responseJson.data.data[index].itm_sup_retail_price )\r\n               \r\n                if(responseJson.data.data[index].itm_sup_last_rcvd_date == null){\r\n                    setLastReceiveDate('')\r\n                }else{\r\n\r\n                    setLastReceiveDate( Moment(responseJson.data.data[index].itm_sup_last_rcvd_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT LR Date : '+ Moment(responseJson.data.data[index].itm_sup_last_rcvd_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setMinimumOrderQty( responseJson.data.data[index].itm_sup_min_orderqty )\r\n                setMultiplierQuantity( responseJson.data.data[index].itm_sup_rcpts_ctr )\r\n                setDiscount( responseJson.data.data[index].itm_sup_discount_pct )\r\n\r\n\r\n              }\r\n\r\n\r\n              Swal.close();\r\n\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_Inventory_select...',\r\n              text: e,          \r\n            })\r\n          });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n        console.log('select select',location.state.select);\r\n        console.log('select ITMID',location.state.RowID);\r\n    \r\n        get_inventory_status(site_ID, \"All\", location.state.select);       \r\n       \r\n\r\n    },[location]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n            {/******************** Inventory Supplier ********************/}\r\n            <div>\r\n                <Modal show={show} onHide={handleClose} centered >\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Supplier</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n\r\n                    <Modal.Body>\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_Supplier\">\r\n                                <label className=\"col-sm-4 col-form-label\">Supplier:</label>\r\n                                <div className=\"col-sm-7\">\r\n                                    <Select  \r\n                                       isClearable={true}  \r\n                                       options={Supplier}\r\n                                       value={selected_Supplier}\r\n                                       onChange={setSelected_Supplier} // using id as it is unique\r\n                                       required\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_TaxCode\">\r\n                                <label className=\"col-sm-4 col-form-label\">Tax Code:</label>\r\n                                <div className=\"col-sm-7\">\r\n                                    <Select  \r\n                                       isClearable={true}  \r\n                                       options={TaxCode}\r\n                                       value={selected_TaxCode}\r\n                                       onChange={setSelected_TaxCode} // using id as it is unique\r\n                                       required\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_SupplierPartNo\">\r\n                                <label className=\"col-sm-4 col-form-label\">Supplier Part No:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                    <label className=\"col-sm-12 form-label\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={SupplierPartNo}\r\n                                            onChange={(e) => setSupplierPartNo(e.target.value)}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_Manufacturer\">\r\n                                <label className=\"col-sm-4 col-form-label\">Manufacturer:</label>\r\n                                <div className=\"col-sm-7\">\r\n                                    <Select  \r\n                                       isClearable={true}  \r\n                                       options={Manufacturer}\r\n                                       value={selected_Manufacturer}\r\n                                       onChange={setSelected_Manufacturer} // using id as it is unique\r\n                                       required\r\n                                    />\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_LastItemCost\">\r\n                                <label className=\"col-sm-4 col-form-label\">Last Item Cost:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control  \r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={LastItemCost} \r\n                                        onChange={(e) => setLastItemCost(e.target.value)}\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_RetailItemCost\">\r\n                                <label className=\"col-sm-4 col-form-label\">Retail Item Cost:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control  \r\n                                        type=\"number\"  \r\n                                        placeholder=\".00\" \r\n                                        value={RetailItemCost} \r\n                                        onChange={(e) => setRetailItemCost(e.target.value)}\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_LastReceiveDate\">\r\n                                <label className=\"col-sm-4 col-form-label\">Last Receive Date:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control                                            \r\n                                        type=\"datetime-local\"  \r\n                                        value={LastReceiveDate} \r\n                                        onChange={(e) => setLastReceiveDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_MinimumOrderQty\">\r\n                                <label className=\"col-sm-4 col-form-label\">Minimum Order Qty:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control  \r\n                                        type=\"number\"  \r\n                                        placeholder=\".00\" \r\n                                        value={MinimumOrderQty} \r\n                                        onChange={(e) => setMinimumOrderQty(e.target.value)}\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_MultiplierQuantity\">\r\n                                <label className=\"col-sm-4 col-form-label\">Multiplier Quantity:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control  \r\n                                        type=\"number\"  \r\n                                        placeholder=\"0\" \r\n                                        value={MultiplierQuantity} \r\n                                        onChange={(e) => setMultiplierQuantity(e.target.value)}\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_Discount\">\r\n                                <label className=\"col-sm-4 col-form-label\">Discount %:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control  \r\n                                        type=\"number\"  \r\n                                        placeholder=\"0.00\" \r\n                                        value={Discount} \r\n                                        onChange={(e) => setDiscount(e.target.value)}\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    \r\n\r\n                    <Modal.Footer>\r\n\r\n                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                            // Close modal\r\n                            handleClose();\r\n                        }}>\r\n                        {/* {Button_save} */}\r\n                        Submit\r\n                        </Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n            </div> \r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventorySupplier;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport APIServices from \"../services/APIServices\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\r\nimport 'sweetalert2/src/sweetalert2.scss'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport  {useLocation}  from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport {useTable,useSortBy,usePagination,useRowSelect,useResizeColumns  }  from 'react-table';\r\nimport moment from 'moment';\r\n\r\nimport InventoryLocation from \"../tables/InventoryLocation\";\r\nimport InventorySupplier from \"../tables/InventorySupplier\";\r\n\r\nconst InventoryFrom = (props) => {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n\r\n    const handleDragStart = (e) => e.preventDefault();\r\n\r\n    const items = [\r\n      <img src=\"../../assets/images/product_images_2/thumb_image1.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image2.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image3.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image4.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image5.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image6.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image7.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image8.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image9.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image10.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image11.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image12.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n    \r\n    ];\r\n\r\n    const location = useLocation();\r\n  \r\n    const [Button_save, setButton_save] = useState(\"\");\r\n\r\n    const [RowID, setRowID] = useState(\"\");\r\n\r\n    \r\n\r\n    const [Type, setType] = useState([{label:\"S\",value:\"S : Stock\"},{label:\"T\",value:\"T : Tool\"},{label:\"S\",value:\"S : Serialize\"},{label:\"S \",value:\"S : Serialize with Asset\"}]);\r\n    const [selected_Type, setSelected_Type] = useState([]);\r\n\r\n    const [Commodity_Code, setCommodity_Code] = useState([]);\r\n    const [selected_Commodity_Code, setSelected_Commodity_Code] = useState([]);\r\n\r\n    const [StockNo, setStockNo] = useState(\"\");\r\n    const [StockNo_disabled, setStockNo_disabled] = useState(false);\r\n\r\n    const [Stock_Group, setStock_Group] = useState([]);\r\n    const [selected_Stock_Group, setSelected_Stock_Group] = useState([]);\r\n\r\n    const [Master_Location, setMaster_Location] = useState([]);\r\n    const [selected_Master_Location, setSelected_Master_Location] = useState([]);\r\n\r\n    const [Part_No, setPart_No] = useState(\"\");\r\n\r\n    const [Order_Rule, setOrder_Rule] = useState([]);\r\n    const [selected_Order_Rule, setSelected_Order_Rule] = useState([]);\r\n\r\n    const [TotalOH, setTotalOH] = useState([]);\r\n    const [TotalOH_disabled, setTotalOH_disabled] = useState(false);\r\n\r\n    const [Cost_Center, setCost_Center] = useState([]);\r\n    const [selected_Cost_Center, setSelected_Cost_Center] = useState([]);\r\n\r\n    const [IssuePrice, setIssuePrice] = useState([]);\r\n    const [IssuePrice_disabled, setIssuePrice_disabled] = useState(false);\r\n\r\n    const [Account, setAccount] = useState([]);\r\n    const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n    const [SerializeCounter, setSerializeCounter] = useState([]);\r\n    const [SerializeCounter_disabled, setSerializeCounter_disabled] = useState(false);\r\n\r\n    const [Description, setDescription] = useState(\"\");\r\n\r\n    const [ExtendedDescription, setExtendedDescription] = useState(\"\");\r\n\r\n    const [PartDeacStatus, setPartDeacStatus] = useState([]);\r\n    const [selected_PartDeacStatus, setSelected_PartDeacStatus] = useState([]);\r\n\r\n    const [AutoSpare, setAutoSpare] = useState(false);\r\n    const [CheckBox_AutoSpare, setCheckBox_AutoSpare] = useState('0');\r\n\r\n    const [IssueUOM, setIssueUOM] = useState([]);\r\n    const [selected_IssueUOM, setSelected_IssueUOM] = useState([]);\r\n\r\n    const [CriticalSpare, setCriticalSpare] = useState(false);\r\n    const [CheckBox_CriticalSpare, setCheckBox_CriticalSpare] = useState('0');\r\n\r\n    const [ReceiveUOM, setReceiveUOM] = useState([]);\r\n    const [selected_ReceiveUOM, setSelected_ReceiveUOM] = useState([]);\r\n\r\n    const [HazardousMaterial, setHazardousMaterial] = useState(false);\r\n    const [CheckBox_HazardousMaterial, setCheckBox_HazardousMaterial] = useState('0');\r\n    \r\n    const [ConversionFactor, setConversionFactor] = useState(\"\");\r\n\r\n    const [ABCClass, setABCClass] = useState(\"\");\r\n\r\n    const [StorageType, setStorageType] = useState([]);\r\n    const [selected_StorageType, setSelected_StorageType] = useState([]);\r\n\r\n    const [OrderPoint, setOrderPoint] = useState(\"0\");\r\n\r\n    const [Cube, setCube] = useState(\"0\");\r\n\r\n    const [Maximum, setMaximum] = useState(\"0\");\r\n\r\n    const [ShelfLife, setShelfLife] = useState(\"0\");\r\n\r\n    const [LastActivityDate, setLastActivityDate] = useState(\"\");\r\n\r\n    const [EOQ, setEOQ] = useState(\"\");\r\n\r\n    const [LastCountDate, setLastCountDate] = useState(\"\");\r\n\r\n    const [NextCountDate, setNextCountDate] = useState(\"\");\r\n\r\n    const [UDFNote1, setUDFNote1] = useState(\"\");\r\n    const [UDFText_1, setUDFText_1] = useState(\"\");\r\n    const [UDFText_2, setUDFText_2] = useState(\"\");\r\n    const [UDFText_3, setUDFText_3] = useState(\"\");\r\n    const [UDFText_4, setUDFText_4] = useState(\"\");\r\n    const [UDFText_5, setUDFText_5] = useState(\"\");\r\n    const [UDFText_6, setUDFText_6] = useState(\"\");\r\n    const [UDFText_7, setUDFText_7] = useState(\"\");\r\n    const [UDFText_8, setUDFText_8] = useState(\"\");\r\n    const [UDFText_9, setUDFText_9] = useState(\"\");\r\n    const [UDFText_10, setUDFText_10] = useState(\"\");\r\n\r\n    const [UDFNumber_1, setUDFNumber_1] = useState(\"0\");\r\n    const [UDFNumber_2, setUDFNumber_2] = useState(\"0\");\r\n    const [UDFNumber_3, setUDFNumber_3] = useState(\"0\");\r\n    const [UDFNumber_4, setUDFNumber_4] = useState(\"0\");\r\n    const [UDFNumber_5, setUDFNumber_5] = useState(\"0\");\r\n\r\n    const [UDFDate_1, setUDFDate_1] = useState(new Date());\r\n    const [UDFDate_2, setUDFDate_2] = useState(new Date());\r\n    const [UDFDate_3, setUDFDate_3] = useState(new Date());\r\n    const [UDFDate_4, setUDFDate_4] = useState(new Date());\r\n    const [UDFDate_5, setUDFDate_5] = useState(new Date());\r\n\r\n    const [AccountType, setAccountType] = useState([{label:\"I\",value:\"I : INVENTORY\"},{label:\"E\",value:\"E : EXPENSE\"}]);\r\n    const [selected_AccountType, setSelected_AccountType] = useState([]);\r\n\r\n    const [TaxCode, setTaxCode] = useState([]);\r\n    const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n    const [YTDUsage, setYTDUsage] = useState(\"\");\r\n\r\n    const [LastYearUsage, setLastYearUsage] = useState(\"\");\r\n\r\n    const [YTDTurns, setYTDTurns] = useState(\"\");\r\n\r\n    const [LastYearTurns, setLastYearTurns] = useState(\"\");\r\n\r\n    const [YTDStockouts, setYTDStockouts] = useState(\"\");\r\n\r\n    const [LastYearStockouts, setLastYearStockouts] = useState(\"\");\r\n    \r\n\r\n    const [CostingRule, setCostingRule] = useState(false);\r\n    const [Radio_CostingRule, setRadio_CostingRule] = useState('');\r\n\r\n    const [Average, setAverage] = useState(\"0.0000\");\r\n\r\n    const [Standard, setStandard] = useState(\"0.0000\");\r\n\r\n    const [Last, setLast] = useState(\"0.0000\");\r\n\r\n    const [PrimaryLocation, setPrimaryLocation] = useState(false);\r\n    const [CheckBox_PrimaryLocation, setCheckBox_PrimaryLocation] = useState('0');\r\n\r\n    const [IncreaseTotalOH, setIncreaseTotalOH] = useState(false);\r\n    const [CheckBox_IncreaseTotalOH, setCheckBox_IncreaseTotalOH] = useState('0');\r\n\r\n    const [UpdateStockCosting, setUpdateStockCosting] = useState(false);\r\n    const [CheckBox_UpdateStockCosting, setCheckBox_UpdateStockCosting] = useState('0');\r\n\r\n    const [AutoNumring, setAutoNumring] = useState(\"\");\r\n\r\n    const [radio, setRadio] = useState('');\r\n      \r\n    const [Columns, setColumns] = useState([]);\r\n    const [Data, setData] = useState([]);\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n   \r\n\r\n    const get_inventory_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n\r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n\r\n       \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n\r\n\r\n               console.log('get_dropdown', responseJson.data)\r\n\r\n\r\n            for (var index in responseJson.data.data.Wko_Auto_numbering) {  \r\n\r\n                if(responseJson.data.data.Wko_Auto_numbering[index].cnt_mst_numbering == \"M\" ){\r\n\r\n                    setStockNo_disabled(false)\r\n                    setAutoNumring('M')\r\n                }else{\r\n                    \r\n                    setStockNo_disabled(true)\r\n                    setAutoNumring('A')\r\n                }              \r\n            }\r\n\r\n\r\n\r\n                let Commodity_Code = responseJson.data.data.ITM_Commodity_Code.map(item => ({\r\n                    label: item.com_mst_com_code +\" : \"+ item.com_mst_desc,\r\n                    value: item.com_mst_desc            \r\n                    }));\r\n                    setCommodity_Code(Commodity_Code);\r\n\r\n                let Stock_Group = responseJson.data.data.ITM_Stock_Group.map(item => ({\r\n                    label: item.itm_grp_cd +\" : \"+ item.itm_grp_desc,\r\n                    value: item.itm_grp_desc            \r\n                    }));\r\n                    setStock_Group(Stock_Group);\r\n\r\n                let Master_Location = responseJson.data.data.ITM_Master_Location.map(item => ({\r\n                    label: item.loc_mst_stk_loc +\" : \"+ item.loc_mst_desc,\r\n                    value: item.loc_mst_desc            \r\n                    }));\r\n                    setMaster_Location(Master_Location);\r\n\r\n                let Order_Rule = responseJson.data.data.ITM_Order_Rule.map(item => ({\r\n                    label: item.odr_mst_odr +\" : \"+ item.odr_mst_desc,\r\n                    value: item.odr_mst_desc            \r\n                    }));\r\n                    setOrder_Rule(Order_Rule);\r\n\r\n                let Cost_Center = responseJson.data.data.CostCenter.map(item => ({\r\n                    label: item.costcenter +\" : \"+ item.descs,\r\n                    value: item.descs            \r\n                    }));\r\n                    setCost_Center(Cost_Center);\r\n\r\n                let Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs,\r\n                    value: item.descs            \r\n                    }));\r\n                    setAccount(Account);\r\n\r\n                let PartDeacStatus = responseJson.data.data.ITM_Part_Deac_Status.map(item => ({\r\n                    label: item.itm_sts_status +\" : \"+ item.itm_sts_typ_cd,\r\n                    value: item.itm_sts_typ_cd            \r\n                    }));\r\n                    setPartDeacStatus(PartDeacStatus);\r\n\r\n                let IssueUOM = responseJson.data.data.ITM_Issue_UOM.map(item => ({\r\n                    label: item.uom_mst_uom +\" : \"+ item.uom_mst_desc,\r\n                    value: item.uom_mst_desc            \r\n                    }));\r\n                    setIssueUOM(IssueUOM);\r\n\r\n                let ReceiveUOM = responseJson.data.data.ITM_Issue_UOM.map(item => ({\r\n                    label: item.uom_mst_uom +\" : \"+ item.uom_mst_desc,\r\n                    value: item.uom_mst_desc            \r\n                    }));\r\n                    setReceiveUOM(ReceiveUOM);\r\n\r\n                let StorageType = responseJson.data.data.ITM_Storage_Type.map(item => ({\r\n                    label: item.stt_mst_stt +\" : \"+ item.stt_mst_desc,\r\n                    value: item.stt_mst_desc            \r\n                    }));\r\n                    setStorageType(StorageType);\r\n\r\n                let TaxCode = responseJson.data.data.ITM_Tax_Code.map(item => ({\r\n                    label: item.tax_mst_tax_cd +\" : \"+ item.tax_mst_desc,\r\n                    value: item.tax_mst_desc            \r\n                    }));\r\n                    setTaxCode(TaxCode);\r\n\r\n\r\n                    if(selected_asset == 'New_Inventory'){ \r\n\r\n                        Swal.close();\r\n                        setButton_save(\"Save\")\r\n    \r\n                    }else{\r\n    \r\n                        setButton_save(\"Update\")\r\n                        get_inventorymaster_select(site_ID, selected_asset);\r\n                    }     \r\n                             \r\n                    \r\n                Swal.close();\r\n                \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.close();\r\n           \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_sitecode...',\r\n              text: e,          \r\n            })\r\n          });\r\n    }\r\n  \r\n\r\n    const get_inventorymaster_select = () => {\r\n\r\n      \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n\r\n        APIServices.get_inventorymaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n\r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n\r\n// **************************************** check read data ******************************************\r\n                console.log('SELECT ITM: '+ JSON.stringify(responseJson.data.data))\r\n               \r\n               for (var index in responseJson.data.data) {\r\n               \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n\r\n\r\n                \r\n                setSelected_Type( {label:responseJson.data.data[index].itm_mst_type} )\r\n                setSelected_Commodity_Code( {label:responseJson.data.data[index].itm_mst_com_code} )\r\n                setStockNo(responseJson.data.data[index].itm_mst_stockno )\r\n                setSelected_Stock_Group( {label:responseJson.data.data[index].itm_mst_itm_grp} )\r\n                setSelected_Master_Location( {label:responseJson.data.data[index].itm_mst_mstr_locn} )\r\n                setPart_No( responseJson.data.data[index].itm_mst_partno )\r\n                setSelected_Order_Rule( {label:responseJson.data.data[index].itm_mst_order_rule} )\r\n                setSelected_Cost_Center( {label:responseJson.data.data[index].itm_mst_costcenter} )\r\n                setSelected_Account( {label:responseJson.data.data[index].itm_mst_account} )\r\n                setDescription( responseJson.data.data[index].itm_mst_desc )\r\n                setExtendedDescription( responseJson.data.data[index].itm_mst_ext_desc )\r\n\r\n                setSelected_PartDeacStatus( {label:responseJson.data.data[index].itm_det_part_deac_status} )\r\n                setAutoSpare( responseJson.data.data[index].itm_det_auto_spare )\r\n                setSelected_IssueUOM( {label:responseJson.data.data[index].itm_det_issue_uom} )\r\n                setCriticalSpare( responseJson.data.data[index].itm_det_critical_spare )\r\n                setSelected_ReceiveUOM( {label:responseJson.data.data[index].itm_det_rcv_uom} )\r\n                setHazardousMaterial( responseJson.data.data[index].itm_det_hzd_mtl )\r\n                setABCClass( responseJson.data.data[index].itm_det_abc_class )\r\n                setSelected_StorageType( {label:responseJson.data.data[index].itm_det_storage_type} )\r\n                setOrderPoint( responseJson.data.data[index].itm_det_order_pt )\r\n                setCube( responseJson.data.data[index].itm_det_cube )\r\n                setMaximum( responseJson.data.data[index].itm_det_maximum )\r\n                setShelfLife( responseJson.data.data[index].itm_det_shelf_life )\r\n\r\n                if(responseJson.data.data[index].itm_det_lastactdate == null){\r\n                    setLastActivityDate('')\r\n                }else{\r\n\r\n                    setLastActivityDate( Moment(responseJson.data.data[index].itm_det_lastactdate.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT LADate : '+ Moment(responseJson.data.data[index].itm_det_lastactdate.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_lastcntdate == null){\r\n                    setLastCountDate('')\r\n                }else{\r\n\r\n                    setLastCountDate( Moment(responseJson.data.data[index].itm_det_lastcntdate.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT LCDate : '+ Moment(responseJson.data.data[index].itm_det_lastcntdate.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_next_cnt_date == null){\r\n                    setNextCountDate('')\r\n                }else{\r\n\r\n                    setNextCountDate( Moment(responseJson.data.data[index].itm_det_next_cnt_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT NCDate : '+ Moment(responseJson.data.data[index].itm_det_next_cnt_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setUDFNote1( responseJson.data.data[index].itm_det_note1 )\r\n                setUDFText_1( responseJson.data.data[index].itm_det_varchar1 )\r\n                setUDFText_2( responseJson.data.data[index].itm_det_varchar2 )\r\n                setUDFText_3( responseJson.data.data[index].itm_det_varchar3 )\r\n                setUDFText_4( responseJson.data.data[index].itm_det_varchar4 )\r\n                setUDFText_5( responseJson.data.data[index].itm_det_varchar5 )\r\n                setUDFText_6( responseJson.data.data[index].itm_det_varchar6 )\r\n                setUDFText_7( responseJson.data.data[index].itm_det_varchar7 )\r\n                setUDFText_8( responseJson.data.data[index].itm_det_varchar8 )\r\n                setUDFText_9( responseJson.data.data[index].itm_det_varchar9 )\r\n                setUDFText_10( responseJson.data.data[index].itm_det_varchar10 )\r\n\r\n                setUDFNumber_1( responseJson.data.data[index].itm_det_numeric1 )\r\n                setUDFNumber_2( responseJson.data.data[index].itm_det_numeric2 )\r\n                setUDFNumber_3( responseJson.data.data[index].itm_det_numeric3 )\r\n                setUDFNumber_4( responseJson.data.data[index].itm_det_numeric4 )\r\n                setUDFNumber_5( responseJson.data.data[index].itm_det_numeric5 )\r\n               \r\n                if(responseJson.data.data[index].itm_det_datetime1 == null){\r\n                    setUDFDate_1('')\r\n                }else{\r\n\r\n                    setUDFDate_1( Moment(responseJson.data.data[index].itm_det_datetime1.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 1 : '+ Moment(responseJson.data.data[index].itm_det_datetime1.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_datetime2 == null){\r\n                    setUDFDate_2('')\r\n                }else{\r\n\r\n                    setUDFDate_2( Moment(responseJson.data.data[index].itm_det_datetime2.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 2 : '+ Moment(responseJson.data.data[index].itm_det_datetime2.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_datetime3 == null){\r\n                    setUDFDate_3('')\r\n                }else{\r\n\r\n                    setUDFDate_3( Moment(responseJson.data.data[index].itm_det_datetime3.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 3 : '+ Moment(responseJson.data.data[index].itm_det_datetime3.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_datetime4 == null){\r\n                    setUDFDate_4('')\r\n                }else{\r\n\r\n                    setUDFDate_4( Moment(responseJson.data.data[index].itm_det_datetime4.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 4 : '+ Moment(responseJson.data.data[index].itm_det_datetime4.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].itm_det_datetime5 == null){\r\n                    setUDFDate_5('')\r\n                }else{\r\n\r\n                    setUDFDate_5( Moment(responseJson.data.data[index].itm_det_datetime5.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 5 : '+ Moment(responseJson.data.data[index].itm_det_datetime5.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_AccountType( {label:responseJson.data.data[index].itm_det_acct_type} )\r\n                setSelected_TaxCode( {label:responseJson.data.data[index].itm_det_tax_cd} )\r\n                setCostingRule( responseJson.data.data[index].itm_det_cr_code )\r\n                setAverage( responseJson.data.data[index].itm_det_avg_cost )\r\n                setStandard( responseJson.data.data[index].itm_det_std_cost )\r\n                setLast( responseJson.data.data[index].itm_det_last_cost )\r\n\r\n                setPrimaryLocation( responseJson.data.data[index].itm_loc_prim_locn_flg )\r\n                \r\n                setIncreaseTotalOH( responseJson.data.data[index].itm_loc_inc_ttloh )\r\n                setUpdateStockCosting( responseJson.data.data[index].itm_loc_stock_cost_flag )\r\n\r\n\r\n              }\r\n\r\n\r\n              Swal.close();\r\n\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_Inventory_select...',\r\n              text: e,          \r\n            })\r\n          });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n        console.log('select select',location.state.select);\r\n        console.log('select ITMID',location.state.RowID);\r\n    \r\n        get_inventory_status(site_ID, \"All\", location.state.select);       \r\n       \r\n\r\n    },[location]);\r\n\r\n\r\n    const onClickChange = () => {\r\n\r\n        \r\n        if(selected_Type == 0 || selected_Type == null){\r\n                    Swal.fire({\r\n                        position: 'top-end',\r\n                        icon: 'error',\r\n                        title: 'Please Select the Type',\r\n                        showConfirmButton: false,\r\n                        timer: 2000\r\n                        \r\n                    })\r\n                } else {\r\n                \r\n                    if(selected_Master_Location == 0 || selected_Master_Location == null){\r\n                        Swal.fire({\r\n                            position: 'top-end',\r\n                            icon: 'error',\r\n                            title: 'Please Select the Master Location',\r\n                            showConfirmButton: false,\r\n                            timer: 2000,\r\n                            \r\n                        })\r\n                    }else{\r\n\r\n                        if(selected_Order_Rule == 0 || selected_Order_Rule == null){\r\n                            Swal.fire({\r\n                                position: 'top-end',\r\n                                icon: 'error',\r\n                                title: 'Please Select the Order Rule',\r\n                                showConfirmButton: false,\r\n                                timer: 2000\r\n                                \r\n                            })\r\n                        }else{\r\n                        \r\n                            if(selected_Cost_Center == 0 || selected_Cost_Center == null){\r\n                                Swal.fire({\r\n                                    position: 'top-end',\r\n                                    icon: 'error',\r\n                                    title: 'Please Select the Cost Center',\r\n                                    showConfirmButton: false,\r\n                                    timer: 2000\r\n                                    \r\n                                })\r\n                            }else{\r\n                    \r\n                                if(selected_Account == 0 || selected_Account == null){\r\n                                    Swal.fire({\r\n                                        position: 'top-end',\r\n                                        icon: 'error',\r\n                                        title: 'Please Select the Account',\r\n                                        showConfirmButton: false,\r\n                                        timer: 2000\r\n                                        \r\n                                        })\r\n                                }else{\r\n                        \r\n                                    if(Description == ''){\r\n                                        Swal.fire({\r\n                                            position: 'top-end',\r\n                                            icon: 'error',\r\n                                            title: 'Please Enter the Description',\r\n                                            showConfirmButton: false,\r\n                                            timer: 2000\r\n                                            \r\n                                            })\r\n                                    }else{\r\n\r\n                                        if(selected_PartDeacStatus == 0 || selected_PartDeacStatus == null){\r\n                                            Swal.fire({\r\n                                                position: 'top-end',\r\n                                                icon: 'error',\r\n                                                title: 'Please Select the Part Deac Status',\r\n                                                showConfirmButton: false,\r\n                                                timer: 2000\r\n                                                \r\n                                            })\r\n                                        } else {\r\n                \r\n                                            if(selected_IssueUOM == 0 || selected_IssueUOM == null){\r\n                                                Swal.fire({\r\n                                                    position: 'top-end',\r\n                                                    icon: 'error',\r\n                                                    title: 'Please Select the Issue UOM',\r\n                                                    showConfirmButton: false,\r\n                                                    timer: 2000\r\n                                                    \r\n                                                    })\r\n                                            }else{\r\n\r\n                                                if(selected_ReceiveUOM == 0 || selected_ReceiveUOM == null){\r\n                                                    Swal.fire({\r\n                                                        position: 'top-end',\r\n                                                        icon: 'error',\r\n                                                        title: 'Please Select the Receive UOM',\r\n                                                        showConfirmButton: false,\r\n                                                        timer: 2000\r\n                                                        \r\n                                                        })\r\n                                                }else{\r\n                                        \r\n                                                    if(Button_save ==  \"Save\"){\r\n                \r\n                                                        New_Inventory();\r\n                                                        console.log(\"Create button clicked!\");\r\n                                                        resetData();\r\n\r\n                                                    }else if(Button_save == \"Update\"){\r\n                \r\n                                                        Update_Inventory();\r\n                                                        console.log(\"Update button clicked here!\");\r\n                                                    }\r\n                                                }\r\n                                            \r\n                                \r\n                                            }\r\n                        \r\n                            \r\n                                        }\r\n                                    \r\n                        \r\n                                    }\r\n                                \r\n                    \r\n                                }\r\n                            \r\n                \r\n                            }\r\n                        }\r\n\r\n                    }\r\n            }\r\n   \r\n    }\r\n\r\n\r\n    const New_Inventory = () => {\r\n\r\n        Swal.fire({  title: 'Loading.... !',allowOutsideClick: false})\r\n        Swal.showLoading();\r\n\r\n\r\n        let get_date = moment().utcOffset('+08:00').format('yyyy-MM-DD HH:mm:ss');\r\n        console.log(get_date)\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n        let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n        let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n\r\n        \r\n        //Select Type\r\n        let setType = '';\r\n        if(selected_Type.label == '' || selected_Type.label == null){\r\n           \r\n           setType = ''\r\n        }else{\r\n\r\n            let Type = selected_Type.label.split(\":\")\r\n            setType = Type[0];\r\n            console.log(\"Type: \", Type[0])\r\n        }\r\n\r\n        //Select Commodity_Code\r\n        let Commodity_Code, setCommodity_Code;\r\n        if(selected_Commodity_Code == '' || selected_Commodity_Code == null){\r\n\r\n            setCommodity_Code =''\r\n        }else{\r\n\r\n            Commodity_Code = selected_Commodity_Code.label.split(\":\")\r\n            setCommodity_Code = Commodity_Code[0];\r\n            console.log(\"Commodity_Code \", Commodity_Code[0])\r\n        }\r\n\r\n        //Select StockNo\r\n        console.log(\"StockNo: \", StockNo)\r\n\r\n        //Select Stock Group\r\n        let Stock_Group, setStock_Group;\r\n        if(selected_Stock_Group == '' || selected_Stock_Group == null){\r\n\r\n            setStock_Group =''\r\n        }else{\r\n\r\n            Stock_Group = selected_Stock_Group.label.split(\":\")\r\n            setStock_Group = Stock_Group[0];\r\n            console.log(\"Stock_Group \", Stock_Group[0])\r\n        }\r\n\r\n        //Select Master Location\r\n        let Master_Location, setMaster_Location;\r\n        if(selected_Master_Location == '' || selected_Master_Location == null){\r\n\r\n            setMaster_Location =''\r\n        }else{\r\n\r\n            Master_Location = selected_Master_Location.label.split(\":\")\r\n            setMaster_Location = Master_Location[0];\r\n            console.log(\"Master_Location \", Master_Location[0])\r\n        }\r\n\r\n        //Select Part No\r\n        console.log(\"Part_No: \", Part_No)\r\n\r\n        //Select Order Rule\r\n        let Order_Rule, setOrder_Rule;\r\n        if(selected_Order_Rule == '' || selected_Order_Rule == null){\r\n\r\n            setOrder_Rule =''\r\n        }else{\r\n\r\n            Order_Rule = selected_Order_Rule.label.split(\":\")\r\n            setOrder_Rule = Order_Rule[0];\r\n            console.log(\"Order_Rule \", Order_Rule[0])\r\n        }\r\n\r\n        //Select Cost Center\r\n        let Cost_Center, setCost_Center;\r\n        if(selected_Cost_Center == '' || selected_Cost_Center == null){\r\n\r\n            setCost_Center =''\r\n        }else{\r\n\r\n            Cost_Center = selected_Cost_Center.label.split(\":\")\r\n            setCost_Center = Cost_Center[0];\r\n            console.log(\"Cost_Center \", Cost_Center[0])\r\n        }\r\n\r\n        //Select Account\r\n        let Account, setAccount;\r\n        if(selected_Account == '' || selected_Account == null){\r\n\r\n            setAccount =''\r\n        }else{\r\n\r\n            Account = selected_Account.label.split(\":\")\r\n            setAccount = Account[0];\r\n            console.log(\"Account \", Account[0])\r\n        }\r\n\r\n        //Select Description\r\n        console.log(\"Description: \", Description)\r\n\r\n        //Select ExtendedDescription\r\n        console.log(\"ExtendedDescription: \", ExtendedDescription)\r\n\r\n        //Select Part Deac Status\r\n        let PartDeacStatus, setPartDeacStatus;\r\n        if(selected_PartDeacStatus == '' || selected_PartDeacStatus == null){\r\n\r\n            setPartDeacStatus =''\r\n        }else{\r\n\r\n            PartDeacStatus = selected_PartDeacStatus.label.split(\":\")\r\n            setPartDeacStatus = PartDeacStatus[0];\r\n            console.log(\"PartDeacStatus \", PartDeacStatus[0])\r\n        }\r\n\r\n        //Select Issue UOM\r\n        let IssueUOM, setIssueUOM;\r\n        if(selected_IssueUOM == '' || selected_IssueUOM == null){\r\n\r\n            setIssueUOM =''\r\n        }else{\r\n\r\n            IssueUOM = selected_IssueUOM.label.split(\":\")\r\n            setIssueUOM = IssueUOM[0];\r\n            console.log(\"IssueUOM \", IssueUOM[0])\r\n        }\r\n\r\n        //Select Receive UOM\r\n        let ReceiveUOM, setReceiveUOM;\r\n        if(selected_ReceiveUOM == '' || selected_ReceiveUOM == null){\r\n\r\n            setReceiveUOM =''\r\n        }else{\r\n\r\n            ReceiveUOM = selected_ReceiveUOM.label.split(\":\")\r\n            setReceiveUOM = ReceiveUOM[0];\r\n            console.log(\"ReceiveUOM \", ReceiveUOM[0])\r\n        }\r\n\r\n        //Select ABC Class\r\n        console.log(\"ABCClass: \", ABCClass)\r\n\r\n        //Select Storage Type\r\n        let StorageType, setStorageType;\r\n        if(selected_StorageType.label == '' || selected_StorageType.label == null){\r\n\r\n            setStorageType =''\r\n        }else{\r\n\r\n            StorageType = selected_StorageType.label.split(\":\")\r\n            setStorageType = StorageType[0];\r\n            console.log(\"StorageType \", StorageType[0])\r\n        }\r\n\r\n        //Select Order Point\r\n        console.log(\"OrderPoint: \", OrderPoint)\r\n\r\n        //Select Cube\r\n        console.log(\"Cube: \", Cube)\r\n\r\n        //Select Maximum\r\n        console.log(\"Maximum: \", Maximum)\r\n\r\n        //Select ShelfLife\r\n        console.log(\"ShelfLife: \", ShelfLife)\r\n\r\n        //Select Last Activity Date\r\n        let date_of_LastActivity = ''\r\n        if (LastActivityDate == '' || LastActivityDate == null) {\r\n\r\n            date_of_LastActivity = '';\r\n        } else {\r\n\r\n            date_of_LastActivity = Moment(LastActivityDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"LAD \", date_of_LastActivity);\r\n        }\r\n\r\n        //Select Last Count Date\r\n        let date_of_LastCount = ''\r\n        if (LastCountDate == '' || LastCountDate == null) {\r\n\r\n            date_of_LastCount = '';\r\n        } else {\r\n\r\n            date_of_LastCount = Moment(LastCountDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"LCD \", date_of_LastCount);\r\n        }\r\n\r\n        //Select Next Count Date\r\n        let date_of_NextCount = ''\r\n        if (NextCountDate == '' || NextCountDate == null) {\r\n\r\n            date_of_NextCount = '';\r\n        } else {\r\n\r\n            date_of_NextCount = Moment(NextCountDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SD \", date_of_NextCount);\r\n        }\r\n\r\n        //Select Date 1\r\n        let date_1 = ''\r\n        if (UDFDate_1 == '' || UDFDate_1 == null) {\r\n\r\n            date_1 = '';\r\n        } else {\r\n\r\n            date_1 = Moment(UDFDate_1).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date1 \", date_1);\r\n        }\r\n\r\n        //Select Date 2\r\n        let date_2 = ''\r\n        if (UDFDate_2 == '' || UDFDate_2 == null) {\r\n\r\n            date_2 = '';\r\n        } else {\r\n\r\n            date_2 = Moment(UDFDate_2).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date2 \", date_2);\r\n        }\r\n\r\n        //Select Date 3\r\n        let date_3 = ''\r\n        if (UDFDate_3 == '' || UDFDate_3 == null) {\r\n\r\n            date_3 = '';\r\n        } else {\r\n\r\n            date_3 = Moment(UDFDate_3).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date3 \", date_3);\r\n        }\r\n\r\n        //Select Date 4\r\n        let date_4 = ''\r\n        if (UDFDate_4 == '' || UDFDate_4 == null) {\r\n\r\n            date_4 = '';\r\n        } else {\r\n\r\n            date_4 = Moment(UDFDate_4).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date4 \", date_4);\r\n        }\r\n\r\n        //Select Date 5\r\n        let date_5 = ''\r\n        if (UDFDate_5 == '' || UDFDate_5 == null) {\r\n\r\n            date_5 = '';\r\n        } else {\r\n\r\n            date_5 = Moment(UDFDate_5).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date5 \", date_5);\r\n        }\r\n\r\n        //Select Account Type\r\n        let setAccountType = '';\r\n         if(selected_AccountType.label == '' || selected_AccountType.label == null){\r\n            \r\n            setAccountType = ''\r\n        }else{\r\n\r\n            let AccountType = selected_AccountType.label.split(\":\")\r\n            setAccountType = AccountType[0];\r\n            console.log(\"AccountType: \", AccountType[0])\r\n        }\r\n\r\n        //Select Tax Code\r\n        let setTaxCode = '';\r\n         if(selected_TaxCode.label == '' || selected_TaxCode.label == null){\r\n            \r\n            setTaxCode = ''\r\n        }else{\r\n\r\n            let TaxCode = selected_TaxCode.label.split(\":\")\r\n            setTaxCode = TaxCode[0];\r\n            console.log(\"TaxCode: \", TaxCode[0])\r\n        }\r\n\r\n\r\n\r\n    var json_inventory ={\r\n\r\n\r\n        \"site_cd\": site_ID,\r\n\r\n        \"itm_mst_type\":setType.trim(),\r\n        \"itm_mst_com_code\":setCommodity_Code.trim(),\r\n        \"itm_mst_stockno\": StockNo.trim(),\r\n        \"itm_mst_itm_grp\":setStock_Group.trim(),\r\n        \"itm_mst_mstr_locn\":setMaster_Location.trim(),\r\n        \"itm_mst_partno\":Part_No.trim(),\r\n        \"itm_mst_order_rule\":setOrder_Rule.trim(),\r\n        \"itm_mst_costcenter\":setCost_Center.trim(),\r\n        \"itm_mst_account\":setAccount.trim(),\r\n        \"itm_mst_desc\":Description.trim(),\r\n        \"itm_mst_ext_desc\":ExtendedDescription.trim(),\r\n\r\n        \"itm_det_part_deac_status\":setPartDeacStatus.trim(),\r\n        \"itm_det_auto_spare\":CheckBox_AutoSpare,\r\n        \"itm_det_issue_uom\":setIssueUOM.trim(),\r\n        \"itm_det_critical_spare\":CheckBox_CriticalSpare,\r\n        \"itm_det_rcv_uom\":setReceiveUOM.trim(),\r\n        \"itm_det_hzd_mtl\":CheckBox_HazardousMaterial,\r\n        \"itm_det_abc_class\":ABCClass.trim(),\r\n        \"itm_det_storage_type\":setStorageType.trim(),\r\n        \"itm_det_order_pt\":OrderPoint.trim(),\r\n        \"itm_det_cube\":Cube.trim(),\r\n        \"itm_det_maximum\":Maximum.trim(),\r\n        \"itm_det_shelf_life\":ShelfLife.trim(),\r\n        \"itm_det_lastactdate\":date_of_LastActivity,\r\n        \"itm_det_lastcntdate\":date_of_NextCount,\r\n        \"itm_det_next_cnt_date\":date_of_LastCount,\r\n\r\n        \"itm_det_note1\":UDFNote1,\r\n        \"itm_det_varchar1\":UDFText_1,\r\n        \"itm_det_varchar2\":UDFText_2,\r\n        \"itm_det_varchar3\":UDFText_3,\r\n        \"itm_det_varchar4\":UDFText_4,\r\n        \"itm_det_varchar5\":UDFText_5,\r\n        \"itm_det_varchar6\":UDFText_6,\r\n        \"itm_det_varchar7\":UDFText_7,\r\n        \"itm_det_varchar8\":UDFText_8,\r\n        \"itm_det_varchar9\":UDFText_9,\r\n        \"itm_det_varchar10\":UDFText_10,\r\n\r\n        \"itm_det_numeric1\":UDFNumber_1.trim(),\r\n        \"itm_det_numeric2\":UDFNumber_2.trim(),\r\n        \"itm_det_numeric3\":UDFNumber_3.trim(),\r\n        \"itm_det_numeric4\":UDFNumber_4.trim(),\r\n        \"itm_det_numeric5\":UDFNumber_5.trim(),\r\n       \r\n        \"itm_det_datetime1\":date_1,\r\n        \"itm_det_datetime2\":date_2,\r\n        \"itm_det_datetime3\":date_3,\r\n        \"itm_det_datetime4\":date_4,\r\n        \"itm_det_datetime5\":date_5,\r\n\r\n        \"itm_det_acct_type\":setAccountType.trim(),\r\n        \"itm_det_tax_cd\":setTaxCode.trim(),\r\n        \"itm_det_cr_code\":Radio_CostingRule,\r\n        \"itm_det_std_cost\":Standard.trim(),\r\n        \"itm_det_avg_cost\":Average.trim(),\r\n        \"itm_det_last_cost\":Last.trim(),\r\n\r\n        \"itm_loc_prim_locn_flg\":CheckBox_PrimaryLocation,\r\n        \"itm_loc_stk_loc\":setMaster_Location.trim(),\r\n        \"itm_loc_inc_ttloh\":CheckBox_IncreaseTotalOH,\r\n        \"itm_loc_stock_cost_flag\":CheckBox_UpdateStockCosting,\r\n\r\n\r\n        \"asset_type_ID\":AutoNumring.trim(),\r\n\r\n        \"audit_user\":emp_mst_login_id.trim(),\r\n        \"itm_mst_create_by\":emp_mst_login_id.trim(),\r\n        \"ast_aud_originator\":emp_mst_empl_id.trim(),\r\n        \"itm_mst_create_date\":get_date,\r\n        \"cnt_mst_numbering\":AutoNumring,\r\n        \r\n    }\r\n\r\n    console.log(JSON.stringify(json_inventory))\r\n\r\n    APIServices.insert_new_inventory(JSON.stringify(json_inventory)).then((responseJson)=>{\r\n        if (responseJson.data.status === 'SUCCESS') { \r\n            \r\n            Swal.close();\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: responseJson.data.status,\r\n                text: responseJson.data.message,\r\n                \r\n              })\r\n\r\n        }else{\r\n            Swal.close();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n              })\r\n\r\n        }\r\n        \r\n    }).catch((e) => {\r\n        Swal.close();\r\n      \r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops get_Inventory_select...',\r\n          text: e,          \r\n        })\r\n      });\r\n\r\n    }\r\n\r\n\r\n    const Update_Inventory = () => {\r\n\r\n    //Swal.fire({  title: 'Loading.... !',allowOutsideClick: false})\r\n    //Swal.showLoading();\r\n\r\n\r\n    let get_date = moment().utcOffset('+08:00').format('yyyy-MM-DD HH:mm:ss');\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n    \r\n    let RowID = localStorage.getItem(\"RowID\");\r\n    console.log('get RowID here...',location.state.RowID);\r\n\r\n\r\n\r\n        //Select Type\r\n        let setType = '';\r\n         if(selected_Type.label == '' || selected_Type.label == null){\r\n            \r\n            setType = ''\r\n        }else{\r\n\r\n            let Type = selected_Type.label.split(\":\")\r\n            setType = Type[0];\r\n            console.log(\"Type: \", Type[0])\r\n        }\r\n\r\n        //Select Commodity Code\r\n        let Commodity_Code, setCommodity_Code;\r\n        if(selected_Commodity_Code == '' || selected_Commodity_Code == null){\r\n\r\n            setCommodity_Code =''\r\n        }else{\r\n\r\n            Commodity_Code = selected_Commodity_Code.label.split(\":\")\r\n            setCommodity_Code = Commodity_Code[0];\r\n            console.log(\"Commodity_Code \", Commodity_Code[0])\r\n        }\r\n\r\n        //Select StockNo\r\n        console.log(\"StockNo: \", StockNo)\r\n\r\n        //Select Stock Group\r\n        let Stock_Group, setStock_Group;\r\n        if(selected_Stock_Group == '' || selected_Stock_Group == null){\r\n\r\n            setStock_Group =''\r\n        }else{\r\n\r\n            Stock_Group = selected_Stock_Group.label.split(\":\")\r\n            setStock_Group = Stock_Group[0];\r\n            console.log(\"Stock_Group \", Stock_Group[0])\r\n        }\r\n\r\n        //Select Master Location\r\n        let Master_Location, setMaster_Location;\r\n        if(selected_Master_Location == '' || selected_Master_Location == null){\r\n\r\n            setMaster_Location =''\r\n        }else{\r\n\r\n            Master_Location = selected_Master_Location.label.split(\":\")\r\n            setMaster_Location = Master_Location[0];\r\n            console.log(\"Master_Location \", Master_Location[0])\r\n        }\r\n\r\n        //Select Part No\r\n        console.log(\"Part_No: \", Part_No)\r\n\r\n        //Select Order Rule\r\n        let Order_Rule, setOrder_Rule;\r\n        if(selected_Order_Rule == '' || selected_Order_Rule == null){\r\n\r\n            setOrder_Rule =''\r\n        }else{\r\n\r\n            Order_Rule = selected_Order_Rule.label.split(\":\")\r\n            setOrder_Rule = Order_Rule[0];\r\n            console.log(\"Order_Rule \", Order_Rule[0])\r\n        }\r\n\r\n        //Select Cost Center\r\n        let Cost_Center, setCost_Center;\r\n        if(selected_Cost_Center == '' || selected_Cost_Center == null){\r\n\r\n            setCost_Center =''\r\n        }else{\r\n\r\n            Cost_Center = selected_Cost_Center.label.split(\":\")\r\n            setCost_Center = Cost_Center[0];\r\n            console.log(\"Cost_Center \", Cost_Center[0])\r\n        }\r\n\r\n        //Select Account\r\n        let Account, setAccount;\r\n        if(selected_Account == '' || selected_Account == null){\r\n\r\n            setAccount =''\r\n        }else{\r\n\r\n            Account = selected_Account.label.split(\":\")\r\n            setAccount = Account[0];\r\n            console.log(\"Account \", Account[0])\r\n        }\r\n\r\n        //Select Description\r\n        console.log(\"Description: \", Description)\r\n\r\n        //Select ExtendedDescription\r\n        console.log(\"ExtendedDescription: \", ExtendedDescription)\r\n\r\n        //Select Part Deac Status\r\n        let PartDeacStatus, setPartDeacStatus;\r\n        if(selected_PartDeacStatus == '' || selected_PartDeacStatus == null){\r\n\r\n            setPartDeacStatus =''\r\n        }else{\r\n\r\n            PartDeacStatus = selected_PartDeacStatus.label.split(\":\")\r\n            setPartDeacStatus = PartDeacStatus[0];\r\n            console.log(\"PartDeacStatus \", PartDeacStatus[0])\r\n        }\r\n\r\n        //Select Issue UOM\r\n        let IssueUOM, setIssueUOM;\r\n        if(selected_IssueUOM == '' || selected_IssueUOM == null){\r\n\r\n            setIssueUOM =''\r\n        }else{\r\n\r\n            IssueUOM = selected_IssueUOM.label.split(\":\")\r\n            setIssueUOM = IssueUOM[0];\r\n            console.log(\"IssueUOM \", IssueUOM[0])\r\n        }\r\n\r\n        //Select Receive UOM\r\n        let ReceiveUOM, setReceiveUOM;\r\n        if(selected_ReceiveUOM == '' || selected_ReceiveUOM == null){\r\n\r\n            setReceiveUOM =''\r\n        }else{\r\n\r\n            ReceiveUOM = selected_ReceiveUOM.label.split(\":\")\r\n            setReceiveUOM = ReceiveUOM[0];\r\n            console.log(\"ReceiveUOM \", ReceiveUOM[0])\r\n        }\r\n\r\n        //Select ABC Class\r\n        console.log(\"ABCClass: \", ABCClass)\r\n\r\n        //Select Storage Type\r\n        let StorageType, setStorageType;\r\n        if(selected_StorageType.label == '' || selected_StorageType.label == null){\r\n\r\n            setStorageType =''\r\n        }else{\r\n\r\n            StorageType = selected_StorageType.label.split(\":\")\r\n            setStorageType = StorageType[0];\r\n            console.log(\"StorageType \", StorageType[0])\r\n        }\r\n\r\n        //Select Order Point\r\n        console.log(\"OrderPoint: \", OrderPoint)\r\n\r\n        //Select Cube\r\n        console.log(\"Cube: \", Cube)\r\n\r\n        //Select Maximum\r\n        console.log(\"Maximum: \", Maximum)\r\n\r\n        //Select ShelfLife\r\n        console.log(\"ShelfLife: \", ShelfLife)\r\n\r\n        //Select Last Activity Date\r\n        let date_of_LastActivity = ''\r\n        if (LastActivityDate == '' || LastActivityDate == null) {\r\n\r\n            date_of_LastActivity = '';\r\n        } else {\r\n\r\n            date_of_LastActivity = Moment(LastActivityDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"LAD \", date_of_LastActivity);\r\n        }\r\n\r\n        //Select Last Count Date\r\n        let date_of_LastCount = ''\r\n        if (LastCountDate == '' || LastCountDate == null) {\r\n\r\n            date_of_LastCount = '';\r\n        } else {\r\n\r\n            date_of_LastCount = Moment(LastCountDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"LCD \", date_of_LastCount);\r\n        }\r\n\r\n        //Select Next Count Date\r\n        let date_of_NextCount = ''\r\n        if (NextCountDate == '' || NextCountDate == null) {\r\n\r\n            date_of_NextCount = '';\r\n        } else {\r\n\r\n            date_of_NextCount = Moment(NextCountDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SD \", date_of_NextCount);\r\n        }\r\n\r\n        //Select Date 1\r\n        let date_1 = ''\r\n        if (UDFDate_1 == '' || UDFDate_1 == null) {\r\n\r\n            date_1 = '';\r\n        } else {\r\n\r\n            date_1 = Moment(UDFDate_1).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date1 \", date_1);\r\n        }\r\n\r\n        //Select Date 2\r\n        let date_2 = ''\r\n        if (UDFDate_2 == '' || UDFDate_2 == null) {\r\n\r\n            date_2 = '';\r\n        } else {\r\n\r\n            date_2 = Moment(UDFDate_2).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date2 \", date_2);\r\n        }\r\n\r\n        //Select Date 3\r\n        let date_3 = ''\r\n        if (UDFDate_3 == '' || UDFDate_3 == null) {\r\n\r\n            date_3 = '';\r\n        } else {\r\n\r\n            date_3 = Moment(UDFDate_3).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date3 \", date_3);\r\n        }\r\n\r\n        //Select Date 4\r\n        let date_4 = ''\r\n        if (UDFDate_4 == '' || UDFDate_4 == null) {\r\n\r\n            date_4 = '';\r\n        } else {\r\n\r\n            date_4 = Moment(UDFDate_4).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date4 \", date_4);\r\n        }\r\n\r\n        //Select Date 5\r\n        let date_5 = ''\r\n        if (UDFDate_5 == '' || UDFDate_5 == null) {\r\n\r\n            date_5 = '';\r\n        } else {\r\n\r\n            date_5 = Moment(UDFDate_5).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date5 \", date_5);\r\n        }\r\n\r\n        //Select Account Type\r\n        let setAccountType = '';\r\n         if(selected_AccountType.label == '' || selected_AccountType.label == null){\r\n            \r\n            setAccountType = ''\r\n        }else{\r\n\r\n            let AccountType = selected_AccountType.label.split(\":\")\r\n            setAccountType = AccountType[0];\r\n            console.log(\"AccountType: \", AccountType[0])\r\n        }\r\n\r\n        //Select Tax Code\r\n        let setTaxCode = '';\r\n         if(selected_TaxCode.label == '' || selected_TaxCode.label == null){\r\n            \r\n            setTaxCode = ''\r\n        }else{\r\n\r\n            let TaxCode = selected_TaxCode.label.split(\":\")\r\n            setTaxCode = TaxCode[0];\r\n            console.log(\"TaxCode: \", TaxCode[0])\r\n        }\r\n\r\n\r\n\r\n    var json_inventory ={\r\n\r\n\r\n        \"site_cd\": site_ID,\r\n\r\n        \"itm_mst_type\":setType.trim(),\r\n        \"itm_mst_com_code\":setCommodity_Code.trim(),\r\n        \"itm_mst_stockno\": StockNo.trim(),\r\n        \"itm_mst_itm_grp\":setStock_Group.trim(),\r\n        \"itm_mst_mstr_locn\":setMaster_Location.trim(),\r\n        \"itm_mst_partno\":Part_No,\r\n        \"itm_mst_order_rule\":setOrder_Rule.trim(),\r\n        \"itm_mst_costcenter\":setCost_Center.trim(),\r\n        \"itm_mst_account\":setAccount.trim(),\r\n        \"itm_mst_desc\":Description.trim(),\r\n        \"itm_mst_ext_desc\":ExtendedDescription,\r\n\r\n        \"itm_det_part_deac_status\":setPartDeacStatus.trim(),\r\n        \"itm_det_auto_spare\":CheckBox_AutoSpare,\r\n        \"itm_det_issue_uom\":setIssueUOM.trim(),\r\n        \"itm_det_critical_spare\":CheckBox_CriticalSpare,\r\n        \"itm_det_rcv_uom\":setReceiveUOM.trim(),\r\n        \"itm_det_hzd_mtl\":CheckBox_HazardousMaterial,\r\n        \"itm_det_abc_class\":ABCClass,\r\n        \"itm_det_storage_type\":setStorageType.trim(),\r\n        \"itm_det_order_pt\":OrderPoint.trim(),\r\n        \"itm_det_cube\":Cube,\r\n        \"itm_det_maximum\":Maximum.trim(),\r\n        \"itm_det_shelf_life\":ShelfLife,\r\n        \"itm_det_lastactdate\":date_of_LastActivity,\r\n        \"itm_det_lastcntdate\":date_of_NextCount,\r\n        \"itm_det_next_cnt_date\":date_of_LastCount,\r\n\r\n        \"itm_det_note1\":UDFNote1,\r\n        \"itm_det_varchar1\":UDFText_1,\r\n        \"itm_det_varchar2\":UDFText_2,\r\n        \"itm_det_varchar3\":UDFText_3,\r\n        \"itm_det_varchar4\":UDFText_4,\r\n        \"itm_det_varchar5\":UDFText_5,\r\n        \"itm_det_varchar6\":UDFText_6,\r\n        \"itm_det_varchar7\":UDFText_7,\r\n        \"itm_det_varchar8\":UDFText_8,\r\n        \"itm_det_varchar9\":UDFText_9,\r\n        \"itm_det_varchar10\":UDFText_10,\r\n\r\n        \"itm_det_numeric1\":UDFNumber_1,\r\n        \"itm_det_numeric2\":UDFNumber_2,\r\n        \"itm_det_numeric3\":UDFNumber_3,\r\n        \"itm_det_numeric4\":UDFNumber_4,\r\n        \"itm_det_numeric5\":UDFNumber_5,\r\n       \r\n        \"itm_det_datetime1\":date_1,\r\n        \"itm_det_datetime2\":date_2,\r\n        \"itm_det_datetime3\":date_3,\r\n        \"itm_det_datetime4\":date_4,\r\n        \"itm_det_datetime5\":date_5,\r\n\r\n        \"itm_det_acct_type\":setAccountType.trim(),\r\n        \"itm_det_tax_cd\":setTaxCode.trim(),\r\n        \"itm_det_cr_code\":Radio_CostingRule,\r\n        \"itm_det_std_cost\":Standard.trim(),\r\n        \"itm_det_avg_cost\":Average.trim(),\r\n        \"itm_det_last_cost\":Last.trim(),\r\n\r\n        \"itm_loc_prim_locn_flg\":CheckBox_PrimaryLocation,\r\n        \"itm_loc_stk_loc\":setMaster_Location.trim(),\r\n        \"itm_loc_inc_ttloh\":CheckBox_IncreaseTotalOH,\r\n        \"itm_loc_stock_cost_flag\":CheckBox_UpdateStockCosting,\r\n\r\n\r\n        \"asset_type_ID\":AutoNumring.trim(),\r\n\r\n        \"audit_user\":emp_mst_login_id.trim(),\r\n        \"itm_mst_create_by\":emp_mst_login_id.trim(),\r\n        \"ast_aud_originator\":emp_mst_empl_id.trim(),\r\n        \"itm_mst_create_date\":get_date,\r\n        \r\n        \"RowID\":location.state.RowID,\r\n\r\n    }\r\n\r\n    console.log(\"Update : \"+JSON.stringify(json_inventory))\r\n\r\n    APIServices.update_inventory(JSON.stringify(json_inventory)).then((responseJson)=>{\r\n        if (responseJson.data.status === 'SUCCESS') { \r\n            Swal.close();\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: responseJson.data.status,\r\n                text: responseJson.data.message,\r\n                \r\n              })\r\n\r\n        }else{\r\n            Swal.close();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n              })\r\n\r\n        }\r\n    }).catch((e) => {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops get_Inventory_select...',\r\n          text: e,          \r\n        })\r\n      });\r\n\r\n\r\n    }\r\n\r\n  \r\n    const resetData = () => {\r\n\r\n        setSelected_Type(0);\r\n        setSelected_Commodity_Code(0);\r\n        setSelected_Stock_Group(0);\r\n        setSelected_Master_Location(0);\r\n        setPart_No('');\r\n        setSelected_Order_Rule(0);\r\n        setSelected_Cost_Center(0);\r\n        setSelected_Account(0);\r\n        setDescription('');\r\n        setExtendedDescription('');\r\n        setSelected_PartDeacStatus(0);\r\n        setAutoSpare('');\r\n        setSelected_IssueUOM(0);\r\n        setCriticalSpare('');\r\n        setSelected_ReceiveUOM(0);\r\n        setHazardousMaterial('');\r\n        setABCClass('');\r\n        setSelected_StorageType(0);\r\n        setOrderPoint('');\r\n        setCube('');\r\n        setMaximum('');\r\n        setShelfLife('');\r\n        setLastActivityDate('');\r\n        setLastCountDate('');\r\n        setNextCountDate('');\r\n\r\n        setUDFNote1('');\r\n        setUDFText_1('');\r\n        setUDFText_2('');\r\n        setUDFText_3('');\r\n        setUDFText_4('');\r\n        setUDFText_5('');\r\n        setUDFText_6('');\r\n        setUDFText_7('');\r\n        setUDFText_8('');\r\n        setUDFText_9('');\r\n        setUDFText_10('');\r\n        setUDFNumber_1('');\r\n        setUDFNumber_2('');\r\n        setUDFNumber_3('');\r\n        setUDFNumber_4('');\r\n        setUDFNumber_5('');\r\n        setUDFDate_1('');\r\n        setUDFDate_2('');\r\n        setUDFDate_3('');\r\n        setUDFDate_4('');\r\n        setUDFDate_5('');\r\n\r\n        setSelected_AccountType(0);\r\n        setSelected_TaxCode(0);\r\n\r\n        setPrimaryLocation('');\r\n\r\n        setIncreaseTotalOH('');\r\n        setUpdateStockCosting('');\r\n\r\n        setButton_save('Save');\r\n    }\r\n\r\n\r\n    const handleOnChangeAutoSpare = () => {\r\n    setAutoSpare(!AutoSpare);\r\n    \r\n    if(!AutoSpare){\r\n        console.log('1')\r\n        setCheckBox_AutoSpare('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_AutoSpare('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeCriticalSpare = () => {\r\n    setCriticalSpare(!CriticalSpare);\r\n\r\n    if(!CriticalSpare){\r\n        console.log('1')\r\n        setCheckBox_CriticalSpare('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_CriticalSpare('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeHazardousMaterial = () => {\r\n    setHazardousMaterial(!HazardousMaterial);\r\n\r\n    if(!HazardousMaterial){\r\n        console.log('1')\r\n        setCheckBox_HazardousMaterial('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_HazardousMaterial('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangePrimaryLocation = () => {\r\n    setPrimaryLocation(!PrimaryLocation);\r\n    \r\n    if(!PrimaryLocation){\r\n        console.log('1')\r\n        setCheckBox_PrimaryLocation('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_PrimaryLocation('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeIncreaseTotalOH = () => {\r\n    setIncreaseTotalOH(!IncreaseTotalOH);\r\n    \r\n    if(!IncreaseTotalOH){\r\n        console.log('1')\r\n        setCheckBox_IncreaseTotalOH('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_IncreaseTotalOH('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeUpdateStockCosting = () => {\r\n    setUpdateStockCosting(!UpdateStockCosting);\r\n    \r\n    if(!UpdateStockCosting){\r\n        console.log('1')\r\n        setCheckBox_UpdateStockCosting('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_UpdateStockCosting('0')\r\n    }\r\n    }\r\n\r\n\r\n    const handleRadioChange = (e) => {\r\n    setRadio(e.target.value);\r\n    console.log('1')\r\n\r\n    if(e.target.value === 'Average') {\r\n        setCostingRule(true);\r\n        setRadio_CostingRule('Average');\r\n\r\n        } else if (e.target.value === 'Standard') {\r\n        setCostingRule(false);\r\n        setRadio_CostingRule('Standard');\r\n\r\n        } else if (e.target.value === 'Last') {\r\n        setCostingRule(false);\r\n        setRadio_CostingRule('Last');\r\n\r\n        } else if (e.target.value === 'FIFO') {\r\n        setCostingRule(false);\r\n        setRadio_CostingRule('FIFO');\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n    const handleAverageChange = (e) => {\r\n\r\n        console.log(e.target.value)\r\n    setAverage(e.target.value);\r\n    }\r\n\r\n    const handleStandardChange = (e) => {\r\n    setStandard(e.target.value);\r\n    }\r\n\r\n    const handleLastChange = (e) => {\r\n    setLast(e.target.value);\r\n    }\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n      \r\n      \r\n  return (   \r\n\r\n        <div>\r\n            <div className=\"page-header\">\r\n            <h3 className=\"page-title\">Inventory Master</h3>   \r\n\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <div className=\"template-demo\">\r\n\r\n                        <button type=\"button\" className=\"btn btn-success btn-icon-text\" onClick={onClickChange}>\r\n                            <i className=\"mdi mdi-file-check btn-icon-prepend\" ></i>  {Button_save}\r\n                        </button>\r\n\r\n                        <button type=\"button\" className=\"btn btn-danger btn-icon-text\">\r\n                            <i className=\"mdi mdi-close-circle-outline btn-icon-prepend\"></i> Cancel \r\n                        </button>\r\n                    \r\n                    </div>\r\n                </ol>\r\n            </nav>       \r\n        \r\n        </div> \r\n\r\n    <div className=\"col-12 grid-margin\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\"> \r\n                <form className=\"form-sample\" validated={validated}>  \r\n\r\n\r\n                    {/******************** Inventory Location ********************/}\r\n                    <div>\r\n                        <Modal show={show} onHide={handleClose} centered >\r\n\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Location</Modal.Title>\r\n                            </Modal.Header>\r\n\r\n                            <Modal.Body>\r\n                                <div className=\"col-md-12\">\r\n                                    <Form.Group className=\"row\" controlId=\"validation_PrimaryLocation\">\r\n                                        <label className=\"col-sm-5 col-form-label\">Primary Location:</label>\r\n                                        <div className=\"col-sm-6 form-check\">\r\n                                        <label className=\"form-check-label\">\r\n                                            <input type=\"checkbox\" \r\n                                            className=\"form-check-input\"\r\n                                            checked={PrimaryLocation}\r\n                                            onChange={handleOnChangePrimaryLocation}\r\n                                            />\r\n                                            <i className=\"input-helper\"></i>\r\n                                        </label>\r\n                                        </div>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"row\" controlId=\"validation_StockLocation\">\r\n                                        <label className=\"col-sm-5 col-form-label\">Stock Location:</label>\r\n                                        <div className=\"col-sm-6 form-check\">\r\n                                            <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Master_Location}\r\n                                                    value={selected_Master_Location}\r\n                                                    onChange={setSelected_Master_Location} // using id as it is unique\r\n                                                    required\r\n                                                />\r\n                                        </div>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"row\" controlId=\"validation_IncreaseTotalOH\">\r\n                                        <label className=\"col-sm-5 col-form-label\">Increase Total OH:</label>\r\n                                        <div className=\"col-sm-6 form-check\">\r\n                                        <label className=\"form-check-label\">\r\n                                            <input type=\"checkbox\" \r\n                                            className=\"form-check-input\"\r\n                                            checked={IncreaseTotalOH}\r\n                                            onChange={handleOnChangeIncreaseTotalOH}\r\n                                            />\r\n                                            <i className=\"input-helper\"></i>\r\n                                        </label>\r\n                                        </div>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"row\" controlId=\"validation_UpdateStockCosting\">\r\n                                        <label className=\"col-sm-5 col-form-label\">Update Stock Costing:</label>\r\n                                        <div className=\"col-sm-6 form-check\">\r\n                                        <label className=\"form-check-label\">\r\n                                            <input type=\"checkbox\" \r\n                                            className=\"form-check-input\"\r\n                                            checked={UpdateStockCosting}\r\n                                            onChange={handleOnChangeUpdateStockCosting}\r\n                                            />\r\n                                            <i className=\"input-helper\"></i>\r\n                                        </label>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                    \r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n\r\n                                <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                                <Button variant=\"primary\" onClick={() => {\r\n                                    // Close modal\r\n                                    handleClose();\r\n                                }}>\r\n                                Submit\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n                    </div> \r\n\r\n\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-10\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Type\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Type:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Select  \r\n                                        isClearable={true}  \r\n                                        value={selected_Type}\r\n                                        onChange={setSelected_Type}\r\n                                        options={Type}\r\n                                        styles={{ \r\n                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                          }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_Commodity_Code\">\r\n                                    <Form.Label className=\"col-sm-4 col-form-label\">Commodity Code:</Form.Label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Commodity_Code}\r\n                                            value={selected_Commodity_Code}\r\n                                            onChange={setSelected_Commodity_Code} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_StockNo\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Stock No:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control style={{ fontSize: \"13px\" }} type=\"text\" value={StockNo} onChange={(e) => setStockNo(e.target.value)}  disabled={StockNo_disabled}/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                            \r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_Stock_Group\">\r\n                                    <Form.Label className=\"col-sm-4 col-form-label\">Stock Group:</Form.Label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Stock_Group}\r\n                                            value={selected_Stock_Group}\r\n                                            onChange={setSelected_Stock_Group} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Master_Location\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Master Location:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Select  \r\n                                        isClearable={true}  \r\n                                        options={Master_Location}\r\n                                        value={selected_Master_Location}\r\n                                        onChange={setSelected_Master_Location} // using id as it is unique\r\n                                        required\r\n                                        styles={{ \r\n                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_Part_No\">\r\n                                    <Form.Label className=\"col-sm-4 col-form-label\">Part No:</Form.Label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"text\" value={Part_No} onChange={(e) => setPart_No(e.target.value)}/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Order_Rule\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Order Rule:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Select  \r\n                                        isClearable={true}  \r\n                                        options={Order_Rule}\r\n                                        value={selected_Order_Rule}\r\n                                        onChange={setSelected_Order_Rule} // using id as it is unique\r\n                                        required\r\n                                        styles={{ \r\n                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_TotalOH\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Total OH:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={TotalOH} onChange={(e) => setTotalOH(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Cost_Center\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Cost Center:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Select  \r\n                                        isClearable={true}  \r\n                                        options={Cost_Center}\r\n                                        value={selected_Cost_Center}\r\n                                        onChange={setSelected_Cost_Center} // using id as it is unique\r\n                                        required\r\n                                        styles={{ \r\n                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                            }}\r\n                                        />\r\n                                        </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_IssuePrice\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Issue Price:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.00\" value={IssuePrice} onChange={(e) => setIssuePrice(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Account\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Account:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Select  \r\n                                        isClearable={true}  \r\n                                        options={Account}\r\n                                        value={selected_Account}\r\n                                        onChange={setSelected_Account} // using id as it is unique\r\n                                        required\r\n                                        styles={{ \r\n                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                            }}\r\n                                    />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_SerializeCounter\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Serialize Counter:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"100001\" value={SerializeCounter} onChange={(e) => setSerializeCounter(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                                    <label className=\"col-sm-2 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Description:</label>\r\n                                    <div className=\"col-sm-10\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        as=\"textarea\" \r\n                                        rows={12} \r\n                                        value={Description}\r\n                                        onChange={(e) => {\r\n                                            setDescription(e.target.value);\r\n                                          }}\r\n                                    />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div> \r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_ExtendedDescription\">\r\n                                    <label className=\"col-sm-2 col-form-label\">Extended Description:</label>\r\n                                    <div className=\"col-sm-10\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        as=\"textarea\" \r\n                                        rows={12} \r\n                                        value={ExtendedDescription}\r\n                                        onChange={(e) => {\r\n                                            setExtendedDescription(e.target.value);\r\n                                          }}\r\n                                    />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div> \r\n\r\n                    </div>\r\n\r\n                {/* ************************************* img ******************************************* */}\r\n\r\n                    <div className=\"col-md-2\">\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <AliceCarousel \r\n                                autoPlay \r\n                                autoPlayInterval=\"3000\"  \r\n                                animationDuration={1000}\r\n                                animationType=\"fadeout\"\r\n                                infinite\r\n                                touchTracking={false}\r\n                                disableDotsControls\r\n                                >\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image1.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image2.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image3.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image4.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image5.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image6.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image7.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image8.jpg\")} className=\"sliderimg\" alt=\"\"/>                                    \r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image9.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image10.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image11.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image12.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                \r\n                                </AliceCarousel>\r\n                                \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                </div>  \r\n\r\n                <section id=\"tab-menus\">\r\n\r\n                    <Tabs defaultActiveKey=\"Details\" id=\"uncontrolled-tab-example\" className=\"mb-4\">\r\n\r\n\r\n                        {/* ************************************* Details **************************************** */}\r\n\r\n                        <Tab eventKey=\"Details\" title=\"Details\" class=\"nav-link active\">\r\n                            \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_PartDeacStatus\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Part Deac Status:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={PartDeacStatus}\r\n                                                    value={selected_PartDeacStatus}\r\n                                                    onChange={setSelected_PartDeacStatus} // using id as it is unique\r\n                                                    required styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_AutoSpare\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Auto Spare:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" \r\n                                                    className=\"form-check-input\"\r\n                                                    checked={AutoSpare}\r\n                                                    onChange={handleOnChangeAutoSpare}\r\n                                                    />\r\n                                                    <i className=\"input-helper\"></i>\r\n                                                </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_IssueUOM\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Issue UOM:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={IssueUOM}\r\n                                                    value={selected_IssueUOM}\r\n                                                    onChange={setSelected_IssueUOM} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_CriticalSpare\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Critical Spare:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" \r\n                                                    className=\"form-check-input\"\r\n                                                    checked={CriticalSpare}\r\n                                                    onChange={handleOnChangeCriticalSpare}\r\n                                                    />\r\n                                                    <i className=\"input-helper\"></i>\r\n                                                </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_ReceiveUOM\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Receive UOM:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={ReceiveUOM}\r\n                                                    value={selected_ReceiveUOM}\r\n                                                    onChange={setSelected_ReceiveUOM} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_HazardousMaterial\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Hazardous Material:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" \r\n                                                    className=\"form-check-input\"\r\n                                                    checked={HazardousMaterial}\r\n                                                    onChange={handleOnChangeHazardousMaterial}\r\n                                                    />\r\n                                                    <i className=\"input-helper\"></i>\r\n                                                </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_ConversionFactor\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Conversion Factor:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder='1.0000' value={ConversionFactor} onChange={(e) => setConversionFactor(e.target.value)} readOnly/>\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_ABCClass\">\r\n                                                <label className=\"col-sm-4 col-form-label\">ABC Class:</label>\r\n                                                <div className=\"col-sm-4\">\r\n                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"text\" value={ABCClass} onChange={(e) => setABCClass(e.target.value)}/>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_StorageType\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Storage Type:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={StorageType}\r\n                                                    value={selected_StorageType}\r\n                                                    onChange={setSelected_StorageType} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_OrderPoint\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Order Point:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}\r\n                                                    type=\"number\"  \r\n                                                    placeholder=\".0000\" \r\n                                                    value={OrderPoint} \r\n                                                    onChange={(e) => setOrderPoint(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_Cube\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Cube:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}\r\n                                                    type=\"number\"  \r\n                                                    placeholder=\".0000\" \r\n                                                    value={Cube} \r\n                                                    onChange={(e) => setCube(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_Maximum\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Maximum:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}\r\n                                                    type=\"number\"  \r\n                                                    placeholder=\".0000\" \r\n                                                    value={Maximum} \r\n                                                    onChange={(e) => setMaximum(e.target.value)}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_ShelfLife\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Shelf Life:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}\r\n                                                    type=\"number\"  \r\n                                                    value={ShelfLife} \r\n                                                    onChange={(e) => setShelfLife(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_LastActivityDate\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Last Activity Date:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control   \r\n                                                    style={{ fontSize: \"13px\" }}                                         \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={LastActivityDate} \r\n                                                    onChange={(e) => setLastActivityDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_EOQ\">\r\n                                                <label className=\"col-sm-4 col-form-label\">EOQ:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder='0' value={EOQ} onChange={(e) => setEOQ(e.target.value)} readOnly/>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_LastCountDate\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Last Count Date:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}                                          \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={LastCountDate} \r\n                                                    onChange={(e) => setLastCountDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_CountFrequency\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Count Frequency:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_NextCountDate\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Next Count Date:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}                                          \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={NextCountDate} \r\n                                                    onChange={(e) => setNextCountDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_AverageLeadTime\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Average Lead Time:</label>\r\n                                                <div className=\"col-sm-7\">\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n                                    </div> \r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* UDF ******************************************* */}\r\n\r\n                        <Tab eventKey=\"UDF\" title=\"UDF\" class=\"nav-link active\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className='col'>\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            UDF Text1:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                style={{ fontSize: \"13px\" }}\r\n                                                type=\"text\"\r\n                                                value={UDFText_1}\r\n                                                onChange={(e) => setUDFText_1(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            UDF Text2:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_2}\r\n                                                onChange={(e) => setUDFText_2(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            UDF Text3:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_3}\r\n                                                onChange={(e) => setUDFText_3(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            UDF Text4:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_4}\r\n                                                onChange={(e) => setUDFText_4(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            UDF Text5:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_5}\r\n                                                onChange={(e) => setUDFText_5(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-8\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-2 col-form-label\">\r\n                                        UDF Note1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-10\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }} \r\n                                            as=\"textarea\" \r\n                                            rows={28} \r\n                                            value={UDFNote1}\r\n                                            onChange={(e) => setUDFNote1(e.target.value)}\r\n                                        />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Text6:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_6}\r\n                                            onChange={(e) => setUDFText_6(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Numeric1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control  \r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"number\"  \r\n                                            placeholder=\".0000\" \r\n                                            value={UDFNumber_1} \r\n                                            onChange={(e) => setUDFNumber_1(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Date1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control   \r\n                                        style={{ fontSize: \"13px\" }}                                         \r\n                                        type=\"datetime-local\"  \r\n                                        value={UDFDate_1} \r\n                                        onChange={(e) => setUDFDate_1(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Text7:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_7}\r\n                                            onChange={(e) => setUDFText_7(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Numeric2:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control  \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_2} \r\n                                        onChange={(e) => setUDFNumber_2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Date2:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_2} \r\n                                            onChange={(e) => setUDFDate_2(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Text8:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_8}\r\n                                            onChange={(e) => setUDFText_8(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Numeric3:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control\r\n                                        style={{ fontSize: \"13px\" }}  \r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_3} \r\n                                        onChange={(e) => setUDFNumber_3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Date3:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_3} \r\n                                            onChange={(e) => setUDFDate_3(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Text9:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_9}\r\n                                            onChange={(e) => setUDFText_9(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Numeric4:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }} \r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_4} \r\n                                        onChange={(e) => setUDFNumber_4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Date4:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_4} \r\n                                            onChange={(e) => setUDFDate_4(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Text10:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_10}\r\n                                            onChange={(e) => setUDFText_10(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Numeric5:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control  \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_5} \r\n                                        onChange={(e) => setUDFNumber_5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        UDF Date5:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_5} \r\n                                            onChange={(e) => setUDFDate_5(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Financial *************************************** */}\r\n\r\n                        <Tab eventKey=\"Financial\" title=\"Financial\" class=\"nav nav-tabs nav-item nav-link active\">\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Account Type:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                value={selected_AccountType}\r\n                                                onChange={setSelected_AccountType}\r\n                                                options={AccountType}\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Tax Code:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={TaxCode}\r\n                                                value={selected_TaxCode}\r\n                                                onChange={setSelected_TaxCode} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        YTD Usage:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={YTDUsage} onChange={(e) => setYTDUsage(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Last Year Usage:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={LastYearUsage} onChange={(e) => setLastYearUsage(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        YTD Turns:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={YTDTurns} onChange={(e) => setYTDTurns(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Last Year Turns:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={LastYearTurns} onChange={(e) => setLastYearTurns(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        YTD Stockouts:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={YTDStockouts} onChange={(e) => setYTDStockouts(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Last Year Stockouts:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={LastYearStockouts} onChange={(e) => setLastYearStockouts(e.target.value)} readOnly/>\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"row col-form-label\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_Type\">\r\n                                            <th className=\"col-sm-8\">Costing Rule</th>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-5\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_Type\">\r\n                                            <th className=\"col-sm-4\">Item Cost (A)</th>\r\n                                            <th className=\"col-sm-4\">Total On-Hand (B)</th>\r\n                                            <th className=\"col-sm-4\">Total Repair Location (C)</th>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-5\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_Type\">\r\n                                            <th className=\"col-sm-4\">Value A * (B-C)</th>\r\n                                            <th className=\"col-sm-4\">Surcharge</th>\r\n                                            <th className=\"col-sm-4\">Surcharge Value</th>\r\n                                            </Form.Group>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mt-0\"></hr>\r\n\r\n                            <div className=\"status-container\">\r\n                                <div className=\"status-box\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <fieldset className=\"p-3 w-100\">\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-md-2\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Average\">\r\n                                                            <div className=\"col-sm-2 form-check\">\r\n                                                                <label className=\"form-check-label\">\r\n                                                                    <input type=\"radio\" \r\n                                                                        name='Average'\r\n                                                                        value='Average'\r\n                                                                        checked={radio === 'Average'}\r\n                                                                        onChange={handleRadioChange}\r\n                                                                    />\r\n                                                                    <i className=\"input-helper\"></i>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <label className=\"col-sm-7 col-form-label\">Average</label>\r\n                                                        </Form.Group>\r\n                                                    </div> \r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Average1\">\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={Average} onChange={handleAverageChange} />\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Average2\">\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Average' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-md-2\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Standard\">\r\n                                                            <div className=\"col-sm-2 form-check\">\r\n                                                                <label className=\"form-check-label\">\r\n                                                                    <input type=\"radio\" \r\n                                                                        name='Standard'\r\n                                                                        value='Standard'\r\n                                                                        checked={radio === 'Standard'}\r\n                                                                        onChange={handleRadioChange}\r\n                                                                    />\r\n                                                                    <i className=\"input-helper\"></i>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <label className=\"col-sm-7 col-form-label\">Standard</label>\r\n                                                        </Form.Group>\r\n                                                    </div> \r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Standard1\">\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={Standard} onChange={handleStandardChange} />\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Standard2\">\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Standard' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-md-2\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Last\">\r\n                                                            <div className=\"col-sm-2 form-check\">\r\n                                                                <label className=\"form-check-label\">\r\n                                                                    <input type=\"radio\" \r\n                                                                        name='Last'\r\n                                                                        value='Last'\r\n                                                                        checked={radio === 'Last'}\r\n                                                                        onChange={handleRadioChange}\r\n                                                                    />\r\n                                                                    <i className=\"input-helper\"></i>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <label className=\"col-sm-7 col-form-label\">Last</label>\r\n                                                        </Form.Group>\r\n                                                    </div> \r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Last1\">\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" placeholder=\"0.0000\" value={Last} onChange={handleLastChange} />\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_Last2\">\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'Last' && (\r\n                                                            <div className=\"col-sm-4\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"row\">\r\n\r\n                                                    <div className=\"col-md-2\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_FIFO\">\r\n                                                            <div className=\"col-sm-2 form-check\">\r\n                                                                <label className=\"form-check-label\">\r\n                                                                    <input type=\"radio\" \r\n                                                                        name='FIFO'\r\n                                                                        value='FIFO'\r\n                                                                        checked={radio === 'FIFO'}\r\n                                                                        onChange={handleRadioChange}\r\n                                                                    />\r\n                                                                    <i className=\"input-helper\"></i>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <label className=\"col-sm-7 col-form-label\">FIFO</label>\r\n                                                        </Form.Group>\r\n                                                    </div> \r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_FIFO1\">\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.0000' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"col-md-5\">\r\n                                                        <Form.Group className=\"row\" controlId=\"validation_FIFO2\">\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n\r\n                                                            {radio === 'FIFO' && (\r\n                                                            <div className=\"col-sm-4 form-checkxxxxx\">\r\n                                                                <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value='0.00' readOnly/>\r\n                                                            </div>\r\n                                                            )}\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </fieldset>\r\n                                    </Form.Group>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Location ************************************ */}\r\n\r\n                        <Tab eventKey=\"Location\" title=\"Location\" class=\"nav-link active\">\r\n                            <div className=\"page-header\">\r\n                                <div className=\"template-demo\" >\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                                        <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                                    </button>\r\n                                \r\n                                    <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                                        <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                                    </button>\r\n                                </div>                     \r\n                            </div> \r\n                            \r\n                            <InventoryLocation name={'InventoryFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Supplier ************************************ */}\r\n\r\n                        <Tab eventKey=\"Supplier\" title=\"Supplier\" class=\"nav-link active\">\r\n\r\n                            <InventorySupplier name={'InventoryFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Reference ************************************ */}\r\n\r\n                        <Tab eventKey=\"Reference\" title=\"Reference\" class=\"nav-link active\">\r\n                            <Form.Group>\r\n                                <label>File upload</label>\r\n                                <div className=\"custom-file\">\r\n                                    <Form.Control type=\"file\" className=\"form-control visibility-hidden\" id=\"customFileLang\" lang=\"es\"/>\r\n                                    <label className=\"custom-file-label\" htmlFor=\"customFileLang\">Upload image</label>\r\n                                </div>\r\n                            </Form.Group> \r\n                        </Tab>\r\n\r\n\r\n                    </Tabs>\r\n                </section>\r\n                </form>\r\n\r\n\r\n                        {/* ************************************* button ***************************************** */}\r\n\r\n                    <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"></h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <div className=\"template-demo\">\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success btn-icon-text\"\r\n                            onClick={onClickChange}\r\n                            >\r\n                            <i className=\"mdi mdi-file-check btn-icon-prepend\"></i>{\" \"}\r\n                            {Button_save}\r\n                            </button>\r\n\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger btn-icon-text\"\r\n                            >\r\n                            <i className=\"mdi mdi-close-circle-outline btn-icon-prepend\"></i>{\" \"}\r\n                            Cancel\r\n                            </button>\r\n                        </div>\r\n                        </ol>\r\n                    </nav>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InventoryFrom;\r\n"],"names":["useState","Columns","setColumns","Data","setData","useEffect","site_ID","APIServices","then","responseJson","console","log","data","status","header","result","Swal","icon","title","text","message","catch","e","get_inventorymaster_location","localStorage","getItem","IndeterminateCheckbox","React","ref","indeterminate","rest","defaultRef","resolvedRef","current","type","useTable","columns","useSortBy","useRowSelect","useResizeColumns","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","resetResizing","state","selectedRowIds","className","on","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","borderBottom","color","getResizerProps","isResizing","render","isSorted","isSortedDesc","getRowProps","onClick","original","col56","cells","cell","show","setShow","handleClose","Supplier","setSupplier","selected_Supplier","setSelected_Supplier","TaxCode","setTaxCode","selected_TaxCode","setSelected_TaxCode","SupplierPartNo","setSupplierPartNo","Manufacturer","setManufacturer","selected_Manufacturer","setSelected_Manufacturer","LastItemCost","setLastItemCost","RetailItemCost","setRetailItemCost","MinimumOrderQty","setMinimumOrderQty","MultiplierQuantity","setMultiplierQuantity","Discount","setDiscount","Date","LastReceiveDate","setLastReceiveDate","location","useLocation","get_inventorymaster_supplier","select","RowID","selected_asset","allowOutsideClick","supplier","item","label","sup_mst_supplier_cd","sup_mst_desc","value","ITM_Tax_Code","tax_mst_tax_cd","tax_mst_desc","ITM_Manufacturer","mfg_mst_mfg_cd","mfg_mst_company","get_inventory_status","Modal","onHide","centered","closeButton","Form","controlId","isClearable","options","onChange","required","target","placeholder","Moment","format","Button","variant","props","validated","Button_save","setButton_save","setRowID","Type","selected_Type","setSelected_Type","Commodity_Code","setCommodity_Code","selected_Commodity_Code","setSelected_Commodity_Code","StockNo","setStockNo","StockNo_disabled","setStockNo_disabled","Stock_Group","setStock_Group","selected_Stock_Group","setSelected_Stock_Group","Master_Location","setMaster_Location","selected_Master_Location","setSelected_Master_Location","Part_No","setPart_No","Order_Rule","setOrder_Rule","selected_Order_Rule","setSelected_Order_Rule","TotalOH","setTotalOH","Cost_Center","setCost_Center","selected_Cost_Center","setSelected_Cost_Center","IssuePrice","setIssuePrice","Account","setAccount","selected_Account","setSelected_Account","SerializeCounter","setSerializeCounter","Description","setDescription","ExtendedDescription","setExtendedDescription","PartDeacStatus","setPartDeacStatus","selected_PartDeacStatus","setSelected_PartDeacStatus","AutoSpare","setAutoSpare","CheckBox_AutoSpare","setCheckBox_AutoSpare","IssueUOM","setIssueUOM","selected_IssueUOM","setSelected_IssueUOM","CriticalSpare","setCriticalSpare","CheckBox_CriticalSpare","setCheckBox_CriticalSpare","ReceiveUOM","setReceiveUOM","selected_ReceiveUOM","setSelected_ReceiveUOM","HazardousMaterial","setHazardousMaterial","CheckBox_HazardousMaterial","setCheckBox_HazardousMaterial","ConversionFactor","setConversionFactor","ABCClass","setABCClass","StorageType","setStorageType","selected_StorageType","setSelected_StorageType","OrderPoint","setOrderPoint","Cube","setCube","Maximum","setMaximum","ShelfLife","setShelfLife","LastActivityDate","setLastActivityDate","EOQ","setEOQ","LastCountDate","setLastCountDate","NextCountDate","setNextCountDate","UDFNote1","setUDFNote1","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","AccountType","selected_AccountType","setSelected_AccountType","YTDUsage","setYTDUsage","LastYearUsage","setLastYearUsage","YTDTurns","setYTDTurns","LastYearTurns","setLastYearTurns","YTDStockouts","setYTDStockouts","LastYearStockouts","setLastYearStockouts","setCostingRule","Radio_CostingRule","setRadio_CostingRule","Average","setAverage","Standard","setStandard","Last","setLast","PrimaryLocation","setPrimaryLocation","CheckBox_PrimaryLocation","setCheckBox_PrimaryLocation","IncreaseTotalOH","setIncreaseTotalOH","CheckBox_IncreaseTotalOH","setCheckBox_IncreaseTotalOH","UpdateStockCosting","setUpdateStockCosting","CheckBox_UpdateStockCosting","setCheckBox_UpdateStockCosting","AutoNumring","setAutoNumring","radio","setRadio","get_inventorymaster_select","JSON","stringify","index","itm_mst_type","itm_mst_com_code","itm_mst_stockno","itm_mst_itm_grp","itm_mst_mstr_locn","itm_mst_partno","itm_mst_order_rule","itm_mst_costcenter","itm_mst_account","itm_mst_desc","itm_mst_ext_desc","itm_det_part_deac_status","itm_det_auto_spare","itm_det_issue_uom","itm_det_critical_spare","itm_det_rcv_uom","itm_det_hzd_mtl","itm_det_abc_class","itm_det_storage_type","itm_det_order_pt","itm_det_cube","itm_det_maximum","itm_det_shelf_life","itm_det_lastactdate","date","trim","itm_det_lastcntdate","itm_det_next_cnt_date","itm_det_note1","itm_det_varchar1","itm_det_varchar2","itm_det_varchar3","itm_det_varchar4","itm_det_varchar5","itm_det_varchar6","itm_det_varchar7","itm_det_varchar8","itm_det_varchar9","itm_det_varchar10","itm_det_numeric1","itm_det_numeric2","itm_det_numeric3","itm_det_numeric4","itm_det_numeric5","itm_det_datetime1","itm_det_datetime2","itm_det_datetime3","itm_det_datetime4","itm_det_datetime5","itm_det_acct_type","itm_det_tax_cd","itm_det_cr_code","itm_det_avg_cost","itm_det_std_cost","itm_det_last_cost","itm_loc_prim_locn_flg","itm_loc_inc_ttloh","itm_loc_stock_cost_flag","Wko_Auto_numbering","cnt_mst_numbering","ITM_Commodity_Code","com_mst_com_code","com_mst_desc","ITM_Stock_Group","itm_grp_cd","itm_grp_desc","ITM_Master_Location","loc_mst_stk_loc","loc_mst_desc","ITM_Order_Rule","odr_mst_odr","odr_mst_desc","CostCenter","costcenter","descs","WKO_Labor_Account","account","ITM_Part_Deac_Status","itm_sts_status","itm_sts_typ_cd","ITM_Issue_UOM","uom_mst_uom","uom_mst_desc","ITM_Storage_Type","stt_mst_stt","stt_mst_desc","onClickChange","position","showConfirmButton","timer","New_Inventory","resetData","Update_Inventory","get_date","moment","utcOffset","emp_mst_login_id","emp_mst_empl_id","setType","split","date_of_LastActivity","date_of_LastCount","date_of_NextCount","date_1","date_2","date_3","date_4","date_5","setAccountType","json_inventory","handleRadioChange","checked","class","styles","control","fontSize","singleValue","disabled","readOnly","as","autoPlay","autoPlayInterval","animationDuration","animationType","infinite","touchTracking","disableDotsControls","src","require","alt","Tabs","defaultActiveKey","Tab","eventKey","name","lang","htmlFor"],"sourceRoot":""}