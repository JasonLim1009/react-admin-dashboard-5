{"version":3,"file":"static/js/6788.8f0e0a84.chunk.js","mappings":"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","sources":["app/tables/WorkOrderMaterial.js","app/tables/WorkOrderSpecialOrder.js","app/tables/WorkOrderOutsourceContract.js","app/tables/WorkOrderTimeCard.js","app/tables/WorkOrderMisc.js","app/tables/WorkOrderStatusAudit.js","app/Maintenance/WorkOrderFrom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\n\r\nconst WorkOrderMaterial = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [StockNo, setStockNo] = useState([]);\r\n  const [selected_StockNo, setSelected_StockNo] = useState([]);\r\n\r\n  const [StockLocation, setStockLocation] = useState([]);\r\n  const [selected_StockLocation, setSelected_StockLocation] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState([]);\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"1.0000\");\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n  const get_workordermaster_material = (site_ID) => {\r\n    APIServices.get_workordermaster_material(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_material(site_ID);\r\n  }, []);\r\n\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n    resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n    <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n    </>\r\n    )\r\n}\r\n)\r\n\r\n\r\n\r\nconst {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    \r\n    selectedFlatRows,\r\n    resetResizing,        \r\n    state: { selectedRowIds },\r\n    \r\n} = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n    hooks => {\r\n        hooks.visibleColumns.push(columns => [\r\n          // Let's make a column for selection\r\n          {\r\n            id: 'selection',\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n\r\n              <div>                      \r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n\r\n            ),\r\n            \r\n          },\r\n          ...columns,\r\n        ])\r\n      }\r\n    )\r\n\r\n    const handleRowClick = (data) => {\r\n\r\n        console.log(data.col67);\r\n    };\r\n\r\n\r\n\r\n    const get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n      Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n      Swal.showLoading()\r\n\r\n      APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n\r\n     \r\n          if (responseJson.data.status === 'SUCCESS') {\r\n\r\n\r\n             console.log('get_dropdown', responseJson.data)\r\n\r\n\r\n                let StockNo = responseJson.data.data.MRStockno.map(item => ({\r\n                  label: item.itm_mst_stockno +\" : \"+ item.itm_mst_desc,\r\n                  value: item.itm_mst_stockno            \r\n                  }));\r\n                  setStockNo(StockNo);\r\n\r\n                let StockLocation = responseJson.data.data.ITM_StockLocation.map(item => ({\r\n                  label: item.itm_loc_stk_loc +\" : \"+ item.itm_loc_oh_qty,\r\n                  value: item.itm_loc_stk_loc            \r\n                  }));\r\n                  setStockLocation(StockLocation);\r\n\r\n                let ChargeCostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                  label: item.costcenter +\" : \"+ item.descs,\r\n                  value: item.costcenter            \r\n                  }));\r\n                  setChargeCostCenter(ChargeCostCenter);\r\n\r\n                let ChargeAccount = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                  label: item.account +\" : \"+ item.descs,\r\n                  value: item.account            \r\n                  }));\r\n                  setChargeAccount(ChargeAccount);\r\n\r\n\r\n                  //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                  Swal.close();\r\n              \r\n          }else{\r\n              Swal.close();\r\n              Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: responseJson.data.message,\r\n                  \r\n                })\r\n          }\r\n\r\n      }).catch((e) => {\r\n          Swal.close();\r\n         \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_sitecode...',\r\n            text: e,          \r\n          })\r\n        });\r\n  }\r\n\r\n\r\n  const get_dropdown_ParentFlag = (site_ID,selected_asset) => {  \r\n\r\n\r\n      console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n      \r\n      APIServices.get_dropdown_ParentFlag(site_ID,selected_asset).then((responseJson)=>{\r\n\r\n\r\n         console.log(responseJson.data.status);\r\n\r\n          if (responseJson.data.status === 'SUCCESS') {  \r\n\r\n                  Swal.close();\r\n                  setButton_save(\"Submit\")\r\n                  get_workordermaster_select(site_ID,selected_asset);\r\n                \r\n          }else{\r\n              Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: responseJson.data,\r\n                  \r\n                })\r\n          }\r\n\r\n      }).catch((e) => {           \r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkOrder_select...',\r\n            text: e,          \r\n          })\r\n        });\r\n\r\n  }\r\n\r\n\r\n  const get_workordermaster_select = () => {\r\n\r\n    \r\n      console.log('SELECT ROWID: '+ location.state.RowID)\r\n\r\n      APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n          \r\n          console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n\r\n          if (responseJson.data.status === 'SUCCESS') {     \r\n              \r\n\r\n// **************************************** check read data ******************************************\r\n              console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n             \r\n             for (var index in responseJson.data.data) {\r\n             \r\n              \r\n              setRowID( responseJson.data.data[index].RowID )\r\n\r\n\r\n              setSelected_StockNo( {label:responseJson.data.data[index].wko_ls2_stockno} )\r\n              setSelected_StockLocation( {label:responseJson.data.data[index].wko_ls2_stk_locn} )\r\n              setDescription( responseJson.data.data[index].wko_ls2_desc )\r\n              setSelected_ChargeCostCenter( {label:responseJson.data.data[index].wko_ls2_chg_costcenter} )\r\n              setSelected_ChargeAccount( {label:responseJson.data.data[index].wko_ls2_chg_account} )\r\n              setQtyNeeded( responseJson.data.data[index].wko_ls2_qty_needed )\r\n\r\n\r\n            }\r\n\r\n\r\n            Swal.close();\r\n\r\n          }else{\r\n              Swal.fire({\r\n                  icon: 'error',\r\n                  title: 'Oops...',\r\n                  text: responseJson.data,\r\n                  \r\n                })\r\n          }\r\n\r\n      }).catch((e) => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkOrder_select...',\r\n            text: e,          \r\n          })\r\n        });\r\n\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n      let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n      console.log('select select',location.state.select);\r\n      console.log('select WKOID',location.state.RowID);\r\n  \r\n      get_workorder_status(site_ID, \"All\", location.state.select);       \r\n     \r\n\r\n  },[location]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n        <div>\r\n            <Modal show={show} onHide={handleClose} centered >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Maintenance</Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_StockNo\">\r\n                            <label className=\"col-sm-4 col-form-label\">Stock No:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={StockNo}\r\n                                    value={selected_StockNo}\r\n                                    onChange={setSelected_StockNo} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_StockLocation\">\r\n                            <label className=\"col-sm-4 col-form-label\">Stock Location:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={StockLocation}\r\n                                    value={selected_StockLocation}\r\n                                    onChange={setSelected_StockLocation} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                            <label className=\"col-sm-4 col-form-label\">Description:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"text\"  \r\n                                    value={Description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ChargeCostCenter\">\r\n                            <label className=\"col-sm-4 col-form-label\">Charge Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={ChargeCostCenter}\r\n                                    value={selected_ChargeCostCenter}\r\n                                    onChange={setSelected_ChargeCostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ChargeAccount\">\r\n                            <label className=\"col-sm-4 col-form-label\">Charge Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={ChargeAccount}\r\n                                    value={selected_ChargeAccount}\r\n                                    onChange={setSelected_ChargeAccount} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_QtyNeeded\">\r\n                            <label className=\"col-sm-4 col-form-label\">Qty Needed:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\"1.0000\" \r\n                                    value={QtyNeeded} \r\n                                    onChange={(e) => setQtyNeeded(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </Modal.Body>\r\n                \r\n\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        // Close modal\r\n                        handleClose();\r\n                    }}>\r\n                    {/* {Button_save} */}\r\n                    Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div> \r\n      \r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderMaterial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\nconst WorkOrderSpecialOrder = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [Supplier, setSupplier] = useState([]);\r\n  const [selected_Supplier, setSelected_Supplier] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"0\");\r\n\r\n  const [ItemCost, setItemCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [Account, setAccount] = useState([]);\r\n  const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n  const get_workordermaster_specialorder = (site_ID) => {\r\n    APIServices.get_workordermaster_specialorder(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_specialorder(site_ID);\r\n  }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n        const handleRowClick = (data) => {\r\n     \r\n            console.log(data.col56)\r\n        };\r\n\r\n\r\n\r\nconst get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n    Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n    Swal.showLoading()\r\n\r\n    APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n\r\n    \r\n        if (responseJson.data.status === 'SUCCESS') {\r\n\r\n\r\n            console.log('get_dropdown', responseJson.data)\r\n\r\n\r\n                let Supplier = responseJson.data.data.supplier.map(item => ({\r\n                    label: item.sup_mst_supplier_cd +\" : \"+ item.sup_mst_desc,\r\n                    value: item.sup_mst_supplier_cd            \r\n                    }));\r\n                    setSupplier(Supplier);\r\n\r\n                let TaxCode = responseJson.data.data.ITM_Tax_Code.map(item => ({\r\n                    label: item.tax_mst_tax_cd +\" : \"+ item.tax_mst_desc,\r\n                    value: item.tax_mst_tax_cd            \r\n                    }));\r\n                    setTaxCode(TaxCode);\r\n\r\n                let UOM = responseJson.data.data.ITM_Issue_UOM.map(item => ({\r\n                    label: item.uom_mst_uom +\" : \"+ item.uom_mst_desc,\r\n                    value: item.uom_mst_uom            \r\n                    }));\r\n                    setUOM(UOM);\r\n\r\n                let CostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                    label: item.costcenter +\" : \"+ item.descs,\r\n                    value: item.costcenter            \r\n                    }));\r\n                    setCostCenter(CostCenter);\r\n\r\n                let Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs,\r\n                    value: item.account            \r\n                    }));\r\n                    setAccount(Account);\r\n\r\n\r\n                //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                Swal.close();\r\n            \r\n        }else{\r\n            Swal.close();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data.message,\r\n                \r\n                })\r\n        }\r\n\r\n    }).catch((e) => {\r\n        Swal.close();\r\n        \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_sitecode...',\r\n            text: e,          \r\n        })\r\n        });\r\n}\r\n\r\n\r\nconst get_dropdown_ParentFlag = (site_ID,selected_asset) => {  \r\n\r\n\r\n    console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n    \r\n    APIServices.get_dropdown_ParentFlag(site_ID,selected_asset).then((responseJson)=>{\r\n\r\n\r\n        console.log(responseJson.data.status);\r\n\r\n        if (responseJson.data.status === 'SUCCESS') {  \r\n\r\n                Swal.close();\r\n                setButton_save(\"Submit\")\r\n                get_workordermaster_select(site_ID,selected_asset);\r\n                \r\n        }else{\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n                })\r\n        }\r\n\r\n    }).catch((e) => {           \r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkOrder_select...',\r\n            text: e,          \r\n        })\r\n        });\r\n\r\n}\r\n\r\n\r\nconst get_workordermaster_select = () => {\r\n\r\n    \r\n    console.log('SELECT ROWID: '+ location.state.RowID)\r\n\r\n    APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n        \r\n        console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n\r\n        if (responseJson.data.status === 'SUCCESS') {     \r\n            \r\n\r\n// **************************************** check read data ******************************************\r\n            console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n            \r\n            for (var index in responseJson.data.data) {\r\n            \r\n            \r\n            setRowID( responseJson.data.data[index].RowID )\r\n\r\n\r\n            setSelected_Supplier( {label:responseJson.data.data[index].wko_ls3_rec_supplier} )\r\n            setDescription( responseJson.data.data[index].wko_ls3_descr )\r\n            setSelected_TaxCode( {label:responseJson.data.data[index].wko_ls3_tax_cd} )\r\n            setSelected_UOM( {label:responseJson.data.data[index].wko_ls3_mtl_uom} )\r\n            setQtyNeeded( responseJson.data.data[index].wko_ls3_qty_needed )\r\n            setItemCost( responseJson.data.data[index].wko_ls3_item_cost )\r\n            setSelected_CostCenter( {label:responseJson.data.data[index].wko_ls3_chg_costcenter} )\r\n            setSelected_Account( {label:responseJson.data.data[index].wko_ls3_chg_account} )\r\n\r\n\r\n            }\r\n\r\n\r\n            Swal.close();\r\n\r\n        }else{\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n                })\r\n        }\r\n\r\n    }).catch((e) => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops get_WorkOrder_select...',\r\n            text: e,          \r\n        })\r\n        });\r\n\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n    console.log('select select',location.state.select);\r\n    console.log('select WKOID',location.state.RowID);\r\n\r\n    get_workorder_status(site_ID, \"All\", location.state.select);       \r\n    \r\n\r\n},[location]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n        <div>\r\n            <Modal show={show} onHide={handleClose} centered >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Special Order (PR)</Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Supplier\">\r\n                            <label className=\"col-sm-4 col-form-label\">Supplier:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Supplier}\r\n                                    value={selected_Supplier}\r\n                                    onChange={setSelected_Supplier} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                            <label className=\"col-sm-4 col-form-label\">Description:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"text\"  \r\n                                    value={Description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_TaxCode\">\r\n                            <label className=\"col-sm-4 col-form-label\">Tax Code:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={TaxCode}\r\n                                    value={selected_TaxCode}\r\n                                    onChange={setSelected_TaxCode} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_UOM\">\r\n                            <label className=\"col-sm-4 col-form-label\">UOM:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={UOM}\r\n                                    value={selected_UOM}\r\n                                    onChange={setSelected_UOM} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_QtyNeeded\">\r\n                            <label className=\"col-sm-4 col-form-label\">Qty Needed:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={QtyNeeded} \r\n                                    onChange={(e) => setQtyNeeded(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ItemCost\">\r\n                            <label className=\"col-sm-4 col-form-label\">Item Cost:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                            <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={ItemCost} \r\n                                    onChange={(e) => setItemCost(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ItemCost\">\r\n                            <label className=\"col-sm-4 col-form-label\">Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={CostCenter}\r\n                                    value={selected_CostCenter}\r\n                                    onChange={setSelected_CostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Account\">\r\n                            <label className=\"col-sm-4 col-form-label\">Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Account}\r\n                                    value={selected_Account}\r\n                                    onChange={setSelected_Account} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </Modal.Body>\r\n                \r\n\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        // Close modal\r\n                        handleClose();\r\n                    }}>\r\n                    {/* {Button_save} */}\r\n                    Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div> \r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderSpecialOrder;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\nconst WorkOrderOutsourceContract = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [Supplier, setSupplier] = useState([]);\r\n  const [selected_Supplier, setSelected_Supplier] = useState([]);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [TaxCode, setTaxCode] = useState([]);\r\n  const [selected_TaxCode, setSelected_TaxCode] = useState([]);\r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [QtyNeeded, setQtyNeeded] = useState(\"0\");\r\n\r\n  const [EstimateCost, setEstimateCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [Account, setAccount] = useState([]);\r\n  const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n  const get_workordermaster_outsourcecontract = (site_ID) => {\r\n    APIServices.get_workordermaster_outsourcecontract(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_outsourcecontract(site_ID);\r\n  }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n    const handleRowClick = (data) => {\r\n    \r\n        console.log(data.col56)\r\n    };\r\n\r\n\r\n\r\n    const get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n    \r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n    \r\n        \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n    \r\n    \r\n                console.log('get_dropdown', responseJson.data)\r\n    \r\n    \r\n                    let Supplier = responseJson.data.data.supplier.map(item => ({\r\n                        label: item.sup_mst_supplier_cd +\" : \"+ item.sup_mst_desc,\r\n                        value: item.sup_mst_supplier_cd            \r\n                        }));\r\n                        setSupplier(Supplier);\r\n    \r\n                    let TaxCode = responseJson.data.data.ITM_Tax_Code.map(item => ({\r\n                        label: item.tax_mst_tax_cd +\" : \"+ item.tax_mst_desc,\r\n                        value: item.tax_mst_tax_cd            \r\n                        }));\r\n                        setTaxCode(TaxCode);\r\n    \r\n                    let UOM = responseJson.data.data.ITM_Issue_UOM.map(item => ({\r\n                        label: item.uom_mst_uom +\" : \"+ item.uom_mst_desc,\r\n                        value: item.uom_mst_uom            \r\n                        }));\r\n                        setUOM(UOM);\r\n    \r\n                    let CostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                        label: item.costcenter +\" : \"+ item.descs,\r\n                        value: item.costcenter            \r\n                        }));\r\n                        setCostCenter(CostCenter);\r\n    \r\n                    let Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                        label: item.account +\" : \"+ item.descs,\r\n                        value: item.account            \r\n                        }));\r\n                        setAccount(Account);\r\n    \r\n    \r\n                    //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                    Swal.close();\r\n                \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.close();\r\n            \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_sitecode...',\r\n                text: e,          \r\n            })\r\n            });\r\n    }\r\n    \r\n    \r\n    const get_dropdown_ParentFlag = (site_ID,selected_asset) => {  \r\n    \r\n    \r\n        console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n        \r\n        APIServices.get_dropdown_ParentFlag(site_ID,selected_asset).then((responseJson)=>{\r\n    \r\n    \r\n            console.log(responseJson.data.status);\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {  \r\n    \r\n                    Swal.close();\r\n                    setButton_save(\"Submit\")\r\n                    get_workordermaster_select(site_ID,selected_asset);\r\n                    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {           \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    const get_workordermaster_select = () => {\r\n    \r\n        \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n    \r\n        APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n    \r\n    // **************************************** check read data ******************************************\r\n                console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n                \r\n                for (var index in responseJson.data.data) {\r\n                \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n    \r\n    \r\n                setSelected_Supplier( {label:responseJson.data.data[index].wko_ls4_supplier} )\r\n                setDescription( responseJson.data.data[index].wko_ls4_descr )\r\n                setSelected_TaxCode( {label:responseJson.data.data[index].wko_ls4_tax_cd} )\r\n                setSelected_UOM( {label:responseJson.data.data[index].wko_ls4_svc_uom} )\r\n                setQtyNeeded( responseJson.data.data[index].wko_ls4_qty_needed )\r\n                setEstimateCost( responseJson.data.data[index].wko_ls4_est_cost )\r\n                setSelected_CostCenter( {label:responseJson.data.data[index].wko_ls4_chg_costcenter} )\r\n                setSelected_Account( {label:responseJson.data.data[index].wko_ls4_chg_account} )\r\n    \r\n    \r\n                }\r\n    \r\n    \r\n                Swal.close();\r\n    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n    \r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n    \r\n        console.log('select select',location.state.select);\r\n        console.log('select WKOID',location.state.RowID);\r\n    \r\n        get_workorder_status(site_ID, \"All\", location.state.select);       \r\n        \r\n    \r\n    },[location]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n        <div>\r\n            <Modal show={show} onHide={handleClose} centered >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Special Order (PR)</Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Supplier\">\r\n                            <label className=\"col-sm-4 col-form-label\">Supplier:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Supplier}\r\n                                    value={selected_Supplier}\r\n                                    onChange={setSelected_Supplier} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                            <label className=\"col-sm-4 col-form-label\">Description:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"text\"  \r\n                                    value={Description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_TaxCode\">\r\n                            <label className=\"col-sm-4 col-form-label\">Tax Code:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={TaxCode}\r\n                                    value={selected_TaxCode}\r\n                                    onChange={setSelected_TaxCode} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_UOM\">\r\n                            <label className=\"col-sm-4 col-form-label\">UOM:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={UOM}\r\n                                    value={selected_UOM}\r\n                                    onChange={setSelected_UOM} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_QtyNeeded\">\r\n                            <label className=\"col-sm-4 col-form-label\">Qty Needed:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={QtyNeeded} \r\n                                    onChange={(e) => setQtyNeeded(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_EstimateCost\">\r\n                            <label className=\"col-sm-4 col-form-label\">Estimate Cost:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                            <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={EstimateCost} \r\n                                    onChange={(e) => setEstimateCost(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ItemCost\">\r\n                            <label className=\"col-sm-4 col-form-label\">Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={CostCenter}\r\n                                    value={selected_CostCenter}\r\n                                    onChange={setSelected_CostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Account\">\r\n                            <label className=\"col-sm-4 col-form-label\">Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Account}\r\n                                    value={selected_Account}\r\n                                    onChange={setSelected_Account} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </Modal.Body>\r\n                \r\n\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        // Close modal\r\n                        handleClose();\r\n                    }}>\r\n                    {/* {Button_save} */}\r\n                    Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderOutsourceContract;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\nconst WorkOrderTimeCard = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [EmployeeID, setEmployeeID] = useState([]);\r\n  const [selected_EmployeeID, setSelected_EmployeeID] = useState([]);\r\n\r\n  const [Craft, setCraft] = useState([]);\r\n  const [selected_Craft, setSelected_Craft] = useState([]);\r\n\r\n  const [TimeCardDate, setTimeCardDate] = useState(new Date());\r\n\r\n  const [HourType, setHourType] = useState([]);\r\n  const [selected_HourType, setSelected_HourType] = useState([]);\r\n\r\n  const [ActualHour, setActualHour] = useState(\"0\");\r\n\r\n  const [ChargeCostCenter, setChargeCostCenter] = useState([]);\r\n  const [selected_ChargeCostCenter, setSelected_ChargeCostCenter] = useState([]);\r\n\r\n  const [ChargeAccount, setChargeAccount] = useState([]);\r\n  const [selected_ChargeAccount, setSelected_ChargeAccount] = useState([]);\r\n\r\n  const [CreditCostCenter, setCreditCostCenter] = useState([]);\r\n  const [selected_CreditCostCenter, setSelected_CreditCostCenter] = useState([]);\r\n\r\n  const [CreditAccount, setCreditAccount] = useState([]);\r\n  const [selected_CreditAccount, setSelected_CreditAccount] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n  const get_workordermaster_timecard = (site_ID) => {\r\n    APIServices.get_workordermaster_timecard(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_timecard(site_ID);\r\n  }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n        const handleRowClick = (data) => {\r\n     \r\n            console.log(data.col56)\r\n        };\r\n\r\n\r\n\r\n    const get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n    \r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n    \r\n        \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n    \r\n    \r\n                console.log('get_dropdown', responseJson.data)\r\n    \r\n    \r\n                    let EmployeeID = responseJson.data.data.Employee_Supervisor_Id.map(item => ({\r\n                        label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name,\r\n                        value: item.emp_mst_empl_id            \r\n                        }));\r\n                        setEmployeeID(EmployeeID);\r\n    \r\n                    let HourType = responseJson.data.data.HoursType.map(item => ({\r\n                        label: item.hours_type_cd,\r\n                        value: item.hours_type_cd            \r\n                        }));\r\n                        setHourType(HourType);\r\n    \r\n                    let ChargeCostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                        label: item.costcenter +\" : \"+ item.descs,\r\n                        value: item.costcenter            \r\n                        }));\r\n                        setChargeCostCenter(ChargeCostCenter);\r\n    \r\n                    let ChargeAccount = responseJson.data.data.account.map(item => ({\r\n                        label: item.account +\" : \"+ item.descs,\r\n                        value: item.account            \r\n                        }));\r\n                        setChargeAccount(ChargeAccount);\r\n    \r\n                    let CreditCostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                        label: item.costcenter +\" : \"+ item.descs,\r\n                        value: item.costcenter            \r\n                        }));\r\n                        setCreditCostCenter(CreditCostCenter);\r\n\r\n                    let CreditAccount = responseJson.data.data.account.map(item => ({\r\n                        label: item.account +\" : \"+ item.descs,\r\n                        value: item.account            \r\n                        }));\r\n                        setCreditAccount(CreditAccount);\r\n\r\n\r\n                    //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                    Swal.close();\r\n                \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.close();\r\n            \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_sitecode...',\r\n                text: e,          \r\n            })\r\n            });\r\n    }\r\n    \r\n    \r\n    const get_dropdown_ParentFlag = (site_ID,selected_asset) => {  \r\n    \r\n    \r\n        console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n        \r\n        APIServices.get_dropdown_ParentFlag(site_ID,selected_asset).then((responseJson)=>{\r\n    \r\n    \r\n            console.log(responseJson.data.status);\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {  \r\n    \r\n                    Swal.close();\r\n                    setButton_save(\"Submit\")\r\n                    get_workordermaster_select(site_ID,selected_asset);\r\n                    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {           \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    const get_workordermaster_select = () => {\r\n    \r\n        \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n    \r\n        APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n    \r\n    // **************************************** check read data ******************************************\r\n                console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n                \r\n                for (var index in responseJson.data.data) {\r\n                \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n    \r\n    \r\n                setSelected_EmployeeID( {label:responseJson.data.data[index].wko_ls8_empl_id} )\r\n                setSelected_Craft( {label:responseJson.data.data[index].wko_ls8_craft} )\r\n\r\n                setTimeCardDate( responseJson.data.data[index].wko_ls8_datetime1 )\r\n                if(responseJson.data.data[index].wko_ls8_datetime1 == null){\r\n                    setTimeCardDate('')\r\n                }else{\r\n\r\n                    setTimeCardDate( Moment(responseJson.data.data[index].wko_ls8_datetime1.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT TC Date : '+ Moment(responseJson.data.data[index].itm_sup_last_rcvd_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_HourType( {label:responseJson.data.data[index].wko_ls8_hours_type} )\r\n                setActualHour( responseJson.data.data[index].wko_ls8_hrs )\r\n                setSelected_ChargeCostCenter( {label:responseJson.data.data[index].wko_ls8_chg_costcenter} )\r\n                setSelected_ChargeAccount( {label:responseJson.data.data[index].wko_ls8_chg_account} )\r\n                setSelected_CreditCostCenter( {label:responseJson.data.data[index].wko_ls8_crd_costcenter} )\r\n                setSelected_CreditAccount( {label:responseJson.data.data[index].wko_ls8_crd_account} )\r\n    \r\n    \r\n                }\r\n    \r\n    \r\n                Swal.close();\r\n    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n    \r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n    \r\n        console.log('select select',location.state.select);\r\n        console.log('select WKOID',location.state.RowID);\r\n    \r\n        get_workorder_status(site_ID, \"All\", location.state.select);       \r\n        \r\n    \r\n    },[location]);\r\n\r\n\r\n\r\n    const [list, setList] = useState([]);\r\n    const handleAdd = () => {\r\n        const newItem = { id: list.length + 1, text: \"\", text1: \".00\", text2: \"\" };\r\n        setList([...list, newItem]);\r\n      };\r\n    \r\n    const handleVoid = (id) => {\r\n        setList(list.filter((item) => item.id !== id));\r\n      };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\" onClick={handleAdd}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\" onClick={() => handleVoid()}></i> Void \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n        {/* <div>\r\n            <Modal show={show} onHide={handleClose} centered >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Time Card</Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_EmployeeID\">\r\n                            <label className=\"col-sm-4 col-form-label\">Employee ID:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={EmployeeID}\r\n                                    value={selected_EmployeeID}\r\n                                    onChange={setSelected_EmployeeID} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Craft\">\r\n                            <label className=\"col-sm-4 col-form-label\">Craft:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Craft}\r\n                                    value={selected_Craft}\r\n                                    onChange={setSelected_Craft} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_TimeCardDate\">\r\n                                <label className=\"col-sm-4 col-form-label\">Time Card Date:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control                                            \r\n                                        type=\"datetime-local\"  \r\n                                        value={TimeCardDate} \r\n                                        onChange={(e) => setTimeCardDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_HourType\">\r\n                            <label className=\"col-sm-4 col-form-label\">Hour Type:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={HourType}\r\n                                    value={selected_HourType}\r\n                                    onChange={setSelected_HourType} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ActualHour\">\r\n                            <label className=\"col-sm-4 col-form-label\">Actual Hour:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\"1.00\" \r\n                                    value={ActualHour} \r\n                                    onChange={(e) => setActualHour(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ChargeCostCenter\">\r\n                            <label className=\"col-sm-4 col-form-label\">Charge Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={ChargeCostCenter}\r\n                                    value={selected_ChargeCostCenter}\r\n                                    onChange={setSelected_ChargeCostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ChargeAccount\">\r\n                            <label className=\"col-sm-4 col-form-label\">Charge Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={ChargeAccount}\r\n                                    value={selected_ChargeAccount}\r\n                                    onChange={setSelected_ChargeAccount} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_CreditCostCenter\">\r\n                            <label className=\"col-sm-4 col-form-label\">Credit Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={CreditCostCenter}\r\n                                    value={selected_CreditCostCenter}\r\n                                    onChange={setSelected_CreditCostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_CreditAccount\">\r\n                            <label className=\"col-sm-4 col-form-label\">Credit Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={CreditAccount}\r\n                                    value={selected_CreditAccount}\r\n                                    onChange={setSelected_CreditAccount} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </Modal.Body>\r\n                \r\n\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        // Close modal\r\n                        handleClose();\r\n                    }}>\r\n                    Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div> */}\r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody>\r\n                    {list.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td>{item.id}</td>\r\n                        <td>{item.text}</td>\r\n                        <td>\r\n                            <Select\r\n                                isClearable={true}\r\n                                options={EmployeeID}\r\n                                value={item.selected}\r\n                                onChange={setSelected_EmployeeID}\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={Craft}\r\n                                value={item.selected}\r\n                                onChange={setSelected_Craft} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={HourType}\r\n                                value={item.selected}\r\n                                onChange={setSelected_HourType} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Form.Control  \r\n                                type=\"number\"  \r\n                                placeholder=\"1.00\" \r\n                                value={item.selected} \r\n                                onChange={(e) => setActualHour(e.target.value)}\r\n                                />\r\n                        </td>\r\n                        <td>{item.text1}</td>\r\n                        <td>{item.text1}</td>\r\n                        <td>{item.text1}</td>\r\n                        <td>{item.text1}</td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={ChargeCostCenter}\r\n                                value={item.selected}\r\n                                onChange={setSelected_ChargeCostCenter} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={ChargeAccount}\r\n                                value={item.selected}\r\n                                onChange={setSelected_ChargeAccount} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={CreditCostCenter}\r\n                                value={item.selected}\r\n                                onChange={setSelected_CreditCostCenter} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <Select  \r\n                                isClearable={true}  \r\n                                options={CreditAccount}\r\n                                value={item.selected}\r\n                                onChange={setSelected_CreditAccount} // using id as it is unique\r\n                                required\r\n                            />\r\n                        </td>\r\n                        <td>{item.text2}</td>\r\n                    </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderTimeCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\nimport Select from 'react-select';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport Moment from 'moment';\r\nimport  {useLocation}  from 'react-router-dom';\r\n\r\n\r\nconst WorkOrderMisc = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [Description, setDescription] = useState(\"\");\r\n\r\n  const [MiscDate, setMiscDate] = useState(new Date());\r\n\r\n  const [UOM, setUOM] = useState([]);\r\n  const [selected_UOM, setSelected_UOM] = useState([]);\r\n\r\n  const [Quantity, setQuantity] = useState(\"0\");\r\n\r\n  const [ItemCost, setItemCost] = useState(\"0\");\r\n\r\n  const [CostCenter, setCostCenter] = useState([]);\r\n  const [selected_CostCenter, setSelected_CostCenter] = useState([]);\r\n\r\n  const [Account, setAccount] = useState([]);\r\n  const [selected_Account, setSelected_Account] = useState([]);\r\n\r\n  const location = useLocation();\r\n  \r\n  const [Button_save, setButton_save] = useState(\"\");\r\n\r\n  const [RowID, setRowID] = useState(\"\");\r\n\r\n\r\n\r\n\r\n  const get_workordermaster_misc = (site_ID) => {\r\n    APIServices.get_workordermaster_misc(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_misc(site_ID);\r\n  }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n        const handleRowClick = (data) => {\r\n     \r\n            console.log(data.col56)\r\n        };\r\n\r\n\r\n\r\n    const get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n    \r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n    \r\n        \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n    \r\n    \r\n                console.log('get_dropdown', responseJson.data)\r\n    \r\n    \r\n                    let UOM = responseJson.data.data.ITM_Issue_UOM.map(item => ({\r\n                        label: item.uom_mst_uom +\" : \"+ item.uom_mst_desc,\r\n                        value: item.uom_mst_uom            \r\n                        }));\r\n                        setUOM(UOM);\r\n    \r\n                    let CostCenter = responseJson.data.data.CostCenter.map(item => ({\r\n                        label: item.costcenter +\" : \"+ item.descs,\r\n                        value: item.costcenter            \r\n                        }));\r\n                        setCostCenter(CostCenter);\r\n    \r\n                    let Account = responseJson.data.data.account.map(item => ({\r\n                        label: item.account +\" : \"+ item.descs,\r\n                        value: item.account            \r\n                        }));\r\n                        setAccount(Account);\r\n    \r\n\r\n                    //get_dropdown_ParentFlag(site_ID,selected_asset);                  \r\n                    Swal.close();\r\n                \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.close();\r\n            \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_sitecode...',\r\n                text: e,          \r\n            })\r\n            });\r\n    }\r\n    \r\n    \r\n    const get_dropdown_ParentFlag = (site_ID,selected_asset) => {  \r\n    \r\n    \r\n        console.log('PARENT FLAG: '+ site_ID + selected_asset)\r\n        \r\n        APIServices.get_dropdown_ParentFlag(site_ID,selected_asset).then((responseJson)=>{\r\n    \r\n    \r\n            console.log(responseJson.data.status);\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {  \r\n    \r\n                    Swal.close();\r\n                    setButton_save(\"Submit\")\r\n                    get_workordermaster_select(site_ID,selected_asset);\r\n                    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {           \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    const get_workordermaster_select = () => {\r\n    \r\n        \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n    \r\n        APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n    \r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n    \r\n    // **************************************** check read data ******************************************\r\n                console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n                \r\n                for (var index in responseJson.data.data) {\r\n                \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n    \r\n    \r\n                setDescription( responseJson.data.data[index].wko_ls5_desc )\r\n             \r\n                setMiscDate( responseJson.data.data[index].wko_ls5_date )\r\n                if(responseJson.data.data[index].wko_ls5_date == null){\r\n                    setMiscDate('')\r\n                }else{\r\n\r\n                    setMiscDate( Moment(responseJson.data.data[index].wko_ls5_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date : '+ Moment(responseJson.data.data[index].wko_ls5_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_UOM( {label:responseJson.data.data[index].wko_ls5_uom} )\r\n                setQuantity( responseJson.data.data[index].wko_ls5_qty )\r\n                setItemCost( responseJson.data.data[index].wko_ls5_item_cost )\r\n                setSelected_CostCenter( {label:responseJson.data.data[index].wko_ls5_costcenter} )\r\n                setSelected_Account( {label:responseJson.data.data[index].wko_ls5_account} )\r\n          \r\n    \r\n                }\r\n    \r\n    \r\n                Swal.close();\r\n    \r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                    })\r\n            }\r\n    \r\n        }).catch((e) => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops get_WorkOrder_select...',\r\n                text: e,          \r\n            })\r\n            });\r\n    \r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n    \r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n    \r\n        console.log('select select',location.state.select);\r\n        console.log('select WKOID',location.state.RowID);\r\n    \r\n        get_workorder_status(site_ID, \"All\", location.state.select);       \r\n        \r\n    \r\n    },[location]);\r\n\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick={handleShow}>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div>\r\n\r\n        <div>\r\n            <Modal show={show} onHide={handleClose} centered >\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Misc</Modal.Title>\r\n                </Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                            <label className=\"col-sm-4 col-form-label\">Description:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"text\"  \r\n                                    value={Description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                            <Form.Group className=\"row\" controlId=\"validation_Date\">\r\n                                <label className=\"col-sm-4 col-form-label\">Date:</label>\r\n                                <div className=\"col-sm-7 form-label\">\r\n                                <label className=\"col-sm-12 form-label\">\r\n                                    <Form.Control                                            \r\n                                        type=\"datetime-local\"  \r\n                                        value={MiscDate} \r\n                                        onChange={(e) => setMiscDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                </label>\r\n                                </div>\r\n                            </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_UOM\">\r\n                            <label className=\"col-sm-4 col-form-label\">UOM:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={UOM}\r\n                                    value={selected_UOM}\r\n                                    onChange={setSelected_UOM} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Quantity\">\r\n                            <label className=\"col-sm-4 col-form-label\">Quantity:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={Quantity} \r\n                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_ItemCost\">\r\n                            <label className=\"col-sm-4 col-form-label\">Item Cost:</label>\r\n                            <div className=\"col-sm-7 form-label\">\r\n                            <label className=\"col-sm-12 form-label\">\r\n                                <Form.Control  \r\n                                    type=\"number\"  \r\n                                    placeholder=\".00\" \r\n                                    value={ItemCost} \r\n                                    onChange={(e) => setItemCost(e.target.value)}\r\n                                    />\r\n                            </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_CostCenter\">\r\n                            <label className=\"col-sm-4 col-form-label\">Cost Center:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={CostCenter}\r\n                                    value={selected_CostCenter}\r\n                                    onChange={setSelected_CostCenter} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <Form.Group className=\"row\" controlId=\"validation_Account\">\r\n                            <label className=\"col-sm-4 col-form-label\">Account:</label>\r\n                            <div className=\"col-sm-7\">\r\n                                <Select  \r\n                                    isClearable={true}  \r\n                                    options={Account}\r\n                                    value={selected_Account}\r\n                                    onChange={setSelected_Account} // using id as it is unique\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </Form.Group>\r\n                    </div>\r\n                </Modal.Body>\r\n                \r\n\r\n                <Modal.Footer>\r\n\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        // Close modal\r\n                        handleClose();\r\n                    }}>\r\n                    {/* {Button_save} */}\r\n                    Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n\r\n        </div> \r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderMisc;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useResizeColumns,\r\n} from \"react-table\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport APIServices from \"../services/APIServices\";\r\n\r\n\r\nconst WorkOrderStatusAudit = () => {\r\n \r\n\r\n  const [Columns, setColumns] = useState([]);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n  const get_workordermaster_statusaudit = (site_ID) => {\r\n    APIServices.get_workordermaster_statusaudit(site_ID)\r\n        .then((responseJson) => {\r\n        console.log(\"Login JSON DATA : \", responseJson);\r\n\r\n        if (responseJson.data.status === \"SUCCESS\") {\r\n\r\n            setColumns(responseJson.data.data.header);\r\n            setData(responseJson.data.data.result);\r\n        \r\n        } else {\r\n            Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: responseJson.data.message,\r\n            });\r\n        }\r\n        })\r\n        .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops get_sitecode...\",\r\n            text: e,\r\n        });\r\n        });\r\n    };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    get_workordermaster_statusaudit(site_ID);\r\n  }, []);\r\n\r\n\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n    \r\n        return (\r\n        <>\r\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n        )\r\n    }\r\n    )\r\n   \r\n\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        \r\n        selectedFlatRows,\r\n        resetResizing,        \r\n        state: { selectedRowIds },\r\n        \r\n    } = useTable({ columns: Columns, data: Data },useSortBy, useRowSelect, useResizeColumns,\r\n\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n              // Let's make a column for selection\r\n              {\r\n                id: 'selection',\r\n                // The header can use the table's getToggleAllRowsSelectedProps method\r\n                // to render a checkbox\r\n                Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                  <div>\r\n                    <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                  </div>\r\n                ),\r\n                // The cell can use the individual row's getToggleRowSelectedProps method\r\n                // to the render a checkbox\r\n                Cell: ({ row }) => (\r\n\r\n                  <div>                      \r\n                    <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                  </div>\r\n\r\n                ),\r\n                \r\n              },\r\n              ...columns,\r\n            ])\r\n          }\r\n        )\r\n\r\n\r\n        const handleRowClick = (data) => {\r\n     \r\n            console.log(data.col56)\r\n        };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"page-header\">\r\n            <div className=\"template-demo\" >\r\n                <button type=\"button\" className=\"btn btn-outline-primary btn-icon-text\"  onClick>\r\n                    <i className=\"mdi mdi-file-check btn-icon-prepend\"></i> New  \r\n                </button>\r\n            \r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-icon-text\"  >\r\n                    <i className=\"mdi mdi-delete-forever btn-icon-prepend\"></i> Delete \r\n                </button>\r\n            </div>                     \r\n        </div> \r\n\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-bordered \" {...getTableProps() } on >\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                        \r\n                            {headerGroup.headers.map(column => (                                    \r\n                                <th\r\n                                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                    \r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        color: 'black',\r\n                                    }}\r\n\r\n                                    {...column.getResizerProps()}\r\n                                        className={`resizer ${\r\n                                            column.isResizing ? 'isResizing' : ''\r\n                                        }`}\r\n                                >                            \r\n                                    {column.render('Header')}\r\n\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? '🔽'\r\n                                                : '🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                        \r\n                </thead>\r\n                <tbody {...getTableBodyProps() } >\r\n                    {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={() => handleRowClick(row.original)}>\r\n                        {row.cells.map(cell => {\r\n                            return (\r\n                            <>\r\n                            {/* Here added onClick function to get cell value */}\r\n                            <td\r\n                            // onClick={()=> getCellValue(cell)}\r\n                            //     {...cell.getCellProps()}\r\n                            //     style={{\r\n                            //     padding: '10px',\r\n                            //     border: 'solid 1px gray',\r\n                            //     background: 'papayawhip',\r\n                            //     }}\r\n                            >\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                            </>\r\n                            )\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}                                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkOrderStatusAudit;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form } from 'react-bootstrap';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport APIServices from \"../services/APIServices\";\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\r\nimport 'sweetalert2/src/sweetalert2.scss'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport  {useLocation}  from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport {useTable,useSortBy,usePagination,useRowSelect,useResizeColumns  }  from 'react-table';\r\nimport moment from 'moment';\r\n\r\nimport WorkOrderMaterial from \"../tables/WorkOrderMaterial\";\r\nimport WorkOrderSpecialOrder from \"../tables/WorkOrderSpecialOrder\";\r\nimport WorkOrderOutsourceContract from \"../tables/WorkOrderOutsourceContract\";\r\nimport WorkOrderTimeCard from \"../tables/WorkOrderTimeCard\";\r\nimport WorkOrderMisc from \"../tables/WorkOrderMisc\";\r\nimport WorkOrderStatusAudit from \"../tables/WorkOrderStatusAudit\";\r\n\r\nconst WorkOrderFrom = (props) => {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n\r\n    const handleDragStart = (e) => e.preventDefault();\r\n\r\n    const items = [\r\n      <img src=\"../../assets/images/product_images_2/thumb_image1.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image2.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image3.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image4.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image5.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image6.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image7.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image8.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image9.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image10.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image11.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n      <img src=\"../../assets/images/product_images_2/thumb_image12.jpg\" onDragStart={handleDragStart} role=\"presentation\" />,\r\n    \r\n    ];\r\n\r\n    const location = useLocation();\r\n  \r\n    const [Button_save, setButton_save] = useState(\"\");\r\n\r\n    const [RowID, setRowID] = useState(\"\");\r\n\r\n    \r\n\r\n    const [WorkOrderNo, setWorkOrderNo] = useState(\"\");\r\n    const [WorkOrderNo_disabled, setWorkOrderNo_disabled] = useState(false);\r\n\r\n    const [Asset_No, setAsset_No] = useState([]);\r\n    const [selected_Asset_No, setSelected_Asset_No] = useState([]);\r\n\r\n    const [Status, setStatus] = useState([]);\r\n    const [selected_Status, setSelected_Status] = useState([]);\r\n\r\n    const [Asset_Status, setAsset_Status] = useState([]);\r\n    const [selected_Asset_Status, setSelected_Asset_Status] = useState([]);\r\n\r\n    const [Plan_Priority, setPlan_Priority] = useState([]);\r\n    const [selected_Plan_Priority, setSelected_Plan_Priority] = useState([]);\r\n\r\n    const [Asset_Group_Code, setAsset_Group_Code] = useState([]);\r\n    const [selected_Asset_Group_Code, setSelected_Asset_Group_Code] = useState([]);\r\n\r\n    const [OriginationDate, setOriginationDate] = useState(Moment().utcOffset('+08:00').format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    const [Charge_Cost_Center, setCharge_Cost_Center] = useState([]);\r\n    const [selected_Charge_Cost_Center, setSelected_Charge_Cost_Center] = useState([]);\r\n\r\n    const [DueDate, setDueDate] = useState(Moment().utcOffset('+08:00').format('YYYY-MM-DDTHH:mm:ss'));\r\n\r\n    const [Work_Area, setWork_Area] = useState([]);\r\n    const [selected_Work_Area, setSelected_Work_Area] = useState([]);\r\n\r\n    const [Originator, setOriginator] = useState([]);\r\n    const [selected_Originator, setSelected_Originator] = useState([]);\r\n\r\n    const [Asset_Level, setAsset_Level] = useState([]);\r\n    const [selected_Asset_Level, setSelected_Asset_Level] = useState([]);\r\n\r\n    const [Phone, setPhone] = useState(\"\");\r\n\r\n    const [Asset_Location, setAsset_Location] = useState([]);\r\n    const [selected_Asset_Location, setSelected_Asset_Location] = useState([]);\r\n\r\n    const [Fault_Code, setFault_Code] = useState([]);\r\n    const [selected_Fault_Code, setSelected_Fault_Code] = useState([]);\r\n\r\n    const [Description, setDescription] = useState(\"\");\r\n\r\n\r\n    \r\n    const [CorrectiveAction, setCorrectiveAction] = useState(\"\");\r\n\r\n    const [Project_ID, setProject_ID] = useState([]);\r\n    const [selected_Project_ID, setSelected_Project_ID] = useState([]);\r\n\r\n    const [Original_Periority, setOriginal_Periority] = useState([]);\r\n    const [selected_Original_Periority, setSelected_Original_Periority] = useState([]);\r\n\r\n    const [Cause_Code, setCause_Code] = useState([]);\r\n    const [selected_Cause_Code, setSelected_Cause_Code] = useState([]);\r\n    \r\n    const [ScheduleDate, setScheduleDate] = useState(\"\");\r\n\r\n    const [Action_Code, setAction_Code] = useState([]);\r\n    const [selected_Action_Code, setSelected_Action_Code] = useState([]);\r\n\r\n    const [ExceptionDate, setExceptionDate] = useState(\"\");\r\n    \r\n    const [Delay_Code, setDelay_Code] = useState([]);\r\n    const [selected_Delay_Code, setSelected_Delay_Code] = useState([]);\r\n\r\n    const [StatusChangeDate, setStatusChangeDate] = useState(\"\");\r\n\r\n    const [Work_Type, setWork_Type] = useState([]);\r\n    const [selected_Work_Type, setSelected_Work_Type] = useState([]);\r\n\r\n    const [CompletionDate, setCompletionDate] = useState(\"\");\r\n\r\n    const [Work_Class, setWork_Class] = useState([]);\r\n    const [selected_Work_Class, setSelected_Work_Class] = useState([]);\r\n\r\n    const [CloseDate, setCloseDate] = useState(\"\");\r\n\r\n    const [Work_Group, setWork_Group] = useState([]);\r\n    const [selected_Work_Group, setSelected_Work_Group] = useState([]);\r\n\r\n    const [Supervisor_ID, setSupervisor_ID] = useState([]);\r\n    const [selected_Supervisor_ID, setSelected_Supervisor_ID] = useState([]);\r\n\r\n    const [Planner, setPlanner] = useState([]);\r\n    const [selected_Planner, setSelected_Planner] = useState([]);\r\n\r\n    const [Approver, setApprover] = useState([]);\r\n    const [selected_Approver, setSelected_Approver] = useState([]);\r\n\r\n    const [Assign_To, setAssign_To] = useState([]);\r\n    const [selected_Assign_To, setSelected_Assign_To] = useState([]);\r\n\r\n    const [Permanent_ID, setPermanent_ID] = useState(\"\");\r\n\r\n    const [Temporary_Asset, setTemporary_Asset] = useState(false)  \r\n    const [CheckBox_Temporary_Asset, setCheckBox_Temporary_Asset] = useState('0')  \r\n\r\n    const [Approved, setApproved] = useState(false)  \r\n    const [CheckBox_Approved, setCheckBox_Approved] = useState('0')  \r\n    \r\n    const [Safety, setSafety] = useState(false)  \r\n    const [CheckBox_Safety, setCheckBox_Safety] = useState('0')  \r\n\r\n\r\n\r\n    const [Customer_Code, setCustomer_Code] = useState([]);\r\n    const [selected_Customer_Code, setSelected_Customer_Code] = useState([]); \r\n  \r\n    const [Labor_Account, setLabor_Account] = useState([]);\r\n    const [selected_Labor_Account, setSelected_Labor_Account] = useState([]); \r\n\r\n    const [Material_Account, setMaterial_Account] = useState([]);\r\n    const [selected_Material_Account, setSelected_Material_Account] = useState([]); \r\n\r\n    const [Credit_Cost_Center, setCredit_Cost_Center] = useState([]);\r\n    const [selected_Credit_Cost_Center, setSelected_Credit_Cost_Center] = useState([]); \r\n\r\n    const [Contract_Account, setContract_Account] = useState([]);\r\n    const [selected_Contract_Account, setSelected_Contract_Account] = useState([]); \r\n\r\n    const [Miscellaneous_Account, setMiscellaneous_Account] = useState([]);\r\n    const [selected_Miscellaneous_Account, setSelected_Miscellaneous_Account] = useState([]); \r\n\r\n    const [Columns, setColumns]=useState([]);\r\n    const [Data, setData]=useState([]);\r\n\r\n\r\n\r\n    const [UDFNote1, setUDFNote1] = useState(\"\");\r\n    const [UDFText_1, setUDFText_1] = useState(\"\");\r\n    const [UDFText_2, setUDFText_2] = useState(\"\");\r\n    const [UDFText_3, setUDFText_3] = useState(\"\");\r\n    const [UDFText_4, setUDFText_4] = useState(\"\");\r\n    const [UDFText_5, setUDFText_5] = useState(\"\");\r\n    const [UDFText_6, setUDFText_6] = useState(\"\");\r\n    const [UDFText_7, setUDFText_7] = useState(\"\");\r\n    const [UDFText_8, setUDFText_8] = useState(\"\");\r\n    const [UDFText_9, setUDFText_9] = useState(\"\");\r\n    const [UDFText_10, setUDFText_10] = useState(\"\");\r\n\r\n    const [UDFNumber_1, setUDFNumber_1] = useState(\"0\");\r\n    const [UDFNumber_2, setUDFNumber_2] = useState(\"0\");\r\n    const [UDFNumber_3, setUDFNumber_3] = useState(\"0\");\r\n    const [UDFNumber_4, setUDFNumber_4] = useState(\"0\");\r\n    const [UDFNumber_5, setUDFNumber_5] = useState(\"0\");\r\n\r\n    const [UDFDate_1, setUDFDate_1] = useState(new Date());\r\n    const [UDFDate_2, setUDFDate_2] = useState(new Date());\r\n    const [UDFDate_3, setUDFDate_3] = useState(new Date());\r\n    const [UDFDate_4, setUDFDate_4] = useState(new Date());\r\n    const [UDFDate_5, setUDFDate_5] = useState(new Date());\r\n\r\n    const [AutoNumring, setAutoNumring] = useState(\"\");\r\n\r\n   \r\n\r\n    const get_workorder_status = (site_ID, type, selected_asset) => {\r\n\r\n\r\n        Swal.fire({  title: 'Please Wait !', allowOutsideClick: false})\r\n        Swal.showLoading()\r\n\r\n        APIServices.get_dropdown(site_ID,type).then((responseJson)=>{\r\n\r\n       \r\n            if (responseJson.data.status === 'SUCCESS') {\r\n\r\n\r\n               console.log('get_dropdown', responseJson.data)\r\n\r\n\r\n            for (var index in responseJson.data.data.Wko_Auto_numbering) {  \r\n\r\n                if(responseJson.data.data.Wko_Auto_numbering[index].cnt_mst_numbering == \"M\" ){\r\n\r\n                    setWorkOrderNo_disabled(false)\r\n                    setAutoNumring('M')\r\n                }else{\r\n                    \r\n                    setWorkOrderNo_disabled(true)\r\n                    setAutoNumring('A')\r\n                }              \r\n            }\r\n\r\n\r\n                let Original_Periority = responseJson.data.data.WKO_Original_Periority.map(item => ({\r\n                    label: item.wrk_pri_pri_cd +\" : \"+ item.wrk_pri_desc,\r\n                    value: item.wrk_pri_desc            \r\n                    }));\r\n                    setOriginal_Periority(Original_Periority);\r\n\r\n                let Status = responseJson.data.data.WKO_Status.map(item => ({\r\n                    label: item.wrk_sts_status +\" : \"+ item.wrk_sts_desc,\r\n                    value: item.wrk_sts_desc            \r\n                    }));\r\n                    setStatus(Status);\r\n\r\n                let Plan_Priority = responseJson.data.data.Priority.map(item => ({\r\n                    label: item.wrk_pri_pri_cd +\" : \"+ item.wrk_pri_desc,\r\n                    value: item.wrk_pri_desc            \r\n                    }));\r\n                    setPlan_Priority(Plan_Priority);\r\n\r\n                let Asset_No = responseJson.data.data.WKO_Asset_No.map(item => ({\r\n                    label: item.ast_mst_asset_no +\" : \"+ item.ast_mst_asset_status,\r\n                    value: item.ast_mst_asset_no            \r\n                    }));\r\n                    setAsset_No(Asset_No);\r\n\r\n                let Asset_Group_Code = responseJson.data.data.AssetGroupCode.map(item => ({\r\n                    label: item.ast_grp_grp_cd +\" : \"+ item.ast_grp_desc ,\r\n                    value: item.ast_grp_desc            \r\n                    }));                   \r\n                    setAsset_Group_Code(Asset_Group_Code);\r\n\r\n                let Asset_Status = responseJson.data.data.AssetStatus.map(item => ({\r\n                    label: item.ast_sts_status +\" : \"+ item.ast_sts_desc ,\r\n                    value: item.ast_sts_desc            \r\n                    }));\r\n                    setAsset_Status(Asset_Status);\r\n\r\n                let Work_Area = responseJson.data.data.WKO_Work_Area.map(item => ({\r\n                    label: item.mst_war_work_area +\" : \"+ item.mst_war_desc ,\r\n                    value: item.mst_war_desc            \r\n                    }));\r\n                    setWork_Area(Work_Area);\r\n\r\n\r\n                let Charge_Cost_Center = responseJson.data.data.CostCenter.map(item => ({\r\n                    label: item.costcenter +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setCharge_Cost_Center(Charge_Cost_Center);\r\n\r\n                let Asset_Level = responseJson.data.data.AssetLevel.map(item => ({\r\n                    label: item.ast_lvl_ast_lvl +\" : \"+ item.ast_lvl_desc ,\r\n                    value: item.ast_lvl_desc            \r\n                    }));                   \r\n                    setAsset_Level(Asset_Level);\r\n\r\n                let Fault_Code = responseJson.data.data.FaultCode.map(item => ({\r\n                    label: item.wrk_flt_fault_cd +\" : \"+ item.wrk_flt_desc ,\r\n                    value: item.wrk_flt_desc            \r\n                    }));                   \r\n                    setFault_Code(Fault_Code);    \r\n\r\n                let Asset_Location = responseJson.data.data.AssetLocation.map(item => ({\r\n                    label: item.ast_loc_ast_loc +\" : \"+ item.ast_loc_desc ,\r\n                    value: item.ast_loc_desc            \r\n                    }));                   \r\n                    setAsset_Location(Asset_Location);    \r\n\r\n                let Originator = responseJson.data.data.WKO_Originator.map(item => ({\r\n                    label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n                    value: item.emp_mst_empl_id            \r\n                    }));                   \r\n                    setOriginator(Originator);   \r\n\r\n                let Project_ID = responseJson.data.data.WKO_ProjectID.map(item => ({\r\n                    label: item.prj_mst_prj_cd +\" : \"+ item.prj_mst_desc ,\r\n                    value: item.prj_mst_desc            \r\n                    }));                   \r\n                    setProject_ID(Project_ID); \r\n\r\n                let Cause_Code = responseJson.data.data.CasuseCode.map(item => ({\r\n                    label: item.wrk_ccd_cause_cd +\" : \"+ item.wrk_ccd_desc ,\r\n                    value: item.wrk_ccd_desc            \r\n                    }));                   \r\n                    setCause_Code(Cause_Code);   \r\n\r\n                let Action_Code = responseJson.data.data.ActionCode.map(item => ({\r\n                    label: item.wrk_act_action_cd +\" : \"+ item.wrk_act_desc ,\r\n                    value: item.wrk_act_desc            \r\n                    }));                   \r\n                    setAction_Code(Action_Code);  \r\n                    \r\n                let Delay_Code = responseJson.data.data.WKO_Delay_Code.map(item => ({\r\n                    label: item.wrk_dcd_delay_cd +\" : \"+ item.wrk_dcd_desc ,\r\n                    value: item.wrk_dcd_desc            \r\n                    }));                   \r\n                    setDelay_Code(Delay_Code);  \r\n\r\n                let Work_Type = responseJson.data.data.WKO_Work_Type.map(item => ({\r\n                    label: item.wrk_typ_typ_cd +\" : \"+ item.wrk_typ_desc ,\r\n                    value: item.wrk_typ_desc            \r\n                    }));                   \r\n                    setWork_Type(Work_Type);  \r\n                    \r\n                let Work_Class = responseJson.data.data.WKO_Work_Class.map(item => ({\r\n                    label: item.wrk_cls_cls_cd +\" : \"+ item.wrk_cls_desc ,\r\n                    value: item.wrk_cls_desc            \r\n                    }));                   \r\n                    setWork_Class(Work_Class);  \r\n\r\n                let Work_Group = responseJson.data.data.WKO_Work_Group.map(item => ({\r\n                    label: item.wrk_grp_grp_cd +\" : \"+ item.wrk_grp_desc ,\r\n                    value: item.wrk_grp_desc            \r\n                    }));                   \r\n                    setWork_Group(Work_Group);  \r\n\r\n                let Supervisor_ID = responseJson.data.data.Employee_Supervisor_Id.map(item => ({\r\n                    label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n                    value: item.emp_mst_name            \r\n                    }));                   \r\n                    setSupervisor_ID(Supervisor_ID);  \r\n\r\n                let Planner = responseJson.data.data.WKO_Planner.map(item => ({\r\n                    label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n                    value: item.emp_mst_name            \r\n                    }));                   \r\n                    setPlanner(Planner);  \r\n\r\n                let Approver = responseJson.data.data.WKO_Approver.map(item => ({\r\n                    label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n                    value: item.emp_mst_name            \r\n                    }));                   \r\n                    setApprover(Approver);  \r\n\r\n                let Assign_To = responseJson.data.data.WKO_AssignTO.map(item => ({\r\n                    label: item.emp_mst_empl_id +\" : \"+ item.emp_mst_name ,\r\n                    value: item.emp_mst_name            \r\n                    }));                   \r\n                    setAssign_To(Assign_To);  \r\n\r\n                let Customer_Code = responseJson.data.data.Customer_code.map(item => ({\r\n                    label: item.cus_mst_customer_cd +\" : \"+ item.cus_mst_desc ,\r\n                    value: item.cus_mst_desc            \r\n                    }));                   \r\n                    setCustomer_Code(Customer_Code);  \r\n\r\n                let Labor_Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setLabor_Account(Labor_Account);  \r\n\r\n                let Material_Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setMaterial_Account(Material_Account);  \r\n\r\n                let Credit_Cost_Center = responseJson.data.data.CostCenter.map(item => ({\r\n                    label: item.costcenter +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setCredit_Cost_Center(Credit_Cost_Center);  \r\n\r\n                let Contract_Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setContract_Account(Contract_Account);  \r\n\r\n                let Miscellaneous_Account = responseJson.data.data.WKO_Labor_Account.map(item => ({\r\n                    label: item.account +\" : \"+ item.descs ,\r\n                    value: item.descs            \r\n                    }));                   \r\n                    setMiscellaneous_Account(Miscellaneous_Account);  \r\n\r\n\r\n                    if(selected_asset == 'New_WorkOrder'){ \r\n\r\n                        Swal.close();\r\n                        setButton_save(\"Save\")\r\n    \r\n                    }else{\r\n    \r\n                        setButton_save(\"Update\")\r\n                        get_workordermaster_select(site_ID,selected_asset);\r\n                      \r\n                    }\r\n\r\n\r\n                Swal.close();\r\n           \r\n            }else{\r\n                Swal.close();\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data.message,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.close();\r\n           \r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_sitecode...',\r\n              text: e,          \r\n            })\r\n          });\r\n    }\r\n\r\n\r\n    const get_workordermaster_select = () => {\r\n\r\n      \r\n        console.log('SELECT ROWID: '+ location.state.RowID)\r\n\r\n        APIServices.get_workordermaster_select(location.state.RowID).then((responseJson)=>{  \r\n            \r\n            console.log('SELECT response: '+ JSON.stringify(responseJson));\r\n\r\n            if (responseJson.data.status === 'SUCCESS') {     \r\n                \r\n\r\n// **************************************** check read data ******************************************\r\n                console.log('SELECT WKO: '+ JSON.stringify(responseJson.data.data))\r\n               \r\n               for (var index in responseJson.data.data) {\r\n               \r\n                \r\n                setRowID( responseJson.data.data[index].RowID )\r\n\r\n\r\n                \r\n                setWorkOrderNo(responseJson.data.data[index].wko_mst_wo_no )\r\n                setSelected_Asset_No( {label:responseJson.data.data[index].wko_mst_assetno} )\r\n                setSelected_Status( {label:responseJson.data.data[index].wko_mst_status} )\r\n                setSelected_Asset_Status( {label:responseJson.data.data[index].wko_mst_asset_status} )\r\n                setSelected_Plan_Priority( {label:responseJson.data.data[index].wko_mst_plan_priority} )\r\n                setSelected_Asset_Group_Code( {label:responseJson.data.data[index].wko_mst_asset_group_code} )\r\n                \r\n                if(responseJson.data.data[index].wko_mst_org_date == null){\r\n                    setOriginationDate('')\r\n                }else{\r\n\r\n                    setOriginationDate( Moment(responseJson.data.data[index].wko_mst_org_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT OD: '+ Moment(responseJson.data.data[index].wko_mst_org_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_Charge_Cost_Center( {label:responseJson.data.data[index].wko_mst_chg_costcenter} )\r\n\r\n                if(responseJson.data.data[index].wko_mst_due_date == null){\r\n                    setDueDate('')\r\n                }else{\r\n\r\n                    setDueDate( Moment(responseJson.data.data[index].wko_mst_due_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT DD: '+ Moment(responseJson.data.data[index].wko_mst_due_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n                \r\n                setSelected_Work_Area( {label:responseJson.data.data[index].wko_mst_work_area} )\r\n                setSelected_Originator( {label:responseJson.data.data[index].wko_mst_originator} )\r\n                setSelected_Asset_Level( {label:responseJson.data.data[index].wko_mst_asset_level} )\r\n                setPhone( responseJson.data.data[index].wko_mst_phone )\r\n                setSelected_Asset_Location( {label:responseJson.data.data[index].wko_mst_asset_location} )\r\n                setSelected_Fault_Code( {label:responseJson.data.data[index].wko_mst_flt_code} )\r\n                setDescription( responseJson.data.data[index].wko_mst_descs )\r\n\r\n\r\n                setCorrectiveAction( responseJson.data.data[index].wko_det_corr_action )\r\n                setSelected_Project_ID( {label:responseJson.data.data[index].wko_mst_project_id} )\r\n                setSelected_Original_Periority( {label:responseJson.data.data[index].wko_mst_orig_priority} )\r\n                setSelected_Cause_Code( {label:responseJson.data.data[index].wko_det_cause_code} )\r\n                \r\n                if(responseJson.data.data[index].wko_det_sched_date == null){\r\n                    setScheduleDate('')\r\n                }else{\r\n\r\n                    setScheduleDate( Moment(responseJson.data.data[index].wko_det_sched_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT SD: '+ Moment(responseJson.data.data[index].wko_det_sched_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_Action_Code( {label:responseJson.data.data[index].wko_det_act_code} )\r\n\r\n                if(responseJson.data.data[index].wko_det_exc_date == null){\r\n                    setExceptionDate('')\r\n                }else{\r\n\r\n                    setExceptionDate( Moment(responseJson.data.data[index].wko_det_exc_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT ED: '+ Moment(responseJson.data.data[index].wko_det_exc_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_Delay_Code( {label:responseJson.data.data[index].wko_det_delay_cd} )\r\n\r\n                if(responseJson.data.data[index].wko_det_sc_date == null){\r\n                    setStatusChangeDate('')\r\n                }else{\r\n\r\n                    setStatusChangeDate( Moment(responseJson.data.data[index].wko_det_sc_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT SCD: '+ Moment(responseJson.data.data[index].wko_det_sc_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n                \r\n                setSelected_Work_Type( {label:responseJson.data.data[index].wko_det_work_type} )\r\n\r\n                if(responseJson.data.data[index].wko_det_cmpl_date == null){\r\n                    setCompletionDate('')\r\n                }else{\r\n\r\n                    setCompletionDate( Moment(responseJson.data.data[index].wko_det_cmpl_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT CD: '+ Moment(responseJson.data.data[index].wko_det_cmpl_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_Work_Class( {label:responseJson.data.data[index].wko_det_work_class} )\r\n\r\n                if(responseJson.data.data[index].wko_det_clo_date == null){\r\n                    setCloseDate('')\r\n                }else{\r\n\r\n                    setCloseDate( Moment(responseJson.data.data[index].wko_det_clo_date.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT CLOD: '+ Moment(responseJson.data.data[index].wko_det_clo_date.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                setSelected_Work_Group( {label:responseJson.data.data[index].wko_det_work_grp} )\r\n                setSelected_Supervisor_ID( {label:responseJson.data.data[index].wko_det_supv_id} )\r\n                setSelected_Planner( {label:responseJson.data.data[index].wko_det_planner} )\r\n                setSelected_Approver( {label:responseJson.data.data[index].wko_det_approver} )\r\n                setSelected_Assign_To( {label:responseJson.data.data[index].wko_det_assign_to} )\r\n                setPermanent_ID( responseJson.data.data[index].wko_det_perm_id )\r\n                setTemporary_Asset( responseJson.data.data[index].wko_det_temp_asset )\r\n                setApproved( responseJson.data.data[index].wko_det_approved )\r\n                setSafety( responseJson.data.data[index].wko_det_safety )\r\n                \r\n                \r\n                setSelected_Customer_Code( {label:responseJson.data.data[index].wko_det_customer_cd} )\r\n                setSelected_Labor_Account( {label:responseJson.data.data[index].wko_det_laccount} )\r\n                setSelected_Material_Account( {label:responseJson.data.data[index].wko_det_maccount} )\r\n                setSelected_Credit_Cost_Center( {label:responseJson.data.data[index].wko_det_crd_costcenter} )\r\n                setSelected_Contract_Account( {label:responseJson.data.data[index].wko_det_caccount} )\r\n                setSelected_Miscellaneous_Account( {label:responseJson.data.data[index].wko_det_saccount} )\r\n\r\n\r\n                setUDFNote1( responseJson.data.data[index].wko_det_note1 )\r\n                setUDFText_1( responseJson.data.data[index].wko_det_varchar1 )\r\n                setUDFText_2( responseJson.data.data[index].wko_det_varchar2 )\r\n                setUDFText_3( responseJson.data.data[index].wko_det_varchar3 )\r\n                setUDFText_4( responseJson.data.data[index].wko_det_varchar4 )\r\n                setUDFText_5( responseJson.data.data[index].wko_det_varchar5 )\r\n                setUDFText_6( responseJson.data.data[index].wko_det_varchar6 )\r\n                setUDFText_7( responseJson.data.data[index].wko_det_varchar7 )\r\n                setUDFText_8( responseJson.data.data[index].wko_det_varchar8 )\r\n                setUDFText_9( responseJson.data.data[index].wko_det_varchar9 )\r\n                setUDFText_10( responseJson.data.data[index].wko_det_varchar10 )\r\n\r\n                setUDFNumber_1( responseJson.data.data[index].wko_det_numeric1 )\r\n                setUDFNumber_2( responseJson.data.data[index].wko_det_numeric2 )\r\n                setUDFNumber_3( responseJson.data.data[index].wko_det_numeric3 )\r\n                setUDFNumber_4( responseJson.data.data[index].wko_det_numeric4 )\r\n                setUDFNumber_5( responseJson.data.data[index].wko_det_numeric5 )\r\n               \r\n                if(responseJson.data.data[index].wko_det_datetime1 == null){\r\n                    setUDFDate_1('')\r\n                }else{\r\n\r\n                    setUDFDate_1( Moment(responseJson.data.data[index].wko_det_datetime1.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 1 : '+ Moment(responseJson.data.data[index].wko_det_datetime1.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].wko_det_datetime2 == null){\r\n                    setUDFDate_2('')\r\n                }else{\r\n\r\n                    setUDFDate_2( Moment(responseJson.data.data[index].wko_det_datetime2.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 2 : '+ Moment(responseJson.data.data[index].wko_det_datetime2.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].wko_det_datetime3 == null){\r\n                    setUDFDate_3('')\r\n                }else{\r\n\r\n                    setUDFDate_3( Moment(responseJson.data.data[index].wko_det_datetime3.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 3 : '+ Moment(responseJson.data.data[index].wko_det_datetime3.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].wko_det_datetime4 == null){\r\n                    setUDFDate_4('')\r\n                }else{\r\n\r\n                    setUDFDate_4( Moment(responseJson.data.data[index].wko_det_datetime4.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 4 : '+ Moment(responseJson.data.data[index].wko_det_datetime4.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n                if(responseJson.data.data[index].wko_det_datetime5 == null){\r\n                    setUDFDate_5('')\r\n                }else{\r\n\r\n                    setUDFDate_5( Moment(responseJson.data.data[index].wko_det_datetime5.date).format('YYYY-MM-DDTHH:mm:ss').trim())\r\n                    console.log('SELECT Date 5 : '+ Moment(responseJson.data.data[index].wko_det_datetime5.date).format('YYYY-MM-DDTHH:mm:ss'))\r\n                }\r\n\r\n              }\r\n\r\n\r\n              Swal.close();\r\n\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_WorkOrder_select...',\r\n              text: e,          \r\n            })\r\n          });\r\n\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n\r\n        console.log('select select',location.state.select);\r\n        console.log('select WKOID',location.state.RowID);\r\n    \r\n        get_workorder_status(site_ID, \"All\", location.state.select);       \r\n       \r\n\r\n    },[location]);\r\n\r\n\r\n    const onClickChange = () => {\r\n\r\n        \r\n    // if(selected_Asset_No == 0 || selected_Asset_No == null){\r\n    //             Swal.fire({\r\n    //                 position: 'top-end',\r\n    //                 icon: 'error',\r\n    //                 title: 'Please Select the Asset No',\r\n    //                 showConfirmButton: false,\r\n    //                 timer: 2000\r\n                    \r\n    //             })\r\n    //         } else {\r\n            \r\n                if(selected_Status == 0 || selected_Status == null){\r\n                    Swal.fire({\r\n                        position: 'top-end',\r\n                        icon: 'error',\r\n                        title: 'Please Select the Status',\r\n                        showConfirmButton: false,\r\n                        timer: 2000,\r\n                        \r\n                    })\r\n                }else{\r\n\r\n                    if(selected_Asset_Status == 0 || selected_Asset_Status == null){\r\n                        Swal.fire({\r\n                            position: 'top-end',\r\n                            icon: 'error',\r\n                            title: 'Please Select the Asset Status',\r\n                            showConfirmButton: false,\r\n                            timer: 2000\r\n                            \r\n                        })\r\n                    }else{\r\n                    \r\n                        if(selected_Charge_Cost_Center == 0 || selected_Charge_Cost_Center == null){\r\n                            Swal.fire({\r\n                                position: 'top-end',\r\n                                icon: 'error',\r\n                                title: 'Please Select the Charge Cost Center',\r\n                                showConfirmButton: false,\r\n                                timer: 2000\r\n                                \r\n                            })\r\n                        }else{\r\n                \r\n                            if(selected_Fault_Code == 0 || selected_Fault_Code == null){\r\n                                Swal.fire({\r\n                                    position: 'top-end',\r\n                                    icon: 'error',\r\n                                    title: 'Please Select the Fault Code',\r\n                                    showConfirmButton: false,\r\n                                    timer: 2000\r\n                                    \r\n                                    })\r\n                            }else{\r\n                    \r\n                                if(Description == ''){\r\n                                    Swal.fire({\r\n                                        position: 'top-end',\r\n                                        icon: 'error',\r\n                                        title: 'Please Enter the Description',\r\n                                        showConfirmButton: false,\r\n                                        timer: 2000\r\n                                        \r\n                                        })\r\n                                }else{\r\n\r\n                                    if(selected_Original_Periority == 0 || selected_Original_Periority == null){\r\n                                        Swal.fire({\r\n                                            position: 'top-end',\r\n                                            icon: 'error',\r\n                                            title: 'Please Select the Original Periority',\r\n                                            showConfirmButton: false,\r\n                                            timer: 2000\r\n                                            \r\n                                        })\r\n                                    } else {\r\n            \r\n                                        if(selected_Work_Type == 0 || selected_Work_Type == null){\r\n                                            Swal.fire({\r\n                                                position: 'top-end',\r\n                                                icon: 'error',\r\n                                                title: 'Please Select the Work Type',\r\n                                                showConfirmButton: false,\r\n                                                timer: 2000\r\n                                                \r\n                                                })\r\n                                        }else{\r\n\r\n                                            if(selected_Work_Group == 0 || selected_Work_Group == null){\r\n                                                Swal.fire({\r\n                                                    position: 'top-end',\r\n                                                    icon: 'error',\r\n                                                    title: 'Please Select the Work Group',\r\n                                                    showConfirmButton: false,\r\n                                                    timer: 2000\r\n                                                    \r\n                                                    })\r\n                                            }else{\r\n                                    \r\n                                                if(Button_save ==  \"Save\"){\r\n            \r\n                                                    New_WorkOrder();\r\n                                                    console.log(\"Create button clicked!\");\r\n                                                    resetData();\r\n\r\n                                                }else if(Button_save == \"Update\"){\r\n            \r\n                                                    Update_WorkOrder();\r\n                                                    console.log(\"Update button clicked here!\");\r\n                                                }\r\n                                            }\r\n                                        \r\n                            \r\n                                        }\r\n                    \r\n                        \r\n                                    }\r\n                                \r\n                    \r\n                                }\r\n                            \r\n                \r\n                            }\r\n                        \r\n            \r\n                        }\r\n                    }\r\n\r\n                }\r\n        // }\r\n   \r\n    }\r\n\r\n\r\n    const New_WorkOrder = () => {\r\n\r\n        Swal.fire({  title: 'Loading.... !',allowOutsideClick: false})\r\n        Swal.showLoading();\r\n\r\n\r\n        let get_date = moment().utcOffset('+08:00').format('yyyy-MM-DD HH:mm:ss');\r\n        console.log(get_date)\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n        let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n        let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n\r\n\r\n        \r\n        //Select WorkOrderNo\r\n        console.log(\"WorkOrderNo: \", WorkOrderNo)\r\n\r\n        //Select Asset No\r\n        let Asset_No, setAsset_No;\r\n        if(selected_Asset_No == '' || selected_Asset_No == null){\r\n\r\n            setAsset_No=''\r\n        }else{\r\n\r\n            Asset_No = selected_Asset_No.label.split(\":\")\r\n            setAsset_No = Asset_No[0];\r\n            console.log(\"Asset_No \", Asset_No[0])\r\n        }\r\n\r\n        //Select Status\r\n        let Status, setStatus;\r\n        if(selected_Status.label == '' || selected_Status.label == null){\r\n\r\n            setStatus=''\r\n        }else{\r\n\r\n            Status = selected_Status.label.split(\":\")\r\n            setStatus = Status[0];\r\n            console.log(\"Status: \", Status[0])\r\n        }\r\n\r\n        //Select Asset Status\r\n        let Asset_Status, setAsset_Status;\r\n        if(selected_Asset_Status == '' || selected_Asset_Status == null){\r\n\r\n            setAsset_Status=''\r\n        }else{\r\n\r\n            Asset_Status = selected_Asset_No.label.split(\":\")\r\n            setAsset_Status = Asset_Status[0];\r\n            console.log(\"Asset_Status \", Asset_Status[0])\r\n        }\r\n\r\n        //Select Plan Priority\r\n        let Plan_Priority, setPlan_Priority;\r\n        if(selected_Plan_Priority == '' || selected_Plan_Priority == null){\r\n\r\n            setPlan_Priority=''\r\n        }else{\r\n\r\n            Plan_Priority = selected_Plan_Priority.label.split(\":\")\r\n            setPlan_Priority = Plan_Priority[0];\r\n            console.log(\"Plan_Priority \", Plan_Priority[0])\r\n        }\r\n\r\n        //Select Asset Group Code\r\n        let Asset_Group_Code, setAsset_Group_Code;\r\n        if(selected_Asset_Group_Code.label == '' || selected_Asset_Group_Code.label == null){\r\n\r\n            setAsset_Group_Code=''\r\n        }else{\r\n\r\n            Asset_Group_Code = selected_Asset_Group_Code.label.split(\":\")\r\n            setAsset_Group_Code = Asset_Group_Code[0];\r\n            console.log(\"Asset_Group_Code \", Asset_Group_Code[0])\r\n        }\r\n\r\n        //Select Origination Date\r\n        let date_of_origination = ''\r\n        if (OriginationDate == '' || OriginationDate == null) {\r\n\r\n            date_of_origination = '';\r\n        } else {\r\n\r\n            date_of_origination = Moment(OriginationDate).utcOffset('+08:00').format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"OD \", date_of_origination);\r\n        }\r\n\r\n        //Select Charge Cost Center\r\n        let Charge_Cost_Center = selected_Charge_Cost_Center.label.split(\":\")\r\n        console.log(\"Charge_Cost_Center: \", Charge_Cost_Center[0])\r\n\r\n        //Select Due Date\r\n        let date_of_due = ''\r\n        if (DueDate == '' || DueDate == null) {\r\n\r\n            date_of_due = '';\r\n        } else {\r\n\r\n            date_of_due = Moment(DueDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"DD \", date_of_due);\r\n        }\r\n\r\n        //Select Work Area\r\n        let Work_Area, setWork_Area;\r\n        if(selected_Work_Area == '' || selected_Work_Area == null){\r\n\r\n            setWork_Area=''\r\n        }else{\r\n\r\n            Work_Area = selected_Work_Area.label.split(\":\")\r\n            setWork_Area = Work_Area[0];\r\n            console.log(\"Work_Area \", Work_Area[0])\r\n        }\r\n\r\n        //Select Originator\r\n        let Originator, setOriginator;\r\n        if(selected_Originator == '' || selected_Originator == null){\r\n\r\n            setOriginator=''\r\n        }else{\r\n\r\n            Originator = selected_Originator.label.split(\":\")\r\n            setOriginator = Originator[0];\r\n            console.log(\"Originator \", Originator[0])\r\n        }\r\n\r\n        //Select Asset Level\r\n        let Asset_Level, setAsset_Level;\r\n        if(selected_Asset_Level == '' || selected_Asset_Level == null){\r\n\r\n            setAsset_Level=''\r\n        }else{\r\n\r\n            Asset_Level = selected_Asset_Level.label.split(\":\")\r\n            setAsset_Level = Asset_Level[0];\r\n            console.log(\"Asset_Level \", Asset_Level[0])\r\n        }\r\n\r\n        //Select Phone\r\n        console.log(\"Phone: \", Phone)\r\n\r\n        //Select Asset Location\r\n        let Asset_Location, setAsset_Location;\r\n        if(selected_Asset_Location == '' || selected_Asset_Location == null){\r\n\r\n            setAsset_Location=''\r\n        }else{\r\n\r\n            Asset_Location = selected_Asset_Location.label.split(\":\")\r\n            setAsset_Location = Asset_Location[0];\r\n            console.log(\"Asset_Location \", Asset_Location[0])\r\n        }\r\n        \r\n        //Select Fault Code\r\n        let Fault_Code = selected_Fault_Code.label.split(\":\")\r\n        console.log(\"Fault_Code: \", Fault_Code[0])\r\n\r\n        //Select Description\r\n        console.log(\"Description: \", Description)\r\n\r\n        \r\n        \r\n        //Select Corrective Action\r\n        console.log(\"CorrectiveAction: \", CorrectiveAction)\r\n\r\n        //Select Project ID\r\n        let Project_ID, setProject_ID;\r\n\r\n        console.log('Project_ID', selected_Project_ID.label)\r\n        if(selected_Project_ID.label == '' || selected_Project_ID.label == null){\r\n\r\n            setProject_ID=''\r\n        }else{\r\n\r\n            Project_ID = selected_Project_ID.label.split(\":\")\r\n            setProject_ID = Project_ID[0];\r\n            console.log(\"Project_ID \", Project_ID[0])\r\n        }\r\n\r\n        //Select Original Periority\r\n        let Original_Periority = selected_Original_Periority.label.split(\":\")\r\n        console.log(\"Original_Periority: \", Original_Periority[0])\r\n\r\n        //Select Cause Code\r\n        let Cause_Code, setCause_Code;\r\n        if(selected_Cause_Code == '' || selected_Cause_Code == null){\r\n\r\n            setCause_Code=''\r\n        }else{\r\n\r\n            Cause_Code = selected_Cause_Code.label.split(\":\")\r\n            setCause_Code = Cause_Code[0];\r\n            console.log(\"Cause_Code \", Cause_Code[0])\r\n        }\r\n\r\n        //Select Schedule Date\r\n        let date_of_schedule = ''\r\n        if (ScheduleDate == '' || ScheduleDate == null) {\r\n\r\n            date_of_schedule = '';\r\n        } else {\r\n\r\n            date_of_schedule = Moment(ScheduleDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SD \", date_of_schedule);\r\n        }\r\n\r\n        //Select Action Code\r\n        let Action_Code, setAction_Code;\r\n        if(selected_Action_Code == '' || selected_Action_Code == null){\r\n\r\n            setAction_Code=''\r\n        }else{\r\n\r\n            Action_Code = selected_Action_Code.label.split(\":\")\r\n            setAction_Code = Action_Code[0];\r\n            console.log(\"Action_Code \", Action_Code[0])\r\n        }\r\n\r\n        //Select Exception Date\r\n        let date_of_exception = ''\r\n        if (ExceptionDate == '' || ExceptionDate == null) {\r\n\r\n            date_of_exception = '';\r\n        } else {\r\n\r\n            date_of_exception = Moment(ExceptionDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"EB \", date_of_exception);\r\n        }\r\n\r\n        //Select Delay Code\r\n        let Delay_Code, setDelay_Code;\r\n        if(selected_Delay_Code.label == '' || selected_Delay_Code.label == null){\r\n\r\n            setDelay_Code=''\r\n        }else{\r\n\r\n            Delay_Code = selected_Delay_Code.label.split(\":\")\r\n            setDelay_Code = Delay_Code[0];\r\n            console.log(\"Delay_Code \", Delay_Code[0])\r\n        }\r\n\r\n        //Select Status Change Date\r\n        let date_of_status_change = ''\r\n        if (StatusChangeDate == '' || StatusChangeDate == null) {\r\n\r\n            date_of_status_change = '';\r\n        } else {\r\n\r\n            date_of_status_change = Moment(StatusChangeDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SCB \", date_of_status_change);\r\n        }\r\n\r\n        //Select Work Type\r\n        let Work_Type = selected_Work_Type.label.split(\":\")\r\n        console.log(\"Work_Type: \", Work_Type[0])\r\n\r\n         //Select Completion Date\r\n         let date_of_completion = ''\r\n         if (CompletionDate == '' || CompletionDate == null) {\r\n \r\n            date_of_completion = '';\r\n         } else {\r\n \r\n            date_of_completion = Moment(CompletionDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n             console.log(\"CD \", date_of_completion);\r\n         }\r\n\r\n        //Select Work Class\r\n        let Work_Class, setWork_Class;\r\n        if(selected_Work_Class == '' || selected_Work_Class == null){\r\n\r\n            setWork_Class=''\r\n        }else{\r\n\r\n            Work_Class = selected_Work_Class.label.split(\":\")\r\n            setWork_Class = Work_Class[0];\r\n            console.log(\"Work_Class \", Work_Class[0])\r\n        }\r\n\r\n        //Select Close Date\r\n        let date_of_close = ''\r\n        if (CloseDate == '' || CloseDate == null) {\r\n\r\n            date_of_close = '';\r\n        } else {\r\n\r\n            date_of_close = Moment(CloseDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"CLOD \", date_of_close);\r\n        }\r\n\r\n        //Select Work Group\r\n        let Work_Group = selected_Work_Group.label.split(\":\")\r\n        console.log(\"Work_Group: \", Work_Group[0])\r\n\r\n        //Select Supervisor ID\r\n        let Supervisor_ID, setSupervisor_ID;\r\n        if(selected_Supervisor_ID.label == '' || selected_Supervisor_ID.label == null){\r\n\r\n            setSupervisor_ID=''\r\n        }else{\r\n\r\n            Supervisor_ID = selected_Supervisor_ID.label.split(\":\")\r\n            setSupervisor_ID = Supervisor_ID[0];\r\n            console.log(\"Supervisor_ID \", Supervisor_ID[0])\r\n        }\r\n\r\n        //Select Planner\r\n        let Planner, setPlanner;\r\n        if(selected_Planner.label == '' || selected_Planner.label == null){\r\n\r\n            setPlanner=''\r\n        }else{\r\n\r\n            Planner = selected_Planner.label.split(\":\")\r\n            setPlanner = Planner[0];\r\n            console.log(\"Planner \", Planner[0])\r\n        }\r\n\r\n        //Select Approver\r\n        let Approver, setApprover;\r\n        if(selected_Approver.label == '' || selected_Approver.label == null){\r\n\r\n            setApprover=''\r\n        }else{\r\n\r\n            Approver = selected_Approver.label.split(\":\")\r\n            setApprover = Approver[0];\r\n            console.log(\"Approver \", Approver[0])\r\n        }\r\n\r\n        //Select Assign To\r\n        let Assign_To, setAssign_To;\r\n        if(selected_Assign_To == '' || selected_Assign_To == null){\r\n\r\n            setAssign_To=''\r\n        }else{\r\n\r\n            Assign_To = selected_Assign_To.label.split(\":\")\r\n            setAssign_To = Assign_To[0];\r\n            console.log(\"Assign_To \", Assign_To[0])\r\n        }\r\n\r\n        //Select Permanent ID\r\n        console.log(\"Perm_ID: \", Permanent_ID)\r\n\r\n\r\n        //Select WKO Customer Code\r\n        let Customer_Code, setCustomer_Code;\r\n        if(selected_Customer_Code.label == '' || selected_Customer_Code.label == null){\r\n\r\n            setCustomer_Code=''\r\n        }else{\r\n\r\n            Customer_Code = selected_Customer_Code.label.split(\":\")\r\n            setCustomer_Code = Customer_Code[0];\r\n            console.log(\"Customer_Code \", Customer_Code[0])\r\n        }\r\n\r\n        //Select WKO Labor Account\r\n        let Labor_Account, setLabor_Account;\r\n        if(selected_Labor_Account.label == '' || selected_Labor_Account.label == null){\r\n\r\n            setLabor_Account=''\r\n        }else{\r\n\r\n            Labor_Account = selected_Labor_Account.label.split(\":\")\r\n            setLabor_Account = Labor_Account[0];\r\n            console.log(\"Labor_Account \", Labor_Account[0])\r\n        }\r\n\r\n        //Select WKO Material Account\r\n        let Material_Account, setMaterial_Account;\r\n        if(selected_Material_Account.label == '' || selected_Material_Account.label == null){\r\n\r\n            setMaterial_Account=''\r\n        }else{\r\n\r\n            Material_Account = selected_Material_Account.label.split(\":\")\r\n            setMaterial_Account = Material_Account[0];\r\n            console.log(\"Material_Account \", Material_Account[0])\r\n        }\r\n\r\n        //Select WKO Credit Cost Center\r\n        let Credit_Cost_Center, setCredit_Cost_Center;\r\n        if(selected_Credit_Cost_Center.label == '' || selected_Credit_Cost_Center.label == null){\r\n\r\n            setCredit_Cost_Center=''\r\n        }else{\r\n\r\n            Credit_Cost_Center = selected_Credit_Cost_Center.label.split(\":\")\r\n            setCredit_Cost_Center = Credit_Cost_Center[0];\r\n            console.log(\"Credit_Cost_Center \", Credit_Cost_Center[0])\r\n        }\r\n\r\n        //Select WKO Contract Account\r\n        let Contract_Account, setContract_Account;\r\n        if(selected_Contract_Account.label == '' || selected_Contract_Account.label == null){\r\n\r\n            setContract_Account=''\r\n        }else{\r\n\r\n            Contract_Account = selected_Contract_Account.label.split(\":\")\r\n            setContract_Account = Contract_Account[0];\r\n            console.log(\"Contract_Account \", Contract_Account[0])\r\n        }\r\n\r\n        //Select WKO Miscellaneous Account\r\n        let Miscellaneous_Account, setMiscellaneous_Account;\r\n        if(selected_Miscellaneous_Account.label == '' || selected_Miscellaneous_Account.label == null){\r\n\r\n            setMiscellaneous_Account=''\r\n        }else{\r\n\r\n            Miscellaneous_Account = selected_Miscellaneous_Account.label.split(\":\")\r\n            setMiscellaneous_Account = Miscellaneous_Account[0];\r\n            console.log(\"Miscellaneous_Account \", Miscellaneous_Account[0])\r\n        }\r\n\r\n\r\n        //Select Date 1\r\n        let date_1 = ''\r\n        if (UDFDate_1 == '' || UDFDate_1 == null) {\r\n\r\n            date_1 = '';\r\n        } else {\r\n\r\n            date_1 = Moment(UDFDate_1).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date1 \", date_1);\r\n        }\r\n\r\n        //Select Date 2\r\n        let date_2 = ''\r\n        if (UDFDate_2 == '' || UDFDate_2 == null) {\r\n\r\n            date_2 = '';\r\n        } else {\r\n\r\n            date_2 = Moment(UDFDate_2).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date2 \", date_2);\r\n        }\r\n\r\n        //Select Date 3\r\n        let date_3 = ''\r\n        if (UDFDate_3 == '' || UDFDate_3 == null) {\r\n\r\n            date_3 = '';\r\n        } else {\r\n\r\n            date_3 = Moment(UDFDate_3).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date3 \", date_3);\r\n        }\r\n\r\n        //Select Date 4\r\n        let date_4 = ''\r\n        if (UDFDate_4 == '' || UDFDate_4 == null) {\r\n\r\n            date_4 = '';\r\n        } else {\r\n\r\n            date_4 = Moment(UDFDate_4).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date4 \", date_4);\r\n        }\r\n\r\n        //Select Date 5\r\n        let date_5 = ''\r\n        if (UDFDate_5 == '' || UDFDate_5 == null) {\r\n\r\n            date_5 = '';\r\n        } else {\r\n\r\n            date_5 = Moment(UDFDate_5).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date5 \", date_5);\r\n        }\r\n\r\n\r\n\r\n    var json_workorder ={\r\n\r\n\r\n        \"site_cd\": site_ID,\r\n      \r\n        \"wko_mst_wo_no\": WorkOrderNo.trim(),\r\n        \"wko_mst_assetno\":setAsset_No.trim(),\r\n        \"wko_mst_status\":setStatus.trim(),\r\n        \"wko_mst_asset_status\":setAsset_Status.trim(),\r\n        \"wko_mst_plan_priority\":setPlan_Priority.trim(),\r\n        \"wko_mst_asset_group_code\":setAsset_Group_Code.trim(),\r\n        \"wko_mst_org_date\":date_of_origination,\r\n        \"wko_mst_chg_costcenter\":Charge_Cost_Center[0].trim(),\r\n        \"wko_mst_due_date\":date_of_due,\r\n        \"wko_mst_work_area\":setWork_Area.trim(),\r\n        \"wko_mst_originator\":setOriginator.trim(),\r\n        \"wko_mst_asset_level\":setAsset_Level.trim(),\r\n        \"wko_mst_phone\":Phone.trim(),\r\n        \"wko_mst_asset_location\":setAsset_Location.trim(),\r\n        \"wko_mst_flt_code\":Fault_Code[0].trim(),\r\n        \"wko_mst_descs\":Description.trim(),\r\n\r\n\r\n        \"wko_mst_project_id\":setProject_ID.trim(),\r\n        \"wko_mst_orig_priority\":Original_Periority[0].trim(),\r\n        \"wko_det_corr_action\":CorrectiveAction.trim(),\r\n        \"wko_det_cause_code\":setCause_Code.trim(),\r\n        \"wko_det_sched_date\":date_of_schedule,\r\n        \"wko_det_act_code\":setAction_Code.trim(),\r\n        \"wko_det_exc_date\":date_of_exception,\r\n        \"wko_det_delay_cd\":setDelay_Code.trim(),\r\n        \"wko_det_sc_date\":date_of_status_change,\r\n        \"wko_det_work_type\":Work_Type[0].trim(),\r\n        \"wko_det_cmpl_date\":date_of_completion,\r\n        \"wko_det_work_class\":setWork_Class.trim(),\r\n        \"wko_det_clo_date\":date_of_close,\r\n        \"wko_det_work_grp\":Work_Group[0].trim(),\r\n        \"wko_det_supv_id\":setSupervisor_ID.trim(),\r\n        \"wko_det_planner\":setPlanner.trim(),\r\n        \"wko_det_approver\":setApprover.trim(),\r\n        \"wko_det_assign_to\":setAssign_To.trim(),\r\n        \"wko_det_perm_id\":Permanent_ID,\r\n        \"wko_det_temp_asset\":CheckBox_Temporary_Asset,\r\n        \"wko_det_approved\":CheckBox_Approved,\r\n        \"wko_det_safety\":CheckBox_Safety,\r\n\r\n\r\n        \"wko_det_customer_cd\":setCustomer_Code.trim(),\r\n        \"wko_det_laccount\":setLabor_Account.trim(),\r\n        \"wko_det_maccount\":setMaterial_Account.trim(),\r\n        \"wko_det_crd_costcenter\":setCredit_Cost_Center.trim(),\r\n        \"wko_det_caccount\":setContract_Account.trim(),\r\n        \"wko_det_saccount\":setMiscellaneous_Account.trim(),     \r\n                \r\n\r\n        \"wko_det_note1\":UDFNote1,\r\n        \"wko_det_varchar1\":UDFText_1,\r\n        \"wko_det_varchar2\":UDFText_2,\r\n        \"wko_det_varchar3\":UDFText_3,\r\n        \"wko_det_varchar4\":UDFText_4,\r\n        \"wko_det_varchar5\":UDFText_5,\r\n        \"wko_det_varchar6\":UDFText_6,\r\n        \"wko_det_varchar7\":UDFText_7,\r\n        \"wko_det_varchar8\":UDFText_8,\r\n        \"wko_det_varchar9\":UDFText_9,\r\n        \"wko_det_varchar10\":UDFText_10,\r\n\r\n        \"wko_det_numeric1\":UDFNumber_1.trim(),\r\n        \"wko_det_numeric2\":UDFNumber_2.trim(),\r\n        \"wko_det_numeric3\":UDFNumber_3.trim(),\r\n        \"wko_det_numeric4\":UDFNumber_4.trim(),\r\n        \"wko_det_numeric5\":UDFNumber_5.trim(),\r\n       \r\n        \"wko_det_datetime1\":date_1,\r\n        \"wko_det_datetime2\":date_2,\r\n        \"wko_det_datetime3\":date_3,\r\n        \"wko_det_datetime4\":date_4,\r\n        \"wko_det_datetime5\":date_5,\r\n       \r\n\r\n        \"asset_type_ID\":AutoNumring.trim(),\r\n\r\n        \"audit_user\":emp_mst_login_id.trim(),\r\n        \"wko_mst_create_by\":emp_mst_login_id.trim(),\r\n        \"ast_aud_originator\":emp_mst_empl_id.trim(),\r\n        \"wko_mst_create_date\":get_date,\r\n        \"cnt_mst_numbering\":AutoNumring,\r\n        \r\n    }\r\n\r\n    console.log(JSON.stringify(json_workorder))\r\n\r\n    APIServices.insert_new_workorder(JSON.stringify(json_workorder)).then((responseJson)=>{\r\n        if (responseJson.data.status === 'SUCCESS') { \r\n            \r\n            Swal.close();\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: responseJson.data.status,\r\n                text: responseJson.data.message,\r\n                \r\n              })\r\n\r\n        }else{\r\n            Swal.close();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n              })\r\n\r\n        }\r\n        \r\n    }).catch((e) => {\r\n        Swal.close();\r\n      \r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops get_WorkOrder_select...',\r\n          text: e,          \r\n        })\r\n      });\r\n\r\n  }\r\n\r\n  \r\n    const Update_WorkOrder = () => {\r\n\r\n    //Swal.fire({  title: 'Loading.... !',allowOutsideClick: false})\r\n    //Swal.showLoading();\r\n\r\n\r\n    let get_date = moment().utcOffset('+08:00').format('yyyy-MM-DD HH:mm:ss');\r\n\r\n    let site_ID = localStorage.getItem(\"site_ID\");\r\n    let emp_mst_login_id = localStorage.getItem(\"emp_mst_login_id\");\r\n    let emp_mst_empl_id = localStorage.getItem(\"emp_mst_empl_id\");\r\n    \r\n    let RowID = localStorage.getItem(\"RowID\");\r\n    console.log('get RowID here...',location.state.RowID);\r\n\r\n\r\n\r\n        //Select WorkOrderNo\r\n        console.log(\"WorkOrderNo: \", WorkOrderNo)\r\n\r\n        //Select Asset No\r\n        let Asset_No, setAsset_No;\r\n        if(selected_Asset_No == '' || selected_Asset_No == null){\r\n\r\n            setAsset_No=''\r\n        }else{\r\n\r\n            Asset_No = selected_Asset_No.label.split(\":\")\r\n            setAsset_No = Asset_No[0];\r\n            console.log(\"Asset_No \", Asset_No[0])\r\n        }\r\n\r\n        //Select Status\r\n        let Status, setStatus;\r\n        if(selected_Status.label == '' || selected_Status.label == null){\r\n\r\n            setStatus=''\r\n        }else{\r\n\r\n            Status = selected_Status.label.split(\":\")\r\n            setStatus = Status[0];\r\n            console.log(\"Status: \", Status[0])\r\n        }\r\n\r\n        //Select Asset Status\r\n        let Asset_Status, setAsset_Status;\r\n        if(selected_Asset_Status.label == '' || selected_Asset_Status.label == null){\r\n\r\n            setAsset_Status=''\r\n        }else{\r\n\r\n            Asset_Status = selected_Asset_Status.label.split(\":\")\r\n            setAsset_Status = Asset_Status[0];\r\n            console.log(\"Asset_Status \", Asset_Status[0])\r\n        }\r\n\r\n        //Select Plan Priority\r\n        let Plan_Priority, setPlan_Priority;\r\n        if(selected_Plan_Priority.label == '' || selected_Plan_Priority.label == null){\r\n\r\n            setPlan_Priority=''\r\n        }else{\r\n\r\n            Plan_Priority = selected_Plan_Priority.label.split(\":\")\r\n            setPlan_Priority = Plan_Priority[0];\r\n            console.log(\"Plan_Priority \", Plan_Priority[0])\r\n        }\r\n\r\n        //Select Asset Group Code\r\n        let Asset_Group_Code, setAsset_Group_Code;\r\n        if(selected_Asset_Group_Code == '' || selected_Asset_Group_Code == null){\r\n\r\n            setAsset_Group_Code=''\r\n        }else{\r\n\r\n            Asset_Group_Code = selected_Asset_Group_Code.label.split(\":\")\r\n            setAsset_Group_Code = Asset_Group_Code[0];\r\n            console.log(\"Asset_Group_Code \", Asset_Group_Code[0])\r\n        }\r\n        \r\n        //Select Origination Date\r\n        let date_of_origination = ''\r\n        if (OriginationDate == '' || OriginationDate == null) {\r\n\r\n            date_of_origination = '';\r\n        } else {\r\n\r\n            date_of_origination = Moment(OriginationDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"OD \", date_of_origination);\r\n        }\r\n\r\n        //Select Charge Cost Center\r\n        let Charge_Cost_Center, setCharge_Cost_Center;\r\n        if(selected_Charge_Cost_Center.label == '' || selected_Charge_Cost_Center.label == null){\r\n\r\n            setCharge_Cost_Center=''\r\n        }else{\r\n\r\n            Charge_Cost_Center = selected_Charge_Cost_Center.label.split(\":\")\r\n            setCharge_Cost_Center = Charge_Cost_Center[0];\r\n            console.log(\"Charge_Cost_Center: \", Charge_Cost_Center[0])\r\n        }\r\n\r\n        //Select Due Date\r\n        let date_of_due = ''\r\n        if (DueDate == '' || DueDate == null) {\r\n\r\n            date_of_due = '';\r\n        } else {\r\n\r\n            date_of_due = Moment(DueDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"DD \", date_of_due);\r\n        }\r\n\r\n        //Select Work Area\r\n        let Work_Area, setWork_Area;\r\n        if(selected_Work_Area == '' || selected_Work_Area == null){\r\n\r\n            setWork_Area=''\r\n        }else{\r\n\r\n            Work_Area = selected_Work_Area.label.split(\":\")\r\n            setWork_Area = Work_Area[0];\r\n            console.log(\"Work_Area \", Work_Area[0])\r\n        }\r\n\r\n        //Select Originator\r\n        let Originator, setOriginator;\r\n        if(selected_Originator.label == '' || selected_Originator.label == null){\r\n\r\n            setOriginator=''\r\n        }else{\r\n\r\n            Originator = selected_Originator.label.split(\":\")\r\n            setOriginator = Originator[0];\r\n            console.log(\"Originator \", Originator[0])\r\n        }\r\n\r\n        //Select Asset Level\r\n        let Asset_Level, setAsset_Level;\r\n        if(selected_Asset_Level == '' || selected_Asset_Level == null){\r\n\r\n            setAsset_Level=''\r\n        }else{\r\n\r\n            Asset_Level = selected_Asset_Level.label.split(\":\")\r\n            setAsset_Level = Asset_Level[0];\r\n            console.log(\"Asset_Level \", Asset_Level[0])\r\n        }\r\n\r\n        //Select Phone\r\n        console.log(\"Phone: \", Phone)\r\n        \r\n        //Select Asset Location\r\n        let Asset_Location, setAsset_Location;\r\n        if(selected_Asset_Location == '' || selected_Asset_Location == null){\r\n\r\n            setAsset_Location=''\r\n        }else{\r\n\r\n            Asset_Location = selected_Asset_Location.label.split(\":\")\r\n            setAsset_Location = Asset_Location[0];\r\n            console.log(\"Asset_Location \", Asset_Location[0])\r\n        }\r\n\r\n        //Select Fault Code\r\n        let Fault_Code = selected_Fault_Code.label.split(\":\")\r\n        console.log(\"Fault_Code: \", Fault_Code[0])\r\n\r\n        //Select Description\r\n        console.log(\"Description: \", Description)\r\n\r\n\r\n\r\n        //Select Corrective Action\r\n        console.log(\"CorrectiveAction: \", CorrectiveAction)\r\n\r\n        //Select Project ID\r\n        let Project_ID, setProject_ID;\r\n\r\n        console.log('Project_ID', selected_Project_ID.label)\r\n        if(selected_Project_ID.label == '' || selected_Project_ID.label == null){\r\n\r\n            setProject_ID=''\r\n        }else{\r\n\r\n            Project_ID = selected_Project_ID.label.split(\":\")\r\n            setProject_ID = Project_ID[0];\r\n            console.log(\"Project_ID \", Project_ID[0])\r\n        }\r\n\r\n        //Select Original Periority\r\n        let Original_Periority, setOriginal_Periority;\r\n        if(selected_Original_Periority == '' || selected_Original_Periority == null){\r\n\r\n            setOriginal_Periority =''\r\n        }else{\r\n\r\n            Original_Periority = selected_Original_Periority.label.split(\":\")\r\n            setOriginal_Periority = Original_Periority[0];\r\n            console.log(\"Original_Periority \", Original_Periority[0])\r\n        }\r\n\r\n        //Select Cause Code\r\n        let Cause_Code, setCause_Code;\r\n        if(selected_Cause_Code.label == '' || selected_Cause_Code.label == null){\r\n\r\n            setCause_Code=''\r\n        }else{\r\n\r\n            Cause_Code = selected_Cause_Code.label.split(\":\")\r\n            setCause_Code = Cause_Code[0];\r\n            console.log(\"Cause_Code \", Cause_Code[0])\r\n        }\r\n\r\n        //Select Schedule Date\r\n        let date_of_schedule = ''\r\n        if (ScheduleDate == '' || ScheduleDate == null) {\r\n\r\n            date_of_schedule = '';\r\n        } else {\r\n\r\n            date_of_schedule = Moment(ScheduleDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SD \", date_of_schedule);\r\n        }\r\n\r\n        //Select Action Code\r\n        let Action_Code, setAction_Code;\r\n        if(selected_Action_Code.label == '' || selected_Action_Code.label == null){\r\n\r\n            setAction_Code=''\r\n        }else{\r\n\r\n            Action_Code = selected_Action_Code.label.split(\":\")\r\n            setAction_Code = Action_Code[0];\r\n            console.log(\"Action_Code \", Action_Code[0])\r\n        }\r\n\r\n        //Select Exception Date\r\n        let date_of_exception = ''\r\n        if (ExceptionDate == '' || ExceptionDate == null) {\r\n\r\n            date_of_exception = '';\r\n        } else {\r\n\r\n            date_of_exception = Moment(ExceptionDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"EB \", date_of_exception);\r\n        }\r\n\r\n        //Select Delay Code\r\n        let Delay_Code, setDelay_Code;\r\n        if(selected_Delay_Code.label == '' || selected_Delay_Code.label == null){\r\n\r\n            setDelay_Code=''\r\n        }else{\r\n\r\n            Delay_Code = selected_Delay_Code.label.split(\":\")\r\n            setDelay_Code = Delay_Code[0];\r\n            console.log(\"Delay_Code \", Delay_Code[0])\r\n        }\r\n\r\n        //Select Status Change Date\r\n        let date_of_status_change = ''\r\n        if (StatusChangeDate == '' || StatusChangeDate == null) {\r\n\r\n            date_of_status_change = '';\r\n        } else {\r\n\r\n            date_of_status_change = Moment(StatusChangeDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"SCB \", date_of_status_change);\r\n        }\r\n\r\n        //Select Work Type\r\n        let Work_Type, setWork_Type;\r\n        if(selected_Work_Type.label == '' || selected_Work_Type.label == null){\r\n\r\n            setWork_Type =''\r\n        }else{\r\n\r\n            Work_Type = selected_Work_Type.label.split(\":\")\r\n            setWork_Type = Work_Type[0];\r\n            console.log(\"Work_Type \", Work_Type[0])\r\n        }\r\n\r\n         //Select Completion Date\r\n         let date_of_completion = ''\r\n         if (CompletionDate == '' || CompletionDate == null) {\r\n \r\n            date_of_completion = '';\r\n         } else {\r\n \r\n            date_of_completion = Moment(CompletionDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n             console.log(\"CD \", date_of_completion);\r\n         }\r\n\r\n        //Select Work Class\r\n        let Work_Class, setWork_Class;\r\n        if(selected_Work_Class.label == '' || selected_Work_Class.label == null){\r\n\r\n            setWork_Class=''\r\n        }else{\r\n\r\n            Work_Class = selected_Work_Class.label.split(\":\")\r\n            setWork_Class = Work_Class[0];\r\n            console.log(\"Work_Class \", Work_Class[0])\r\n        }\r\n\r\n        //Select Close Date\r\n        let date_of_close = ''\r\n        if (CloseDate == '' || CloseDate == null) {\r\n\r\n            date_of_close = '';\r\n        } else {\r\n\r\n            date_of_close = Moment(CloseDate).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"CLOD \", date_of_close);\r\n        }\r\n\r\n        //Select Work Group\r\n        let Work_Group, setWork_Group;\r\n        if(selected_Work_Group.label == '' || selected_Work_Group.label == null){\r\n\r\n            setWork_Group =''\r\n        }else{\r\n\r\n            Work_Group = selected_Work_Group.label.split(\":\")\r\n            setWork_Group = Work_Group[0];\r\n            console.log(\"Work_Group \", Work_Group[0])\r\n        }\r\n\r\n        //Select Supervisor ID\r\n        let Supervisor_ID, setSupervisor_ID;\r\n        if(selected_Supervisor_ID.label == '' || selected_Supervisor_ID.label == null){\r\n\r\n            setSupervisor_ID=''\r\n        }else{\r\n\r\n            Supervisor_ID = selected_Supervisor_ID.label.split(\":\")\r\n            setSupervisor_ID = Supervisor_ID[0];\r\n            console.log(\"Supervisor_ID \", Supervisor_ID[0])\r\n        }\r\n\r\n        //Select Planner\r\n        let Planner, setPlanner;\r\n        if(selected_Planner.label == '' || selected_Planner.label == null){\r\n\r\n            setPlanner=''\r\n        }else{\r\n\r\n            Planner = selected_Planner.label.split(\":\")\r\n            setPlanner = Planner[0];\r\n            console.log(\"Planner \", Planner[0])\r\n        }\r\n\r\n        //Select Approver\r\n        let Approver, setApprover;\r\n        if(selected_Approver.label == '' || selected_Approver.label == null){\r\n\r\n            setApprover=''\r\n        }else{\r\n\r\n            Approver = selected_Approver.label.split(\":\")\r\n            setApprover = Approver[0];\r\n            console.log(\"Approver \", Approver[0])\r\n        }\r\n\r\n        //Select Assign To\r\n        let Assign_To, setAssign_To;\r\n        if(selected_Assign_To.label == '' || selected_Assign_To.label == null){\r\n\r\n            setAssign_To=''\r\n        }else{\r\n\r\n            Assign_To = selected_Assign_To.label.split(\":\")\r\n            setAssign_To = Assign_To[0];\r\n            console.log(\"Assign_To \", Assign_To[0])\r\n        }\r\n\r\n        //Select Permanent ID\r\n        console.log(\"Perm_ID: \", Permanent_ID)\r\n\r\n\r\n        //Select WKO Customer Code\r\n        let Customer_Code, setCustomer_Code;\r\n        if(selected_Customer_Code.label == '' || selected_Customer_Code.label == null){\r\n\r\n            setCustomer_Code=''\r\n        }else{\r\n\r\n            Customer_Code = selected_Customer_Code.label.split(\":\")\r\n            setCustomer_Code = Customer_Code[0];\r\n            console.log(\"Customer_Code \", Customer_Code[0])\r\n        }\r\n\r\n        //Select WKO Labor Account\r\n        let Labor_Account, setLabor_Account;\r\n        if(selected_Labor_Account.label == '' || selected_Labor_Account.label == null){\r\n\r\n            setLabor_Account=''\r\n        }else{\r\n\r\n            Labor_Account = selected_Labor_Account.label.split(\":\")\r\n            setLabor_Account = Labor_Account[0];\r\n            console.log(\"Labor_Account \", Labor_Account[0])\r\n        }\r\n\r\n        //Select WKO Material Account\r\n        let Material_Account, setMaterial_Account;\r\n        if(selected_Material_Account.label == '' || selected_Material_Account.label == null){\r\n\r\n            setMaterial_Account=''\r\n        }else{\r\n\r\n            Material_Account = selected_Material_Account.label.split(\":\")\r\n            setMaterial_Account = Material_Account[0];\r\n            console.log(\"Material_Account \", Material_Account[0])\r\n        }\r\n\r\n        //Select WKO Credit Cost Center\r\n        let Credit_Cost_Center, setCredit_Cost_Center;\r\n        if(selected_Credit_Cost_Center.label == '' || selected_Credit_Cost_Center.label == null){\r\n\r\n            setCredit_Cost_Center=''\r\n        }else{\r\n\r\n            Credit_Cost_Center = selected_Credit_Cost_Center.label.split(\":\")\r\n            setCredit_Cost_Center = Credit_Cost_Center[0];\r\n            console.log(\"Credit_Cost_Center \", Credit_Cost_Center[0])\r\n        }\r\n\r\n        //Select WKO Contract Account\r\n        let Contract_Account, setContract_Account;\r\n        if(selected_Contract_Account.label == '' || selected_Contract_Account.label == null){\r\n\r\n            setContract_Account=''\r\n        }else{\r\n\r\n            Contract_Account = selected_Contract_Account.label.split(\":\")\r\n            setContract_Account = Contract_Account[0];\r\n            console.log(\"Contract_Account \", Contract_Account[0])\r\n        }\r\n\r\n        //Select WKO Miscellaneous Account\r\n        let Miscellaneous_Account, setMiscellaneous_Account;\r\n        if(selected_Miscellaneous_Account.label == '' || selected_Miscellaneous_Account.label == null){\r\n\r\n            setMiscellaneous_Account=''\r\n        }else{\r\n\r\n            Miscellaneous_Account = selected_Miscellaneous_Account.label.split(\":\")\r\n            setMiscellaneous_Account = Miscellaneous_Account[0];\r\n            console.log(\"Miscellaneous_Account \", Miscellaneous_Account[0])\r\n        }\r\n\r\n\r\n        //Select Date 1\r\n        let date_1 = ''\r\n        if (UDFDate_1 == '' || UDFDate_1 == null) {\r\n\r\n            date_1 = '';\r\n        } else {\r\n\r\n            date_1 = Moment(UDFDate_1).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date1 \", date_1);\r\n        }\r\n\r\n        //Select Date 2\r\n        let date_2 = ''\r\n        if (UDFDate_2 == '' || UDFDate_2 == null) {\r\n\r\n            date_2 = '';\r\n        } else {\r\n\r\n            date_2 = Moment(UDFDate_2).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date2 \", date_2);\r\n        }\r\n\r\n        //Select Date 3\r\n        let date_3 = ''\r\n        if (UDFDate_3 == '' || UDFDate_3 == null) {\r\n\r\n            date_3 = '';\r\n        } else {\r\n\r\n            date_3 = Moment(UDFDate_3).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date3 \", date_3);\r\n        }\r\n\r\n        //Select Date 4\r\n        let date_4 = ''\r\n        if (UDFDate_4 == '' || UDFDate_4 == null) {\r\n\r\n            date_4 = '';\r\n        } else {\r\n\r\n            date_4 = Moment(UDFDate_4).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date4 \", date_4);\r\n        }\r\n\r\n        //Select Date 5\r\n        let date_5 = ''\r\n        if (UDFDate_5 == '' || UDFDate_5 == null) {\r\n\r\n            date_5 = '';\r\n        } else {\r\n\r\n            date_5 = Moment(UDFDate_5).format('yyyy-MM-DD HH:mm:ss').trim();\r\n            console.log(\"Date5 \", date_5);\r\n        }\r\n\r\n\r\n\r\n    var json_workorder ={\r\n\r\n\r\n        \"site_cd\": site_ID,\r\n      \r\n        \"wko_mst_wo_no\": WorkOrderNo.trim(),\r\n        \"wko_mst_assetno\":setAsset_No.trim(),\r\n        \"wko_mst_status\":setStatus.trim(),\r\n        \"wko_mst_asset_status\":setAsset_Status.trim(),\r\n        \"wko_mst_plan_priority\":setPlan_Priority.trim(),\r\n        \"wko_mst_asset_group_code\":setAsset_Group_Code.trim(),\r\n        \"wko_mst_org_date\":date_of_origination,\r\n        \"wko_mst_chg_costcenter\":Charge_Cost_Center[0].trim(),\r\n        \"wko_mst_due_date\":date_of_due,\r\n        \"wko_mst_work_area\":setWork_Area.trim(),\r\n        \"wko_mst_originator\":setOriginator.trim(),\r\n        \"wko_mst_asset_level\":setAsset_Level.trim(),\r\n        \"wko_mst_phone\":Phone.trim(),\r\n        \"wko_mst_asset_location\":setAsset_Location.trim(),\r\n        \"wko_mst_flt_code\":Fault_Code[0].trim(),\r\n        \"wko_mst_descs\":Description.trim(),\r\n       \r\n\r\n        \"wko_det_corr_action\":CorrectiveAction,\r\n        \"wko_mst_project_id\":setProject_ID.trim(),\r\n        \"wko_mst_orig_priority\":Original_Periority[0].trim(),\r\n        \"wko_det_cause_code\":setCause_Code.trim(),\r\n        \"wko_det_sched_date\":date_of_schedule,\r\n        \"wko_det_act_code\":setAction_Code.trim(),\r\n        \"wko_det_exc_date\":date_of_exception,\r\n        \"wko_det_delay_cd\":setDelay_Code.trim(),\r\n        \"wko_det_sc_date\":date_of_status_change,\r\n        \"wko_det_work_type\":Work_Type[0].trim(),\r\n        \"wko_det_cmpl_date\":date_of_completion,\r\n        \"wko_det_work_class\":setWork_Class.trim(),\r\n        \"wko_det_clo_date\":date_of_close,\r\n        \"wko_det_work_grp\":Work_Group[0].trim(),\r\n        \"wko_det_supv_id\":setSupervisor_ID.trim(),\r\n        \"wko_det_planner\":setPlanner.trim(),\r\n        \"wko_det_approver\":setApprover.trim(),\r\n        \"wko_det_assign_to\":setAssign_To.trim(),\r\n        \"wko_det_perm_id\":Permanent_ID,\r\n        \"wko_det_temp_asset\":CheckBox_Temporary_Asset,\r\n        \"wko_det_approved\":CheckBox_Approved,\r\n        \"wko_det_safety\":CheckBox_Safety,\r\n\r\n\r\n        \"wko_det_customer_cd\":setCustomer_Code.trim(),\r\n        \"wko_det_laccount\":setLabor_Account.trim(),\r\n        \"wko_det_maccount\":setMaterial_Account.trim(),\r\n        \"wko_det_crd_costcenter\":setCredit_Cost_Center.trim(),\r\n        \"wko_det_caccount\":setContract_Account.trim(),\r\n        \"wko_det_saccount\":setMiscellaneous_Account.trim(),            \r\n\r\n\r\n        \"wko_det_note1\":UDFNote1,\r\n        \"wko_det_varchar1\":UDFText_1,\r\n        \"wko_det_varchar2\":UDFText_2,\r\n        \"wko_det_varchar3\":UDFText_3,\r\n        \"wko_det_varchar4\":UDFText_4,\r\n        \"wko_det_varchar5\":UDFText_5,\r\n        \"wko_det_varchar6\":UDFText_6,\r\n        \"wko_det_varchar7\":UDFText_7,\r\n        \"wko_det_varchar8\":UDFText_8,\r\n        \"wko_det_varchar9\":UDFText_9,\r\n        \"wko_det_varchar10\":UDFText_10,\r\n\r\n        \"wko_det_numeric1\":UDFNumber_1,\r\n        \"wko_det_numeric2\":UDFNumber_2,\r\n        \"wko_det_numeric3\":UDFNumber_3,\r\n        \"wko_det_numeric4\":UDFNumber_4,\r\n        \"wko_det_numeric5\":UDFNumber_5,\r\n       \r\n        \"wko_det_datetime1\":date_1,\r\n        \"wko_det_datetime2\":date_2,\r\n        \"wko_det_datetime3\":date_3,\r\n        \"wko_det_datetime4\":date_4,\r\n        \"wko_det_datetime5\":date_5,\r\n       \r\n\r\n        \"asset_type_ID\":AutoNumring.trim(),\r\n\r\n        \"audit_user\":emp_mst_login_id.trim(),\r\n        \"wko_mst_create_by\":emp_mst_login_id.trim(),\r\n        \"ast_aud_originator\":emp_mst_empl_id.trim(),\r\n        \"wko_mst_create_date\":get_date,\r\n     \r\n        \r\n        \"RowID\":location.state.RowID,\r\n\r\n        \r\n    }\r\n\r\n    console.log(\"Update : \"+JSON.stringify(json_workorder))\r\n\r\n    APIServices.update_workorder(JSON.stringify(json_workorder)).then((responseJson)=>{\r\n        if (responseJson.data.status === 'SUCCESS') { \r\n            Swal.close();\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: responseJson.data.status,\r\n                text: responseJson.data.message,\r\n                \r\n              })\r\n\r\n        }else{\r\n            Swal.close();\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: responseJson.data,\r\n                \r\n              })\r\n\r\n        }\r\n    }).catch((e) => {\r\n        Swal.close();\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops get_WorkOrder_select...',\r\n          text: e,          \r\n        })\r\n      });\r\n\r\n\r\n  }\r\n\r\n  \r\n    const resetData = () => {\r\n\r\n        setSelected_Asset_No(0);\r\n        setSelected_Status(0);\r\n        setSelected_Asset_Status(0);\r\n        setSelected_Plan_Priority(0);\r\n        setSelected_Asset_Group_Code(0);\r\n    \r\n        setSelected_Charge_Cost_Center(0);\r\n\r\n        setSelected_Work_Area(0);\r\n        setSelected_Originator(0);\r\n        setSelected_Asset_Level(0);\r\n        setPhone('');\r\n        setSelected_Asset_Location(0);\r\n        setSelected_Fault_Code(0);\r\n        setDescription('');\r\n\r\n        setCorrectiveAction('');\r\n        setSelected_Project_ID(0);\r\n        setSelected_Original_Periority(0);\r\n        setSelected_Cause_Code(0);\r\n        setScheduleDate('');\r\n        setSelected_Action_Code(0);\r\n        setExceptionDate('');\r\n        setSelected_Delay_Code(0);\r\n        setStatusChangeDate('');\r\n        setSelected_Work_Type(0);\r\n        setCompletionDate('');\r\n        setSelected_Work_Class(0);\r\n        setCloseDate('');\r\n        setSelected_Work_Group(0);\r\n        setSelected_Supervisor_ID(0);\r\n        setTemporary_Asset('');\r\n        setSelected_Planner(0);\r\n        setApproved('');\r\n        setSelected_Approver(0);\r\n        setSelected_Assign_To(0);\r\n        setSafety('');\r\n        setPermanent_ID('');\r\n\r\n        setSelected_Customer_Code(0);\r\n        setSelected_Labor_Account(0);\r\n        setSelected_Material_Account(0);\r\n        setSelected_Credit_Cost_Center(0);\r\n        setSelected_Contract_Account(0);\r\n        setSelected_Miscellaneous_Account(0);\r\n        \r\n        setUDFNote1('');\r\n        setUDFText_1('');\r\n        setUDFText_2('');\r\n        setUDFText_3('');\r\n        setUDFText_4('');\r\n        setUDFText_5('');\r\n        setUDFText_6('');\r\n        setUDFText_7('');\r\n        setUDFText_8('');\r\n        setUDFText_9('');\r\n        setUDFText_10('');\r\n        setUDFNumber_1('');\r\n        setUDFNumber_2('');\r\n        setUDFNumber_3('');\r\n        setUDFNumber_4('');\r\n        setUDFNumber_5('');\r\n        setUDFDate_1('');\r\n        setUDFDate_2('');\r\n        setUDFDate_3('');\r\n        setUDFDate_4('');\r\n        setUDFDate_5('');\r\n\r\n        setButton_save('Save');\r\n    }\r\n  \r\n\r\n    const handleOnChangeTemporaryAsset = () => {\r\n    setTemporary_Asset(!Temporary_Asset);\r\n    \r\n    if(!Temporary_Asset){\r\n        console.log('1')\r\n        setCheckBox_Temporary_Asset('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_Temporary_Asset('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeApproved = () => {\r\n    setApproved(!Approved);\r\n\r\n    if(!Approved){\r\n        console.log('1')\r\n        setCheckBox_Approved('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_Approved('0')\r\n    }\r\n    }\r\n\r\n    const handleOnChangeSafety = () => {\r\n    setSafety(!Safety);\r\n\r\n    if(!Safety){\r\n        console.log('1')\r\n        setCheckBox_Safety('1')\r\n    }else{\r\n        console.log('0')\r\n        setCheckBox_Safety('0')\r\n    }\r\n    }\r\n\r\n\r\n    const get_assetmaster_select = (selected_asset)=>{\r\n\r\n        let site_ID = localStorage.getItem(\"site_ID\");\r\n        \r\n        var json ={\r\n\r\n            \"site_cd\": site_ID,\r\n            \"ast_mst_asset_no\": selected_asset,\r\n            \"asset_shortdesc\":\"\",\r\n            \"cost_center\":\"\",\r\n            \"asset_status\":\"\",\r\n            \"asset_type\":\"\",\r\n            \"asset_grpcode\":\"\",\r\n            \"work_area\":\"\",\r\n            \"asset_locn\":\"\",\r\n            \"asset_code\":\"\",\r\n            \"ast_lvl\":\"\",\r\n            \"ast_sts_typ_cd\":\"\",\r\n            \"createby\":\"\",\r\n            \"service_type\":\"\",\r\n            \"block\":\"\",\r\n            \"floor\":\"\"\r\n        }\r\n\r\n        console.log('select Asset',json)\r\n        \r\n        APIServices.get_assetmaster_select(JSON.stringify(json)).then((responseJson)=>{   \r\n            \r\n            console.log('select Asset',responseJson)\r\n\r\n            if (responseJson.data.status === 'SUCCESS') {             \r\n               \r\n               for (var index in responseJson.data.data) {\r\n\r\n                setRowID(responseJson.data.data[index].RowID)\r\n                console.log('select Asset',responseJson.data.data[index].ast_mst_asset_no )\r\n                \r\n                setSelected_Asset_No( {label:responseJson.data.data[index].ast_mst_asset_no} )\r\n                setSelected_Asset_Status({label:responseJson.data.data[index].ast_mst_asset_status } )\r\n                setSelected_Asset_Group_Code( responseJson.data.data[index].ast_mst_asset_grpcode+\" : \"+ responseJson.data.data[index]. ast_grp_desc )\r\n                setSelected_Charge_Cost_Center( {label:responseJson.data.data[index].ast_mst_cost_center +\" : \"+ responseJson.data.data[index].descs})\r\n                setSelected_Work_Area( {label:responseJson.data.data[index].ast_mst_work_area +\" : \"+ responseJson.data.data[index].mst_war_desc} )\r\n                setSelected_Asset_Level({ label:responseJson.data.data[index].ast_mst_ast_lvl +\" : \"+ responseJson.data.data[index].ast_lvl_desc})\r\n                setSelected_Asset_Location( {label:responseJson.data.data[index].ast_mst_asset_locn +\" : \"+ responseJson.data.data[index].ast_loc_desc})\r\n                setSelected_Work_Group( {label:responseJson.data.data[index].ast_mst_wrk_grp+\" : \"+ responseJson.data.data[index].wrk_grp_desc })\r\n\r\n              }\r\n\r\n\r\n              Swal.close();\r\n\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: responseJson.data,\r\n                    \r\n                  })\r\n            }\r\n\r\n        }).catch((e) => {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops get_assetmaster_select...',\r\n              text: e,          \r\n            })\r\n          });\r\n\r\n    }\r\n\r\n\r\n    const handleSelectedAssetNo = (selectedOption) => {\r\n        console.log(selectedOption)\r\n\r\n        get_assetmaster_select(selectedOption.value);\r\n\r\n        //setSelected_Asset_No(selectedOption);\r\n        setSelected_Status(Status[0]);\r\n        setSelected_Asset_Status(Asset_Status[0]);\r\n        setSelected_Asset_Group_Code(Asset_Group_Code[0]);\r\n        setSelected_Charge_Cost_Center(Charge_Cost_Center[0]);\r\n        setSelected_Work_Area(Work_Area[0]);\r\n        setSelected_Asset_Level(Asset_Level[0]);\r\n        setSelected_Asset_Location(Asset_Location[0]);\r\n    }\r\n\r\n    const handleSelectedFaultCode = (selectedOption) => {\r\n        setSelected_Fault_Code(selectedOption);\r\n\r\n        console.log(selectedOption.value);\r\n        setDescription(selectedOption.value);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (   \r\n\r\n        <div>\r\n            <div className=\"page-header\">\r\n            <h3 className=\"page-title\">Work Order Master</h3>   \r\n\r\n            <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb\">\r\n                    <div className=\"template-demo\">\r\n\r\n                        <button type=\"button\" className=\"btn btn-success btn-icon-text\" onClick={onClickChange}>\r\n                            <i className=\"mdi mdi-file-check btn-icon-prepend\" ></i>  {Button_save}\r\n                        </button>\r\n\r\n                        <button type=\"button\" className=\"btn btn-danger btn-icon-text\">\r\n                            <i className=\"mdi mdi-close-circle-outline btn-icon-prepend\"></i> Cancel \r\n                        </button>\r\n                    \r\n                    </div>\r\n                </ol>\r\n            </nav>       \r\n        \r\n        </div> \r\n\r\n    <div className=\"col-12 grid-margin\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\"> \r\n            <form className=\"form-sample\" validated={validated}>  \r\n\r\n                    \r\n                    \r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-10\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_WorkOrderNo\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Work Order No:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                            <Form.Control style={{ fontSize: \"13px\" }} type=\"text\" value={WorkOrderNo} onChange={(e) => setWorkOrderNo(e.target.value)}  disabled={WorkOrderNo_disabled}/>\r\n                                        </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">                                \r\n                                <Form.Group className=\"row\" controlId=\"validation_Asset_No\">\r\n                                    <Form.Label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Asset No:</Form.Label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Asset_No}\r\n                                            value={selected_Asset_No}\r\n                                            onChange={handleSelectedAssetNo} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Status\">                                  \r\n                                    <Form.Label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Status:</Form.Label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Status}\r\n                                            value={selected_Status}\r\n                                            onChange={setSelected_Status}// using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Asset_Status\"> \r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Asset Status:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Asset_Status}\r\n                                            value={selected_Asset_Status}\r\n                                            onChange={setSelected_Asset_Status} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>  \r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Plan_Priority\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Plan Periority:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Plan_Priority}\r\n                                            value={selected_Plan_Priority}\r\n                                            onChange={setSelected_Plan_Priority} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>                        \r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Asset_Group_Code\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Asset Group Code:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Asset_Group_Code}\r\n                                            value={selected_Asset_Group_Code}\r\n                                            onChange={setSelected_Asset_Group_Code} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>  \r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_OriginationDate\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Origination Date:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                                <Form.Control\r\n                                                type=\"datetime-local\"  \r\n                                                value={OriginationDate} \r\n                                                onChange={(date) => setOriginationDate(Moment().utcOffset('+08:00').format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                style={{ fontSize: \"13px\" }}\r\n                                                /> \r\n                                            </div>\r\n                                </Form.Group>\r\n                            </div> \r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Charge_Cost_Center\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Charge Cost Center:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Charge_Cost_Center}\r\n                                            value={selected_Charge_Cost_Center}\r\n                                            onChange={setSelected_Charge_Cost_Center} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">                         \r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_DueDate\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Due Date:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                            type=\"datetime-local\"\r\n                                            value ={DueDate} \r\n                                            onChange={date => setDueDate(Moment().utcOffset('+08:00').format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            />\r\n                                        </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Work_Area\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Work Area:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Work_Area}\r\n                                            value={selected_Work_Area}\r\n                                            onChange={setSelected_Work_Area} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>  \r\n\r\n                        <div className=\"row\">                 \r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Originator\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Originator:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Originator}\r\n                                            value={selected_Originator}\r\n                                            onChange={setSelected_Originator} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>  \r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Asset_Level\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Asset Level:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Asset_Level}\r\n                                            value={selected_Asset_Level}\r\n                                            onChange={setSelected_Asset_Level} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>  \r\n\r\n                        <div className=\"row\">                        \r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Phone\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Phone:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control style={{ fontSize: \"13px\" }} type=\"number\" value={Phone} onChange={(e) => setPhone(e.target.value)}/>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Asset_Location\">\r\n                                    <label className=\"col-sm-4 col-form-label\">Asset Location:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Asset_Location}\r\n                                            value={selected_Asset_Location}\r\n                                            onChange={setSelected_Asset_Location} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>  \r\n\r\n                        <div className=\"row\">             \r\n                            <div className=\"col-md-6\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Fault_Code\">\r\n                                    <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Fault Code:</label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Select  \r\n                                            isClearable={true}  \r\n                                            options={Fault_Code}\r\n                                            value={selected_Fault_Code}\r\n                                            onChange={handleSelectedFaultCode} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                        />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>  \r\n\r\n                            <div className=\"col-md-3\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_CreatedBy\">\r\n                                    <label className=\"col-sm-6 col-form-label\"><span style={{color: \"blue\"}} class=\"required-asterisk\"> Created By: </span></label>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_CreatedDate\">\r\n                                    <label className=\"col-sm-6 col-form-label\"><span style={{color: \"blue\"}} class=\"required-asterisk\"> Created Date: </span></label>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>  \r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <Form.Group className=\"row\" controlId=\"validation_Description\">\r\n                                    <label className=\"col-sm-2 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Description:</label>\r\n                                    <div className=\"col-sm-10\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        as=\"textarea\" \r\n                                        rows={12} \r\n                                        value={Description}\r\n                                        onChange={(e) => {\r\n                                            console.log(e.target.value)\r\n                                            setDescription(e.target.value);\r\n                                          }}\r\n                                    />\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>        \r\n\r\n                    </div>\r\n\r\n                {/* ************************************* img ******************************************* */}\r\n\r\n                    <div className=\"col-md-2\">\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <AliceCarousel \r\n                                autoPlay \r\n                                autoPlayInterval=\"3000\"  \r\n                                animationDuration={1000}\r\n                                animationType=\"fadeout\"\r\n                                infinite\r\n                                touchTracking={false}\r\n                                disableDotsControls\r\n                                >\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image1.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image2.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image3.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image4.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image5.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image6.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image7.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image8.jpg\")} className=\"sliderimg\" alt=\"\"/>                                    \r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image9.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image10.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image11.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                <img src={require(\"../../assets/images/product_images_2/thumb_image12.jpg\")} className=\"sliderimg\" alt=\"\"/>\r\n                                \r\n                                </AliceCarousel>\r\n                                \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                </div>  \r\n\r\n                <section id=\"tab-menus\">\r\n\r\n                    <Tabs defaultActiveKey=\"Details\" id=\"uncontrolled-tab-example\" className=\"mb-4\">\r\n\r\n\r\n                        {/* ************************************* Details **************************************** */}\r\n\r\n                        <Tab eventKey=\"Details\" title=\"Details\" class=\"nav-link active\">\r\n                            \r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-2 col-form-label\">Corrective Action:</label>\r\n                                                <div className=\"col-sm-10\">\r\n                                                <Form.Control \r\n                                                    style={{ fontSize: \"13px\" }}\r\n                                                    as=\"textarea\" \r\n                                                    rows={12} \r\n                                                    value={CorrectiveAction}\r\n                                                    onChange={(e) => setCorrectiveAction(e.target.value)}\r\n                                                />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">                      \r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Project ID:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <Select  \r\n                                                        isClearable={true}  \r\n                                                        options={Project_ID}\r\n                                                        value={selected_Project_ID}\r\n                                                        onChange={setSelected_Project_ID} // using id as it is unique\r\n                                                        required\r\n                                                        styles={{ \r\n                                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                          }}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\" controlId=\"validation_AssetStatus\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Original Periority:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <Select  \r\n                                                        isClearable={true}  \r\n                                                        options={Original_Periority}\r\n                                                        value={selected_Original_Periority}\r\n                                                        onChange={setSelected_Original_Periority} // using id as it is unique\r\n                                                        required\r\n                                                        styles={{ \r\n                                                            control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                            singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                          }}\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>                        \r\n                                        </div>\r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Cause Code:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                   isClearable={true}  \r\n                                                   options={Cause_Code}\r\n                                                   value={selected_Cause_Code}\r\n                                                   onChange={setSelected_Cause_Code} // using id as it is unique\r\n                                                   required\r\n                                                   styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Schedule Date:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Form.Control  \r\n                                                    style={{ fontSize: \"13px\" }}                                          \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={ScheduleDate} \r\n                                                    onChange={(e) => setScheduleDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Action Code:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Action_Code}\r\n                                                    value={selected_Action_Code}\r\n                                                    onChange={setSelected_Action_Code} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Exception Date:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Form.Control       \r\n                                                    style={{ fontSize: \"13px\" }}                                     \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={ExceptionDate} \r\n                                                    onChange={(e) => setExceptionDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n                                    </div>  \r\n\r\n                                    <div className='row'>\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Delay Code:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                     isClearable={true}  \r\n                                                     options={Delay_Code}\r\n                                                     value={selected_Delay_Code}\r\n                                                     onChange={setSelected_Delay_Code} // using id as it is unique\r\n                                                     required\r\n                                                     styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Status Change Date:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Form.Control \r\n                                                    style={{ fontSize: \"13px\" }}                                           \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={StatusChangeDate} \r\n                                                    onChange={(e) => setStatusChangeDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>   \r\n                                    </div>\r\n\r\n                                    <div className='row'>                           \r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Work Type:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Work_Type}\r\n                                                    value={selected_Work_Type}\r\n                                                    onChange={setSelected_Work_Type} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>  \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Completion Date:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Form.Control    \r\n                                                    style={{ fontSize: \"13px\" }}                                        \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={CompletionDate} \r\n                                                    onChange={(e) => setCompletionDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>                                    \r\n                                    </div>\r\n\r\n                                    <div className='row'>\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Work Permit Type:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Work_Class}\r\n                                                    value={selected_Work_Class}\r\n                                                    onChange={setSelected_Work_Class} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>    \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Close Date:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Form.Control     \r\n                                                    style={{ fontSize: \"13px\" }}                                       \r\n                                                    type=\"datetime-local\"  \r\n                                                    value={CloseDate} \r\n                                                    onChange={(e) => setCloseDate(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                                    /> \r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>     \r\n                                    </div>\r\n\r\n                                    <div className='row'>\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\"><span style={{color: \"red\"}} class=\"required-asterisk\">* </span>Work Group:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Work_Group}\r\n                                                    value={selected_Work_Group}\r\n                                                    onChange={setSelected_Work_Group} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">WO Print:</label>\r\n                                                <div className=\"col-sm-8\"></div>\r\n                                            </Form.Group>\r\n                                        </div>                                          \r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Supervisor ID:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Supervisor_ID}\r\n                                                    value={selected_Supervisor_ID}\r\n                                                    onChange={setSelected_Supervisor_ID} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Temporary Asset:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" \r\n                                                    className=\"form-check-input\"\r\n                                                    checked={Temporary_Asset}\r\n                                                    onChange={handleOnChangeTemporaryAsset}\r\n                                                    />\r\n                                                    <i className=\"input-helper\"></i>\r\n                                                </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Planner:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Planner}\r\n                                                    value={selected_Planner}\r\n                                                    onChange={setSelected_Planner} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Approved:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                <label className=\"form-check-label\">\r\n                                                    <input type=\"checkbox\" \r\n                                                    className=\"form-check-input\"\r\n                                                    checked={Approved}\r\n                                                    onChange={handleOnChangeApproved}\r\n                                                    />\r\n                                                    <i className=\"input-helper\"></i>\r\n                                                </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            \r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Approver:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Approver}\r\n                                                    value={selected_Approver}\r\n                                                    onChange={setSelected_Approver} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">WO Open:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                    Y\r\n                                                </div>\r\n                                            </Form.Group>\r\n\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Assign To:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                <Select  \r\n                                                    isClearable={true}  \r\n                                                    options={Assign_To}\r\n                                                    value={selected_Assign_To}\r\n                                                    onChange={setSelected_Assign_To} // using id as it is unique\r\n                                                    required\r\n                                                    styles={{ \r\n                                                        control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                        singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                      }}\r\n                                                />\r\n                                            </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Safety:</label>\r\n                                                <div className=\"col-sm-4 form-check\">\r\n                                                    <label className=\"form-check-label\">\r\n                                                        <input type=\"checkbox\" \r\n                                                        className=\"form-check-input\"\r\n                                                        checked={Safety}\r\n                                                        onChange={handleOnChangeSafety}\r\n                                                        />\r\n                                                        <i className=\"input-helper\"></i>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            \r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Permanent ID:</label>\r\n                                                <div className=\"col-sm-8\">\r\n                                                    <Form.Control style={{ fontSize: \"13px\" }} type=\"text\" value={Permanent_ID} onChange={(e) => setPermanent_ID(e.target.value)}/>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">Parent WO:</label>\r\n                                                <div className=\"col-sm-6\"></div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div>  \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                                <Form.Group className=\"row\">\r\n                                                    <label className=\"col-sm-4 col-form-label\">Work Request No:</label>\r\n                                                    <div className=\"col-sm-8\"></div>\r\n                                                </Form.Group>\r\n                                        </div> \r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">WR Origination Date:</label>\r\n                                                <div className=\"col-sm-6\"></div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Form.Group className=\"row\">\r\n                                                <label className=\"col-sm-4 col-form-label\">WR Due Date:</label>\r\n                                                <div className=\"col-sm-8\"></div>\r\n                                            </Form.Group>\r\n                                        </div> \r\n                                    </div> \r\n                \r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Financial *************************************** */}\r\n\r\n                        <Tab eventKey=\"Financial\" title=\"Financial\" class=\"nav nav-tabs nav-item nav-link active\">\r\n                            \r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Customer Code:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={Customer_Code}\r\n                                                value={selected_Customer_Code}\r\n                                                onChange={setSelected_Customer_Code} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Labor Account:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={Labor_Account}\r\n                                                value={selected_Labor_Account}\r\n                                                onChange={setSelected_Labor_Account} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Material Account:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                            isClearable={true}  \r\n                                            options={Material_Account}\r\n                                            value={selected_Material_Account}\r\n                                            onChange={setSelected_Material_Account} // using id as it is unique\r\n                                            required\r\n                                            styles={{ \r\n                                                control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                              }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Credit Cost Center:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={Credit_Cost_Center}\r\n                                                value={selected_Credit_Cost_Center}\r\n                                                onChange={setSelected_Credit_Cost_Center} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Contract Account:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={Contract_Account}\r\n                                                value={selected_Contract_Account}\r\n                                                onChange={setSelected_Contract_Account} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-6 col-form-label\">\r\n                                        Miscellaneous Account:\r\n                                    </label>\r\n                                    <div className=\"col-sm-6\">\r\n                                            <Select  \r\n                                                isClearable={true}  \r\n                                                options={Miscellaneous_Account}\r\n                                                value={selected_Miscellaneous_Account}\r\n                                                onChange={setSelected_Miscellaneous_Account} // using id as it is unique\r\n                                                required\r\n                                                styles={{ \r\n                                                    control: (styles) => ({ ...styles, fontSize: \"13px\" }), \r\n                                                    singleValue: (styles) => ({ ...styles, fontSize: \"13px\" })\r\n                                                  }}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* UDF ******************************************* */}\r\n\r\n                        <Tab eventKey=\"UDF1\" title=\"UDF1\" class=\"nav-link active\">\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className='col'>\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            Varchar1:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                style={{ fontSize: \"13px\" }}\r\n                                                type=\"text\"\r\n                                                value={UDFText_1}\r\n                                                onChange={(e) => setUDFText_1(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            Varchar2:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_2}\r\n                                                onChange={(e) => setUDFText_2(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            Varchar3:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_3}\r\n                                                onChange={(e) => setUDFText_3(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            Varchar4:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_4}\r\n                                                onChange={(e) => setUDFText_4(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-13\">\r\n                                        <Form.Group className=\"row\">\r\n                                        <label className=\"col-sm-4 col-form-label\">\r\n                                            Varchar5:\r\n                                        </label>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={UDFText_5}\r\n                                                onChange={(e) => setUDFText_5(e.target.value)}\r\n                                                />\r\n                                        </div>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-8\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-2 col-form-label\">\r\n                                            Note1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-10\">\r\n                                        <Form.Control \r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            as=\"textarea\" \r\n                                            rows={26} \r\n                                            value={UDFNote1}\r\n                                            onChange={(e) => setUDFNote1(e.target.value)}\r\n                                        />\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Varchar6:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_6}\r\n                                            onChange={(e) => setUDFText_6(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Numeric1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control  \r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"number\"  \r\n                                            placeholder=\".0000\" \r\n                                            value={UDFNumber_1} \r\n                                            onChange={(e) => setUDFNumber_1(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Date1:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control  \r\n                                        style={{ fontSize: \"13px\" }}                                          \r\n                                        type=\"datetime-local\"  \r\n                                        value={UDFDate_1} \r\n                                        onChange={(e) => setUDFDate_1(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Wko Det Varchar7:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_7}\r\n                                            onChange={(e) => setUDFText_7(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Numeric2:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control\r\n                                        style={{ fontSize: \"13px\" }}  \r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_2} \r\n                                        onChange={(e) => setUDFNumber_2(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Date2:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_2} \r\n                                            onChange={(e) => setUDFDate_2(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Wko Det Varchar8:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_8}\r\n                                            onChange={(e) => setUDFText_8(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Numeric3:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_3} \r\n                                        onChange={(e) => setUDFNumber_3(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Date3:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_3} \r\n                                            onChange={(e) => setUDFDate_3(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Varchar9:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_9}\r\n                                            onChange={(e) => setUDFText_9(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Numeric4:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control  \r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_4} \r\n                                        onChange={(e) => setUDFNumber_4(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Date4:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_4} \r\n                                            onChange={(e) => setUDFDate_4(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Varchar10:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"text\"\r\n                                            value={UDFText_10}\r\n                                            onChange={(e) => setUDFText_10(e.target.value)}\r\n                                            />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Numeric5:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <Form.Control \r\n                                        style={{ fontSize: \"13px\" }} \r\n                                        type=\"number\"  \r\n                                        placeholder=\".0000\" \r\n                                        value={UDFNumber_5} \r\n                                        onChange={(e) => setUDFNumber_5(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-4\">\r\n                                    <Form.Group className=\"row\">\r\n                                    <label className=\"col-sm-4 col-form-label\">\r\n                                        Date5:\r\n                                    </label>\r\n                                    <div className=\"col-sm-8\">\r\n                                        <Form.Control\r\n                                            style={{ fontSize: \"13px\" }}\r\n                                            type=\"datetime-local\"\r\n                                            value={UDFDate_5} \r\n                                            onChange={(e) => setUDFDate_5(Moment(e.target.value).format('YYYY-MM-DDTHH:mm:ss'))} //insert and show date \r\n                                        />\r\n                                    </div>\r\n                                    </Form.Group>\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Material ************************************ */}\r\n\r\n                        <Tab eventKey=\"Material\" title=\"Material\" class=\"nav-link active\">\r\n\r\n                            <WorkOrderMaterial name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Special Order (PR) ************************************ */}\r\n\r\n                        <Tab eventKey=\"Special Order (PR)\" title=\"Special Order (PR)\" class=\"nav-link active\" >\r\n\r\n                            <WorkOrderSpecialOrder name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Outsource Contract (PR) ************************************ */}\r\n\r\n                        <Tab eventKey=\"Outsource Contract (PR)\" title=\"Outsource Contract (PR)\" class=\"nav-link active\">\r\n\r\n                            <WorkOrderOutsourceContract name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Time Card ********************************* */}\r\n\r\n                        <Tab eventKey=\"Time Card\" title=\"Time Card\" class=\"nav-link active\" >\r\n\r\n                            <WorkOrderTimeCard name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                        {/* ************************************* Misc ************************************** */}\r\n\r\n                        <Tab eventKey=\"Misc\" title=\"Misc\" class=\"nav-link active\" >\r\n\r\n                            <WorkOrderMisc name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n                        {/* ************************************* Reference ************************************** */}\r\n\r\n                        <Tab eventKey=\"Reference\" title=\"Reference\" class=\"nav-link active\" >\r\n                            \r\n                            <Form.Group>\r\n                                <label>File upload</label>\r\n                                <div className=\"custom-file\">\r\n                                    <Form.Control type=\"file\" className=\"form-control visibility-hidden\" id=\"customFileLang\" lang=\"es\"/>\r\n                                    <label className=\"custom-file-label\" htmlFor=\"customFileLang\">Upload image</label>\r\n                                </div>\r\n                            </Form.Group> \r\n                        </Tab>\r\n                        \r\n\r\n                        {/* ************************************* Status Audit ************************************** */}\r\n\r\n                        <Tab eventKey=\"Status Audit\" title=\"Status Audit\" class=\"nav-link active\" >\r\n\r\n                            <WorkOrderStatusAudit name={'WorkOrderFrom'} />\r\n\r\n                        </Tab>\r\n\r\n\r\n                    </Tabs>\r\n                    </section>\r\n                    </form>\r\n\r\n\r\n                        {/* ************************************* button ***************************************** */}\r\n\r\n                    <div className=\"page-header\">\r\n                    <h3 className=\"page-title\"></h3>\r\n                    <nav aria-label=\"breadcrumb\">\r\n                        <ol className=\"breadcrumb\">\r\n                        <div className=\"template-demo\">\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success btn-icon-text\"\r\n                            onClick={onClickChange}\r\n                            >\r\n                            <i className=\"mdi mdi-file-check btn-icon-prepend\"></i>{\" \"}\r\n                            {Button_save}\r\n                            </button>\r\n\r\n                            <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger btn-icon-text\"\r\n                            >\r\n                            <i className=\"mdi mdi-close-circle-outline btn-icon-prepend\"></i>{\" \"}\r\n                            Cancel\r\n                            </button>\r\n                        </div>\r\n                        </ol>\r\n                    </nav>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkOrderFrom;\r\n"],"names":["useState","Columns","setColumns","Data","setData","show","setShow","handleClose","StockNo","setStockNo","selected_StockNo","setSelected_StockNo","StockLocation","setStockLocation","selected_StockLocation","setSelected_StockLocation","Description","setDescription","ChargeCostCenter","setChargeCostCenter","selected_ChargeCostCenter","setSelected_ChargeCostCenter","ChargeAccount","setChargeAccount","selected_ChargeAccount","setSelected_ChargeAccount","QtyNeeded","setQtyNeeded","location","useLocation","useEffect","site_ID","APIServices","then","responseJson","console","log","data","status","header","result","Swal","icon","title","text","message","catch","e","get_workordermaster_material","localStorage","getItem","IndeterminateCheckbox","React","ref","indeterminate","rest","defaultRef","resolvedRef","current","type","useTable","columns","useSortBy","useRowSelect","useResizeColumns","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","resetResizing","state","selectedRowIds","select","RowID","selected_asset","allowOutsideClick","MRStockno","map","item","label","itm_mst_stockno","itm_mst_desc","value","ITM_StockLocation","itm_loc_stk_loc","itm_loc_oh_qty","CostCenter","costcenter","descs","WKO_Labor_Account","account","get_workorder_status","className","onClick","Modal","onHide","centered","closeButton","Form","controlId","isClearable","options","onChange","required","target","placeholder","Button","variant","on","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","borderBottom","color","getResizerProps","isResizing","render","isSorted","isSortedDesc","getRowProps","original","col67","cells","cell","Supplier","setSupplier","selected_Supplier","setSelected_Supplier","TaxCode","setTaxCode","selected_TaxCode","setSelected_TaxCode","UOM","setUOM","selected_UOM","setSelected_UOM","ItemCost","setItemCost","setCostCenter","selected_CostCenter","setSelected_CostCenter","Account","setAccount","selected_Account","setSelected_Account","get_workordermaster_specialorder","supplier","sup_mst_supplier_cd","sup_mst_desc","ITM_Tax_Code","tax_mst_tax_cd","tax_mst_desc","ITM_Issue_UOM","uom_mst_uom","uom_mst_desc","col56","EstimateCost","setEstimateCost","get_workordermaster_outsourcecontract","EmployeeID","setEmployeeID","setSelected_EmployeeID","Craft","setSelected_Craft","Date","HourType","setHourType","setSelected_HourType","setActualHour","CreditCostCenter","setCreditCostCenter","setSelected_CreditCostCenter","CreditAccount","setCreditAccount","setSelected_CreditAccount","get_workordermaster_timecard","Employee_Supervisor_Id","emp_mst_empl_id","emp_mst_name","HoursType","hours_type_cd","list","setList","newItem","length","text1","text2","filter","index","selected","MiscDate","setMiscDate","Quantity","setQuantity","get_workordermaster_misc","Moment","format","get_workordermaster_statusaudit","props","validated","Button_save","setButton_save","setRowID","WorkOrderNo","setWorkOrderNo","WorkOrderNo_disabled","setWorkOrderNo_disabled","Asset_No","setAsset_No","selected_Asset_No","setSelected_Asset_No","Status","setStatus","selected_Status","setSelected_Status","Asset_Status","setAsset_Status","selected_Asset_Status","setSelected_Asset_Status","Plan_Priority","setPlan_Priority","selected_Plan_Priority","setSelected_Plan_Priority","Asset_Group_Code","setAsset_Group_Code","selected_Asset_Group_Code","setSelected_Asset_Group_Code","utcOffset","OriginationDate","setOriginationDate","Charge_Cost_Center","setCharge_Cost_Center","selected_Charge_Cost_Center","setSelected_Charge_Cost_Center","DueDate","setDueDate","Work_Area","setWork_Area","selected_Work_Area","setSelected_Work_Area","Originator","setOriginator","selected_Originator","setSelected_Originator","Asset_Level","setAsset_Level","selected_Asset_Level","setSelected_Asset_Level","Phone","setPhone","Asset_Location","setAsset_Location","selected_Asset_Location","setSelected_Asset_Location","Fault_Code","setFault_Code","selected_Fault_Code","setSelected_Fault_Code","CorrectiveAction","setCorrectiveAction","Project_ID","setProject_ID","selected_Project_ID","setSelected_Project_ID","Original_Periority","setOriginal_Periority","selected_Original_Periority","setSelected_Original_Periority","Cause_Code","setCause_Code","selected_Cause_Code","setSelected_Cause_Code","ScheduleDate","setScheduleDate","Action_Code","setAction_Code","selected_Action_Code","setSelected_Action_Code","ExceptionDate","setExceptionDate","Delay_Code","setDelay_Code","selected_Delay_Code","setSelected_Delay_Code","StatusChangeDate","setStatusChangeDate","Work_Type","setWork_Type","selected_Work_Type","setSelected_Work_Type","CompletionDate","setCompletionDate","Work_Class","setWork_Class","selected_Work_Class","setSelected_Work_Class","CloseDate","setCloseDate","Work_Group","setWork_Group","selected_Work_Group","setSelected_Work_Group","Supervisor_ID","setSupervisor_ID","selected_Supervisor_ID","setSelected_Supervisor_ID","Planner","setPlanner","selected_Planner","setSelected_Planner","Approver","setApprover","selected_Approver","setSelected_Approver","Assign_To","setAssign_To","selected_Assign_To","setSelected_Assign_To","Permanent_ID","setPermanent_ID","Temporary_Asset","setTemporary_Asset","CheckBox_Temporary_Asset","setCheckBox_Temporary_Asset","Approved","setApproved","CheckBox_Approved","setCheckBox_Approved","Safety","setSafety","CheckBox_Safety","setCheckBox_Safety","Customer_Code","setCustomer_Code","selected_Customer_Code","setSelected_Customer_Code","Labor_Account","setLabor_Account","selected_Labor_Account","setSelected_Labor_Account","Material_Account","setMaterial_Account","selected_Material_Account","setSelected_Material_Account","Credit_Cost_Center","setCredit_Cost_Center","selected_Credit_Cost_Center","setSelected_Credit_Cost_Center","Contract_Account","setContract_Account","selected_Contract_Account","setSelected_Contract_Account","Miscellaneous_Account","setMiscellaneous_Account","selected_Miscellaneous_Account","setSelected_Miscellaneous_Account","UDFNote1","setUDFNote1","UDFText_1","setUDFText_1","UDFText_2","setUDFText_2","UDFText_3","setUDFText_3","UDFText_4","setUDFText_4","UDFText_5","setUDFText_5","UDFText_6","setUDFText_6","UDFText_7","setUDFText_7","UDFText_8","setUDFText_8","UDFText_9","setUDFText_9","UDFText_10","setUDFText_10","UDFNumber_1","setUDFNumber_1","UDFNumber_2","setUDFNumber_2","UDFNumber_3","setUDFNumber_3","UDFNumber_4","setUDFNumber_4","UDFNumber_5","setUDFNumber_5","UDFDate_1","setUDFDate_1","UDFDate_2","setUDFDate_2","UDFDate_3","setUDFDate_3","UDFDate_4","setUDFDate_4","UDFDate_5","setUDFDate_5","AutoNumring","setAutoNumring","get_workordermaster_select","JSON","stringify","wko_mst_wo_no","wko_mst_assetno","wko_mst_status","wko_mst_asset_status","wko_mst_plan_priority","wko_mst_asset_group_code","wko_mst_org_date","date","trim","wko_mst_chg_costcenter","wko_mst_due_date","wko_mst_work_area","wko_mst_originator","wko_mst_asset_level","wko_mst_phone","wko_mst_asset_location","wko_mst_flt_code","wko_mst_descs","wko_det_corr_action","wko_mst_project_id","wko_mst_orig_priority","wko_det_cause_code","wko_det_sched_date","wko_det_act_code","wko_det_exc_date","wko_det_delay_cd","wko_det_sc_date","wko_det_work_type","wko_det_cmpl_date","wko_det_work_class","wko_det_clo_date","wko_det_work_grp","wko_det_supv_id","wko_det_planner","wko_det_approver","wko_det_assign_to","wko_det_perm_id","wko_det_temp_asset","wko_det_approved","wko_det_safety","wko_det_customer_cd","wko_det_laccount","wko_det_maccount","wko_det_crd_costcenter","wko_det_caccount","wko_det_saccount","wko_det_note1","wko_det_varchar1","wko_det_varchar2","wko_det_varchar3","wko_det_varchar4","wko_det_varchar5","wko_det_varchar6","wko_det_varchar7","wko_det_varchar8","wko_det_varchar9","wko_det_varchar10","wko_det_numeric1","wko_det_numeric2","wko_det_numeric3","wko_det_numeric4","wko_det_numeric5","wko_det_datetime1","wko_det_datetime2","wko_det_datetime3","wko_det_datetime4","wko_det_datetime5","Wko_Auto_numbering","cnt_mst_numbering","WKO_Original_Periority","wrk_pri_pri_cd","wrk_pri_desc","WKO_Status","wrk_sts_status","wrk_sts_desc","Priority","WKO_Asset_No","ast_mst_asset_no","ast_mst_asset_status","AssetGroupCode","ast_grp_grp_cd","ast_grp_desc","AssetStatus","ast_sts_status","ast_sts_desc","WKO_Work_Area","mst_war_work_area","mst_war_desc","AssetLevel","ast_lvl_ast_lvl","ast_lvl_desc","FaultCode","wrk_flt_fault_cd","wrk_flt_desc","AssetLocation","ast_loc_ast_loc","ast_loc_desc","WKO_Originator","WKO_ProjectID","prj_mst_prj_cd","prj_mst_desc","CasuseCode","wrk_ccd_cause_cd","wrk_ccd_desc","ActionCode","wrk_act_action_cd","wrk_act_desc","WKO_Delay_Code","wrk_dcd_delay_cd","wrk_dcd_desc","WKO_Work_Type","wrk_typ_typ_cd","wrk_typ_desc","WKO_Work_Class","wrk_cls_cls_cd","wrk_cls_desc","WKO_Work_Group","wrk_grp_grp_cd","wrk_grp_desc","WKO_Planner","WKO_Approver","WKO_AssignTO","Customer_code","cus_mst_customer_cd","cus_mst_desc","onClickChange","position","showConfirmButton","timer","New_WorkOrder","resetData","Update_WorkOrder","get_date","moment","emp_mst_login_id","split","date_of_origination","date_of_due","date_of_schedule","date_of_exception","date_of_status_change","date_of_completion","date_of_close","date_1","date_2","date_3","date_4","date_5","json_workorder","class","fontSize","disabled","selectedOption","json","ast_mst_asset_grpcode","ast_mst_cost_center","ast_mst_work_area","ast_mst_ast_lvl","ast_mst_asset_locn","ast_mst_wrk_grp","get_assetmaster_select","styles","control","singleValue","as","autoPlay","autoPlayInterval","animationDuration","animationType","infinite","touchTracking","disableDotsControls","src","require","alt","Tabs","defaultActiveKey","Tab","eventKey","checked","name","lang","htmlFor"],"sourceRoot":""}